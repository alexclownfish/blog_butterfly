<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>创建lvm格式磁盘分区</title>
      <link href="posts/43435.html"/>
      <url>posts/43435.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="最近遇到云服务器添加磁盘，并分区为lvm格式，记录一下"><a href="#最近遇到云服务器添加磁盘，并分区为lvm格式，记录一下" class="headerlink" title="最近遇到云服务器添加磁盘，并分区为lvm格式，记录一下"></a>最近遇到云服务器添加磁盘，并分区为lvm格式，记录一下</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l </span><br><span class="line">--可以看到新硬盘sdb 或其它硬盘名</span><br></pre></td></tr></table></figure><p>1.为新的硬盘分区 （ 这里要注意下你自己的硬盘名称， 我这里是 /dev/vdb）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fdisk &#x2F;dev&#x2F;vdb</span><br><span class="line"></span><br><span class="line">command (m for help):   n      n 命令用于新建一个分区</span><br><span class="line">e extended</span><br><span class="line">p primary partition(1-4): p      p 创建一个主分区</span><br><span class="line">partition number(1-4): 1             分区号为1</span><br><span class="line">First Cylinder(1-XXXXX,default 1): 1  直接默认按回车</span><br><span class="line">Last Cylinder: XXXXX        直接默认按回车</span><br><span class="line">command (m for help): t          修改磁盘类别</span><br><span class="line">command (m for help):8e       8e表示LVM 分区格式</span><br><span class="line">command (m for help): w    修改写入分区表后退出</span><br></pre></td></tr></table></figure><p>2.创建PV</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate &#x2F;dev&#x2F;vdb1（如无法创建提示无命令：yum -y install lvm2） </span><br></pre></td></tr></table></figure><p>3.创建VG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgcreate VolGroup &#x2F;dev&#x2F;vdb1</span><br></pre></td></tr></table></figure><p>4.激活VG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgchange -a y VolGroup</span><br></pre></td></tr></table></figure><p>4.创建LV</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -L 499.99G -n Lv_data VolGroup</span><br></pre></td></tr></table></figure><p>5.格式化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 &#x2F;dev&#x2F;VolGroup&#x2F;Lv_data</span><br></pre></td></tr></table></figure><p>6.创建需要挂载的目录名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data</span><br></pre></td></tr></table></figure><p>7、到指定目录挂载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t ext4 &#x2F;dev&#x2F;VolGroup&#x2F;Lv_data &#x2F;data</span><br></pre></td></tr></table></figure><p>8.开机自动挂载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &gt;&gt; &#x2F;dev&#x2F;VolGroup&#x2F;Lv_data &#x2F;data ext4 defaults 0 0 &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创建lvm格式磁盘分区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s+jenkins实现CI，CD</title>
      <link href="posts/63478.html"/>
      <url>posts/63478.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h3 id="k8s-master-tomcat启动jenkins服务"><a href="#k8s-master-tomcat启动jenkins服务" class="headerlink" title="k8s-master tomcat启动jenkins服务"></a>k8s-master tomcat启动jenkins服务</h3><p>1.验证java环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# java -version</span><br><span class="line">openjdk version &quot;1.8.0_292&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_292-b10)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)</span><br></pre></td></tr></table></figure><p>2.下载tomcat，jenkins安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;apache&#x2F;tomcat&#x2F;tomcat-8&#x2F;v8.5.69&#x2F;bin&#x2F;apache-tomcat-8.5.69.tar.gz</span><br><span class="line">wget http:&#x2F;&#x2F;mirrors.jenkins.io&#x2F;war-stable&#x2F;latest&#x2F;jenkins.war</span><br></pre></td></tr></table></figure><p>3.配置环境变量<br>vim /etc/profile 打开配置文件，按 i 进入编辑模式，在profile文件尾部 unset -f pathmunge 后面添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">unset i</span><br><span class="line">unset -f pathmunge</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_221</span><br><span class="line">export JRE_HOME&#x3D;$&#123;JAVA_HOME&#125;&#x2F;jre</span><br><span class="line">export CATALINA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;tomcat8</span><br><span class="line">export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;lib:$&#123;JRE_HOME&#125;&#x2F;lib:$CLASSPATH</span><br><span class="line">export JAVA_PATH&#x3D;$&#123;JAVA_HOME&#125;&#x2F;bin:$&#123;JRE_HOME&#125;&#x2F;bin:$&#123;CATALINA_HOME&#125;&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:$&#123;JAVA_PATH&#125;:$PATH</span><br></pre></td></tr></table></figure><p>4.配置tomcat并启动jenkins</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;tomcat8</span><br><span class="line">tar -zxvf apache-tomcat-8.5.37.tar.gz -C &#x2F;usr&#x2F;local&#x2F;tomcat8</span><br><span class="line">mv jenkins.war &#x2F;usr&#x2F;local&#x2F;tomcat8&#x2F;webapps</span><br><span class="line">#启动tomcat</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;tomcat8&#x2F;bin&#x2F;startup.sh</span><br><span class="line">#停止tomcat</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;tomcat8&#x2F;bin&#x2F;shutdown.sh</span><br></pre></td></tr></table></figure><p><a href="http://localhost:8080/">http://localhost:8080</a> 访问jenkins</p><h3 id="自动化脚本"><a href="#自动化脚本" class="headerlink" title="自动化脚本"></a>自动化脚本</h3><p>在jenkins的后端准备好自动化部署脚本k8s_auto_deploy.sh，事先做好公私钥认证，使得jenkins能够访问k8s-master</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">URL&#x3D;http:&#x2F;&#x2F;106.12.189.57&#x2F;root&#x2F;java-demo.git</span><br><span class="line">Starttime&#x3D;&#96;date +&quot;%Y-%m-%d_%H-%M-%S&quot;&#96;</span><br><span class="line">Method&#x3D;$1</span><br><span class="line">Branch&#x3D;$2</span><br><span class="line">t1&#x3D;&#96;date +&quot;%Y-%m-%d %H:%M:%S&quot;&#96;</span><br><span class="line"></span><br><span class="line">     #代码克隆至jenkins后端</span><br><span class="line">clone_code()&#123;</span><br><span class="line">    cd &#x2F;root&#x2F;.jenkins&#x2F;workspace&#x2F;jenkins_project &amp;&amp; git clone -b $Branch $&#123;URL&#125;&amp;&amp; echo &quot;Clone Finished&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> #代码打包压缩并远程推送至k8s-master-1的nginx镜像制作目录</span><br><span class="line">Pack_scp()&#123;</span><br><span class="line">    cd &#x2F;root&#x2F;.jenkins&#x2F;workspace&#x2F;jenkins_project&#x2F;java-demo&#x2F; &amp;&amp; tar cvzf java-demo.tar.gz * &amp;&amp; echo Package Finished</span><br><span class="line">    cp java-demo.tar.gz &#x2F;data&#x2F;Dockerfile&#x2F;java-demo&#x2F; &amp;&amp; cd &#x2F;data&#x2F;Dockerfile&#x2F;java-demo&#x2F; &amp;&amp; tar xvf java-demo.tar.gz &amp;&amp; rm -f java-demo.tar.gz</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> #远程操作k8s-master-1节点，进行镜像制作并推送至harbor镜像仓库</span><br><span class="line">build_iamge()&#123;</span><br><span class="line">    cd &#x2F;data&#x2F;Dockerfile&#x2F;java-demo&#x2F; &amp;&amp; .&#x2F;build.sh $&#123;BUILD_NUMBER&#125; &amp;&amp; echo &#39;build_image and push_harbor success!&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    #对k8s集群中的nginx的pod应用进行升级</span><br><span class="line">app_update()&#123;</span><br><span class="line">    sed -ri &#39;s@image: .*@image: 106.12.37.109&#x2F;library&#x2F;tomcat-java-demo:$&#123;BUILD_NUMBER&#125;@g&#39;  &#x2F;data&#x2F;mainfest&#x2F;deployment.yaml</span><br><span class="line">    kubectl set image deployment&#x2F;java-demo java-demo&#x3D;106.12.37.109&#x2F;library&#x2F;tomcat-java-demo:$&#123;BUILD_NUMBER&#125; -n default --record&#x3D;true</span><br><span class="line">                t2&#x3D;&#96;date +&quot;%Y-%m-%d %H:%M:%S&quot;&#96;</span><br><span class="line">    start_T&#x3D;&#96;date --date&#x3D;&quot;$&#123;t1&#125;&quot; +%s&#96;</span><br><span class="line">    end_T&#x3D;&#96;date --date&#x3D;&quot;$&#123;t2&#125;&quot; +%s&#96;</span><br><span class="line">    total_time&#x3D;$((end_T-start_T))</span><br><span class="line">    echo &quot;deploy success,it has been spent $&#123;total_time&#125; seconds&quot;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    #k8s集群中的pod应用进行回滚</span><br><span class="line">app_rollback()&#123;</span><br><span class="line">     kubectl rollout undo deployment&#x2F;java-demo  -n default</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    #进行k8s集群自动部署的主函数</span><br><span class="line">main()&#123;</span><br><span class="line">    case $Method in </span><br><span class="line">    deploy)</span><br><span class="line">        clone_code</span><br><span class="line">        Pack_scp</span><br><span class="line">        build_iamge</span><br><span class="line">        app_update</span><br><span class="line">    ;;</span><br><span class="line">    rollback)</span><br><span class="line">        app_rollback</span><br><span class="line">    ;;</span><br><span class="line">    esac</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#执行主函数命令</span><br><span class="line">main $1 $2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>构建镜像代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#镜像版本变量</span><br><span class="line">version&#x3D;$1</span><br><span class="line">#编译项目代码</span><br><span class="line">mvn clean package -Dmaven.test.skip&#x3D;true</span><br><span class="line">#解压项目代码至新文件夹</span><br><span class="line">unzip target&#x2F;*.war -d target&#x2F;ROOT</span><br><span class="line">#编写Dockerfile</span><br><span class="line">cat &gt; Dockerfile &lt;&lt;EOF</span><br><span class="line">FROM lizhenliang&#x2F;tomcat   </span><br><span class="line">LABEL maintainer alex</span><br><span class="line">RUN rm -rf &#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;*</span><br><span class="line">COPY target&#x2F;ROOT &#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT </span><br><span class="line">EOF</span><br><span class="line">#build镜像并推送</span><br><span class="line">docker build -t 106.12.37.109&#x2F;library&#x2F;tomcat-java-demo:$version .</span><br><span class="line">docker push 106.12.37.109&#x2F;library&#x2F;tomcat-java-demo:$version</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参数化构建"><a href="#参数化构建" class="headerlink" title="参数化构建"></a>参数化构建</h2><p>web端访问jenkins<br><img src="https://img-blog.csdnimg.cn/561f5a71b3aa4a8aa21c8a228c567150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"><br>创建一个jenkins_project项目，并编辑配置<br><img src="https://img-blog.csdnimg.cn/9f4f2c9fc19a4f3fbab8e4c9a20ff14d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/b194cf37cb1c432899651f832f898f59.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"><br>将jenkins的公钥配置到gitlab服务的web端，使得jenkins可以直接拉取代码无需认证<img src="https://img-blog.csdnimg.cn/4e21fcf761fb48bb904d5a1c8e4508bf.png" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/689145a726d54c6393aaad1f6ff12ff0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"><br>或者使用https方式来取代码 ，我测试中用的是https，生产中最好用ssh<br>后续验证就不写了</p>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s+jenkins实现CI，CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alertmanager钉钉报警</title>
      <link href="posts/6543.html"/>
      <url>posts/6543.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="钉钉报警插件已打包在镜像，不想麻烦的可以直接pull"><a href="#钉钉报警插件已打包在镜像，不想麻烦的可以直接pull" class="headerlink" title="钉钉报警插件已打包在镜像，不想麻烦的可以直接pull"></a>钉钉报警插件已打包在镜像，不想麻烦的可以直接pull</h1><h2 id="其他两个平台实时同步"><a href="#其他两个平台实时同步" class="headerlink" title="其他两个平台实时同步"></a>其他两个平台实时同步</h2><ul><li>个人Blog：<a href="https://alexcld.com/">https://alexcld.com</a></li><li>CSDN：<a href="https://blog.csdn.net/weixin_45509582">https://blog.csdn.net/weixin_45509582</a></li></ul><p>加密token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -n &#39;token&#39; | base64</span><br></pre></td></tr></table></figure><p>alertGo-deployment.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: dd-token</span><br><span class="line">  namespace: ops</span><br><span class="line">type: Opaque</span><br><span class="line">data:</span><br><span class="line">  token: &#39;加密后的token&#39;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: alertgo</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: alertgo</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: alertgo</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: alertgo</span><br><span class="line">          image: alexcld&#x2F;alertgo:v3</span><br><span class="line">          env:</span><br><span class="line">          - name: token</span><br><span class="line">            valueFrom:</span><br><span class="line">              secretKeyRef:</span><br><span class="line">                name: dd-token</span><br><span class="line">                key: token</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8088</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              path: &#x2F;</span><br><span class="line">              port: 8088</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            periodSeconds: 10</span><br><span class="line">            successThreshold: 1</span><br><span class="line">            failureThreshold: 3</span><br><span class="line">            timeoutSeconds: 1</span><br><span class="line">          readinessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              path: &#x2F;</span><br><span class="line">              port: 8088</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            periodSeconds: 10</span><br><span class="line">            successThreshold: 1</span><br><span class="line">            failureThreshold: 3</span><br><span class="line">            timeoutSeconds: 1</span><br><span class="line">          lifecycle:</span><br><span class="line">            preStop:</span><br><span class="line">              exec:</span><br><span class="line">                command: [&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-c&quot;,&quot;sleep 20&quot;]</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: alertgo</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: alertgo</span><br><span class="line">  ports:</span><br><span class="line">    - port: 80</span><br><span class="line">      targetPort: 8088</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kubectl apply -f alertGo-deployment.yaml</p><h2 id="修改alertmanager-configmap-yaml"><a href="#修改alertmanager-configmap-yaml" class="headerlink" title="修改alertmanager-configmap.yaml"></a>修改alertmanager-configmap.yaml</h2><p><img src="https://img-blog.csdnimg.cn/a516c430f9564610aae3e311fb999fd0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webhook_configs:</span><br><span class="line">      - url: &#39;http:&#x2F;&#x2F;clusterIP&#x2F;Alert&#39;</span><br><span class="line">        send_resolved: true</span><br></pre></td></tr></table></figure><p>至此完成</p><h1 id="go环境部署及打包钉钉报警插件"><a href="#go环境部署及打包钉钉报警插件" class="headerlink" title="go环境部署及打包钉钉报警插件"></a>go环境部署及打包钉钉报警插件</h1><h2 id="其他两个平台实时同步-1"><a href="#其他两个平台实时同步-1" class="headerlink" title="其他两个平台实时同步"></a>其他两个平台实时同步</h2><ul><li>个人Blog：<a href="https://alexcld.com/">https://alexcld.com</a></li><li>CSDN：<a href="https://blog.csdn.net/weixin_45509582">https://blog.csdn.net/weixin_45509582</a><h2 id="linux安装go1-13-10"><a href="#linux安装go1-13-10" class="headerlink" title="linux安装go1.13.10"></a>linux安装go1.13.10</h2></li></ul><p>下载解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt &amp;&amp; wget https:&#x2F;&#x2F;golang.org&#x2F;dl&#x2F;go1.13.10.linux-amd64.tar.gz</span><br><span class="line">#解压至&#x2F;usr&#x2F;local</span><br><span class="line">tar -zxvf go1.13.10.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>创建/opt/gocode/{src,bin,pkg}，用于设置GOPATH为/opt/gocode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;opt&#x2F;gocode&#x2F;&#123;src,bin,pkg&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;opt&#x2F;gocode&#x2F;</span><br><span class="line">├── bin</span><br><span class="line">├── pkg</span><br><span class="line">└── src</span><br></pre></td></tr></table></figure><p>修改/etc/profile系统环境变量文件，写入GOPATH信息以及go sdk路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT&#x3D;&#x2F;opt&#x2F;go           #Golang源代码目录，安装目录</span><br><span class="line">export GOPATH&#x3D;&#x2F;opt&#x2F;gocode        #Golang项目代码目录</span><br><span class="line">export PATH&#x3D;$GOROOT&#x2F;bin:$PATH    #Linux环境变量</span><br><span class="line">export GOBIN&#x3D;$GOPATH&#x2F;bin        #go install后生成的可执行命令存放路径</span><br><span class="line"># 保存退出后source一下</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>执行go version</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gocode]# go version</span><br><span class="line">go version go1.13.10 linux&#x2F;amd64</span><br></pre></td></tr></table></figure><h2 id="运行程序并打包"><a href="#运行程序并打包" class="headerlink" title="运行程序并打包"></a>运行程序并打包</h2><h3 id="安装gin-web框架"><a href="#安装gin-web框架" class="headerlink" title="安装gin web框架"></a>安装gin web框架</h3><p>爬过梯子的可以直接安装，不再赘述如何爬梯子，如果没有爬梯子的话 需要设置下GOPROXY</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">golang 1.13 可以直接执行：</span><br><span class="line"></span><br><span class="line">七牛云</span><br><span class="line">go env -w GO111MODULE&#x3D;on</span><br><span class="line">go env -w GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn,direct</span><br><span class="line"></span><br><span class="line">阿里云</span><br><span class="line">go env -w GO111MODULE&#x3D;on</span><br><span class="line">go env -w GOPROXY&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;goproxy&#x2F;,direct</span><br></pre></td></tr></table></figure><p>安装gin依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com&#x2F;gin-gonic&#x2F;gin</span><br></pre></td></tr></table></figure><p>创建go文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $GOPATH&#x2F;alertgo &amp;&amp; cd $GOPATH&#x2F;alertgo</span><br><span class="line">touch alertGo.go</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;bytes&quot;</span><br><span class="line">&quot;encoding&#x2F;json&quot;</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;net&#x2F;http&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">&quot;strings&quot;</span><br><span class="line">&quot;time&quot;</span><br><span class="line"></span><br><span class="line">&quot;github.com&#x2F;gin-gonic&#x2F;gin&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;const (</span><br><span class="line">&#x2F;&#x2F;webHook_Alert &#x3D; &quot;https:&#x2F;&#x2F;oapi.dingtalk.com&#x2F;robot&#x2F;send?access_token&#x3D;724402cd85e7e80aa5bbbb7d7a89c74db6a3a8bd8fac4c91923ed3f906664ba4&quot;</span><br><span class="line">&#x2F;&#x2F;)</span><br><span class="line">type Message struct &#123;</span><br><span class="line">MsgType string &#96;json:&quot;msgtype&quot;&#96;</span><br><span class="line">Text    struct &#123;</span><br><span class="line">Content               string &#96;json:&quot;content&quot;&#96;</span><br><span class="line">Mentioned_list        string &#96;json:&quot;mentioned_list&quot;&#96;</span><br><span class="line">Mentioned_mobile_list string &#96;json:&quot;mentioned_mobile_list&quot;&#96;</span><br><span class="line">&#125; &#96;json:&quot;text&quot;&#96;</span><br><span class="line">&#125;</span><br><span class="line">type Alert struct &#123;</span><br><span class="line">Labels      map[string]string &#96;json:&quot;labels&quot;&#96;</span><br><span class="line">Annotations map[string]string &#96;json:annotations&#96;</span><br><span class="line">StartsAt    time.Time         &#96;json:&quot;startsAt&quot;&#96;</span><br><span class="line">EndsAt      time.Time         &#96;json:&quot;endsAt&quot;&#96;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;通知消息结构体</span><br><span class="line">type Notification struct &#123;</span><br><span class="line">Version           string            &#96;json:&quot;version&quot;&#96;</span><br><span class="line">GroupKey          string            &#96;json:&quot;groupKey&quot;&#96;</span><br><span class="line">Status            string            &#96;json:&quot;status&quot;&#96;</span><br><span class="line">Receiver          string            &#96;json:receiver&#96;</span><br><span class="line">GroupLabels       map[string]string &#96;json:groupLabels&#96;</span><br><span class="line">CommonLabels      map[string]string &#96;json:commonLabels&#96;</span><br><span class="line">CommonAnnotations map[string]string &#96;json:commonAnnotations&#96;</span><br><span class="line">ExternalURL       string            &#96;json:externalURL&#96;</span><br><span class="line">Alerts            []Alert           &#96;json:alerts&#96;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取报警信息</span><br><span class="line">func getAlertInfo(notification Notification) string &#123;</span><br><span class="line">var m Message</span><br><span class="line">m.MsgType &#x3D; &quot;text&quot;</span><br><span class="line">&#x2F;&#x2F;告警消息</span><br><span class="line">&#x2F;&#x2F;重新定义报警消息</span><br><span class="line">var newbuffer bytes.Buffer</span><br><span class="line">&#x2F;&#x2F;定义恢复消息</span><br><span class="line">var recoverbuffer bytes.Buffer</span><br><span class="line">fmt.Println(notification)</span><br><span class="line">fmt.Println(notification.Status)</span><br><span class="line">if notification.Status &#x3D;&#x3D; &quot;resolved&quot; &#123;</span><br><span class="line">for _, alert :&#x3D; range notification.Alerts &#123;</span><br><span class="line">recoverbuffer.WriteString(fmt.Sprintf(&quot;状态已经恢复!!!!\n&quot;))</span><br><span class="line">recoverbuffer.WriteString(fmt.Sprintf(&quot; **项目: 恢复时间:**%s\n\n&quot;, alert.StartsAt.Add(8*time.Hour).Format(&quot;2006-01-02 15:04:05&quot;)))</span><br><span class="line">recoverbuffer.WriteString(fmt.Sprintf(&quot;项目: 告警主题: %s \n&quot;, alert.Annotations[&quot;summary&quot;]))</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">for _, alert :&#x3D; range notification.Alerts &#123;</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Start&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; \n&quot;))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;项目: 告警程序：prometheus_alert_email \n&quot;))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;项目: 告警级别: %s \n&quot;, alert.Labels[&quot;severity&quot;]))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;项目: 告警类型: %s \n&quot;, alert.Labels[&quot;alertname&quot;]))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;项目: 故障主机: %s \n&quot;, alert.Labels[&quot;instance&quot;]))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;项目: 告警主题: %s \n&quot;, alert.Annotations[&quot;summary&quot;]))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;项目: 告警详情: %s \n&quot;, alert.Annotations[&quot;description&quot;]))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot; **项目: 开始时间:**%s\n\n&quot;, alert.StartsAt.Add(8*time.Hour).Format(&quot;2006-01-02 15:04:05&quot;)))</span><br><span class="line">newbuffer.WriteString(fmt.Sprintf(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;End&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; \n&quot;))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if notification.Status &#x3D;&#x3D; &quot;resolved&quot; &#123;</span><br><span class="line">m.Text.Content &#x3D; recoverbuffer.String()</span><br><span class="line">&#125; else &#123;</span><br><span class="line">m.Text.Content &#x3D; newbuffer.String()</span><br><span class="line">&#125;</span><br><span class="line">jsons, err :&#x3D; json.Marshal(m)</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">fmt.Println(&quot;解析发送钉钉的信息有问题!!!!&quot;)</span><br><span class="line">&#125;</span><br><span class="line">resp :&#x3D; string(jsons)</span><br><span class="line">return resp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;钉钉报警</span><br><span class="line">func SendAlertDingMsg(msg string) &#123;</span><br><span class="line">defer func() &#123;</span><br><span class="line">if err :&#x3D; recover(); err !&#x3D; nil &#123;</span><br><span class="line">fmt.Println(&quot;err&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">token :&#x3D; os.Getenv(&quot;token&quot;)</span><br><span class="line">webHook_Alert :&#x3D; &quot;https:&#x2F;&#x2F;oapi.dingtalk.com&#x2F;robot&#x2F;send?access_token&#x3D;&quot; + token</span><br><span class="line">fmt.Println(&quot;开始发送报警消息!!!&quot;)</span><br><span class="line">fmt.Println(webHook_Alert)</span><br><span class="line">&#x2F;&#x2F;content :&#x3D; &#96;&#123;&quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line">&#x2F;&#x2F;&quot;text&quot;: &#123;&quot;content&quot;: &quot;&#96; + msg + &#96;&quot;&#125;</span><br><span class="line">&#x2F;&#x2F;&#125;&#96;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;创建一个请求</span><br><span class="line">req, err :&#x3D; http.NewRequest(&quot;POST&quot;, webHook_Alert, strings.NewReader(msg))</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">fmt.Println(&quot;钉钉报警请求异常&quot;)</span><br><span class="line">&#125;</span><br><span class="line">client :&#x3D; &amp;http.Client&#123;&#125;</span><br><span class="line">&#x2F;&#x2F;设置请求头</span><br><span class="line">req.Header.Set(&quot;Content-Type&quot;, &quot;application&#x2F;json; charset&#x3D;utf-8&quot;)</span><br><span class="line">&#x2F;&#x2F;发送请求</span><br><span class="line">resp, err :&#x3D; client.Do(req)</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">&#x2F;&#x2F; handle error</span><br><span class="line">fmt.Println(err)</span><br><span class="line">fmt.Println(&quot;顶顶报发送异常!!!&quot;)</span><br><span class="line">&#125;</span><br><span class="line">defer resp.Body.Close()</span><br><span class="line">&#125;</span><br><span class="line">func AlertInfo(c *gin.Context) &#123;</span><br><span class="line">var notification Notification</span><br><span class="line">fmt.Println(&quot;接收到的信息是....&quot;)</span><br><span class="line">fmt.Println(notification)</span><br><span class="line">err :&#x3D; c.BindJSON(&amp;notification)</span><br><span class="line">fmt.Printf(&quot;%#v&quot;, notification)</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">fmt.Println(&quot;绑定信息错误!!!&quot;)</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;&quot;error&quot;: err.Error()&#125;)</span><br><span class="line">return</span><br><span class="line">&#125; else &#123;</span><br><span class="line">fmt.Println(&quot;绑定信息成功&quot;)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(&quot;绑定信息成功!!!&quot;)</span><br><span class="line">msg :&#x3D; getAlertInfo(notification)</span><br><span class="line">fmt.Println(&quot;打印的信息是.....&quot;)</span><br><span class="line">fmt.Println(msg)</span><br><span class="line">SendAlertDingMsg(msg)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">t :&#x3D; gin.Default()</span><br><span class="line">t.POST(&quot;&#x2F;Alert&quot;, AlertInfo)</span><br><span class="line">t.GET(&quot;&#x2F;&quot;, func(c *gin.Context) &#123;</span><br><span class="line">c.String(http.StatusOK, &#96;&lt;h1&gt;关于alertmanager实现钉钉报警的方法V6！！！&lt;&#x2F;h1&gt;&#96;+&quot;\n新增了报警恢复机制！！！&quot;)</span><br><span class="line">&#125;)</span><br><span class="line">t.Run(&quot;:8088&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后将go文件打包为linux二进制可运行程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build alertGo.go</span><br></pre></td></tr></table></figure><p>运行alertGo程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">###赋权</span><br><span class="line">chmod 775 alertGo</span><br><span class="line">###后台运行</span><br><span class="line">nohup &#x2F;root&#x2F;prometheus&#x2F;alertGo&#x2F;alertGo &gt; alertGo.log 2&gt;&amp;1 &amp;</span><br><span class="line">###查看端口进程</span><br><span class="line">lsof -i:8088</span><br><span class="line">###查看日志</span><br><span class="line">tail -f alertGo.log </span><br></pre></td></tr></table></figure><h2 id="修改alertmanager-configmap-yaml-1"><a href="#修改alertmanager-configmap-yaml-1" class="headerlink" title="修改alertmanager-configmap.yaml"></a>修改alertmanager-configmap.yaml</h2><p><img src="https://img-blog.csdnimg.cn/a516c430f9564610aae3e311fb999fd0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webhook_configs:</span><br><span class="line">      - url: &#39;http:&#x2F;&#x2F;xxxxx:8088&#x2F;Alert&#39;</span><br><span class="line">        send_resolved: true</span><br></pre></td></tr></table></figure><p>热更新prometheus</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f alertmanager-configmap.yaml</span><br><span class="line">###alertmanager clusterIP</span><br><span class="line">curl -X POST http:&#x2F;&#x2F;10.1.229.17&#x2F;-&#x2F;reload  </span><br></pre></td></tr></table></figure><p>然后触发报警，钉钉就可以正常收取了，<br><img src="https://img-blog.csdnimg.cn/dfbbf2efe4b446c1bc71a20a54855180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在此感谢<a href="https://blog.51cto.com/luoguoling">大佬</a>的代码</p>]]></content>
      
      
      <categories>
          
          <category> monitor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alertmanager钉钉报警 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>监控体系部署之后走上了grafana模板踩坑之路</title>
      <link href="posts/267647.html"/>
      <url>posts/267647.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="半天踩坑，排坑，最后填坑，修改字段。最后效果如下，可到我的github参考"><a href="#半天踩坑，排坑，最后填坑，修改字段。最后效果如下，可到我的github参考" class="headerlink" title="半天踩坑，排坑，最后填坑，修改字段。最后效果如下，可到我的github参考"></a>半天踩坑，排坑，最后填坑，修改字段。最后效果如下，可到我的github参考</h2><h2 id="运维资源全览"><a href="#运维资源全览" class="headerlink" title="运维资源全览"></a>运维资源全览</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/4421d1b06e96c6a63466ac8b2122842b.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/img_convert/21295f99b85da5b1af1111d114f62119.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/img_convert/545115d126254153c60a1c97433772cb.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/img_convert/c9e875ec36d1660b992abffa5aed0e73.png" alt="在这里插入图片描述"></p><h2 id="节点资源总览"><a href="#节点资源总览" class="headerlink" title="节点资源总览"></a>节点资源总览</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/db7cb62d9e3919aa68ad329182e19ae3.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/img_convert/4e04c28b6b3db34d0c030510faa7ff11.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/img_convert/8650c4c031b6666889e3011527d9583b.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> monitor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 监控体系部署之后走上了grafana模板踩坑之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus邮件告警自定义模板的触发时间为utc的解决方法</title>
      <link href="posts/24142.html"/>
      <url>posts/24142.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>背景<br>Prometheus 邮件告警自定义模板的默认使用的是utc时间。</p><p>解决<br>如果要改成北京时间的话可以这么改：</p><p>原来的告警模板的触发时间是这样子的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">触发时间: &#123;&#123; .StartsAt.Format &quot;2020-01-02 15:04:05&quot; &#125;&#125;</span><br></pre></td></tr></table></figure><p>我们可以改成这样子的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; (.StartsAt.Add 28800e9).Format &quot;2020-01-02 15:04:05&quot; &#125;&#125;</span><br></pre></td></tr></table></figure><p>其中 Add 28800e9  就是表示加8个小时。</p>]]></content>
      
      
      <categories>
          
          <category> monitor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus邮件告警自定义模板的触发时间为utc的解决方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>prometheus+grafana+alertmanager监控k8s无坑版</title>
      <link href="posts/34136.html"/>
      <url>posts/34136.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="prometheus-grafana-alertmanager监控k8s无坑版"><a href="#prometheus-grafana-alertmanager监控k8s无坑版" class="headerlink" title="prometheus+grafana+alertmanager监控k8s无坑版"></a>prometheus+grafana+alertmanager监控k8s无坑版</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>k8s搭建完成并正常使用的基础上，需要有一个动态存储<br>我的环境：<br>k8s版本    | Kubeadm部署 v1.18.0<br>——– | —–<br>k8s-master  | 172.22.254.57<br>k8s-node1  | 172.22.254.62<br>k8s-node2  | 172.22.254.63(nfs服务端)<br>StorageClass | nfs-storage</p><p>k8s-master有污点，如果需要监控到master，去除污点即可（非必要）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes node1 key1&#x3D;value1:NoSchedule-</span><br></pre></td></tr></table></figure><p>prometheus-rules中的规则字段可能随着版本更新出现变化，如有变化可以通知我，我实时更新文档。目前规则内的字段在此版本我已更新过。放心使用</p><p>还有一个小细节：prmetheus跟alertmanager的configmap是支持热更新的。可以用以下命令来热更新，可能执行刷新的时候会有点儿久，等一下就好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http:&#x2F;&#x2F;ClusterIP:PORT&#x2F;-&#x2F;reload</span><br></pre></td></tr></table></figure><p>资源下载：<a href="https://github.com/alexclownfish/k8s-monitor">https://github.com/alexclownfish/k8s-monitor</a></p><h2 id="部署正文"><a href="#部署正文" class="headerlink" title="部署正文"></a>部署正文</h2><h3 id="创建ops命名空间"><a href="#创建ops命名空间" class="headerlink" title="创建ops命名空间"></a>创建ops命名空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create ns ops</span><br></pre></td></tr></table></figure><h3 id="prometheus-yaml文件"><a href="#prometheus-yaml文件" class="headerlink" title="prometheus yaml文件"></a>prometheus yaml文件</h3><h4 id="prometheus配置文件-prometheus-configmap-yaml"><a href="#prometheus配置文件-prometheus-configmap-yaml" class="headerlink" title="prometheus配置文件 prometheus-configmap.yaml"></a>prometheus配置文件 prometheus-configmap.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-config</span><br><span class="line">  namespace: ops </span><br><span class="line">data:</span><br><span class="line">  prometheus.yml: |</span><br><span class="line">    rule_files:</span><br><span class="line">    - &#x2F;etc&#x2F;config&#x2F;rules&#x2F;*.rules</span><br><span class="line"></span><br><span class="line">    scrape_configs:</span><br><span class="line">    - job_name: prometheus</span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - localhost:9090</span><br><span class="line"></span><br><span class="line">    - job_name: kubernetes-apiservers</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - action: keep</span><br><span class="line">        regex: default;kubernetes;https</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_namespace</span><br><span class="line">        - __meta_kubernetes_service_name</span><br><span class="line">        - __meta_kubernetes_endpoint_port_name</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">        insecure_skip_verify: true</span><br><span class="line">      bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line"> </span><br><span class="line">    - job_name: kubernetes-nodes-kubelet</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: node  # 发现集群中的节点</span><br><span class="line">      relabel_configs:</span><br><span class="line">      # 将标签(.*)作为新标签名，原有值不变</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">        insecure_skip_verify: true</span><br><span class="line">      bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line"></span><br><span class="line">    - job_name: kubernetes-nodes-cadvisor</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: node</span><br><span class="line">      relabel_configs:</span><br><span class="line">      # 将标签(.*)作为新标签名，原有值不变</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">      # 实际访问指标接口 https:&#x2F;&#x2F;NodeIP:10250&#x2F;metrics&#x2F;cadvisor，这里替换默认指标URL路径</span><br><span class="line">      - target_label: __metrics_path__</span><br><span class="line">        replacement: &#x2F;metrics&#x2F;cadvisor</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">        insecure_skip_verify: true</span><br><span class="line">      bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line"></span><br><span class="line">    - job_name: kubernetes-service-endpoints</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints  # 从Service列表中的Endpoint发现Pod为目标</span><br><span class="line">      relabel_configs:</span><br><span class="line">      # Service没配置注解prometheus.io&#x2F;scrape的不采集</span><br><span class="line">      - action: keep</span><br><span class="line">        regex: true</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_service_annotation_prometheus_io_scrape</span><br><span class="line">      # 重命名采集目标协议</span><br><span class="line">      - action: replace</span><br><span class="line">        regex: (https?)</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_service_annotation_prometheus_io_scheme</span><br><span class="line">        target_label: __scheme__</span><br><span class="line">      # 重命名采集目标指标URL路径</span><br><span class="line">      - action: replace</span><br><span class="line">        regex: (.+)</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_service_annotation_prometheus_io_path</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">      # 重命名采集目标地址</span><br><span class="line">      - action: replace</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: $1:$2</span><br><span class="line">        source_labels:</span><br><span class="line">        - __address__</span><br><span class="line">        - __meta_kubernetes_service_annotation_prometheus_io_port</span><br><span class="line">        target_label: __address__</span><br><span class="line">      # 将K8s标签(.*)作为新标签名，原有值不变</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      # 生成命名空间标签</span><br><span class="line">      - action: replace</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_namespace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      # 生成Service名称标签</span><br><span class="line">      - action: replace</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_service_name</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line"></span><br><span class="line">    - job_name: kubernetes-pods</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: pod   # 发现所有Pod为目标</span><br><span class="line">      # 重命名采集目标协议</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - action: keep</span><br><span class="line">        regex: true</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_pod_annotation_prometheus_io_scrape</span><br><span class="line">      # 重命名采集目标指标URL路径</span><br><span class="line">      - action: replace</span><br><span class="line">        regex: (.+)</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_pod_annotation_prometheus_io_path</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">      # 重命名采集目标地址</span><br><span class="line">      - action: replace</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: $1:$2</span><br><span class="line">        source_labels:</span><br><span class="line">        - __address__</span><br><span class="line">        - __meta_kubernetes_pod_annotation_prometheus_io_port</span><br><span class="line">        target_label: __address__</span><br><span class="line">      # 将K8s标签(.*)作为新标签名，原有值不变</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">      # 生成命名空间标签</span><br><span class="line">      - action: replace</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_namespace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      # 生成Service名称标签</span><br><span class="line">      - action: replace</span><br><span class="line">        source_labels:</span><br><span class="line">        - __meta_kubernetes_pod_name</span><br><span class="line">        target_label: kubernetes_pod_name</span><br><span class="line"></span><br><span class="line">    alerting:</span><br><span class="line">      alertmanagers:</span><br><span class="line">      - static_configs:</span><br><span class="line">          - targets: [&quot;alertmanager:80&quot;]</span><br></pre></td></tr></table></figure><h4 id="kube-state-metrics-采集了k8s中各种资源对象的状态信息-kube-state-metrics-yaml"><a href="#kube-state-metrics-采集了k8s中各种资源对象的状态信息-kube-state-metrics-yaml" class="headerlink" title="kube-state-metrics 采集了k8s中各种资源对象的状态信息 kube-state-metrics.yaml"></a>kube-state-metrics 采集了k8s中各种资源对象的状态信息 kube-state-metrics.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1 </span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: ops</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-state-metrics</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-state-metrics</span><br><span class="line">      version: v1.3.0</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kube-state-metrics</span><br><span class="line">        version: v1.3.0</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: kube-state-metrics</span><br><span class="line">      containers:</span><br><span class="line">      - name: kube-state-metrics</span><br><span class="line">        image: lizhenliang&#x2F;kube-state-metrics:v1.8.0 </span><br><span class="line">        ports:</span><br><span class="line">        - name: http-metrics</span><br><span class="line">          containerPort: 8080</span><br><span class="line">        - name: telemetry</span><br><span class="line">          containerPort: 8081</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: &#x2F;healthz</span><br><span class="line">            port: 8080</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">      - name: addon-resizer</span><br><span class="line">        image: lizhenliang&#x2F;addon-resizer:1.8.6</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 30Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 30Mi</span><br><span class="line">        env:</span><br><span class="line">          - name: MY_POD_NAME</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: metadata.name</span><br><span class="line">          - name: MY_POD_NAMESPACE</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: metadata.namespace</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: config-volume</span><br><span class="line">            mountPath: &#x2F;etc&#x2F;config</span><br><span class="line">        command:</span><br><span class="line">          - &#x2F;pod_nanny</span><br><span class="line">          - --config-dir&#x3D;&#x2F;etc&#x2F;config</span><br><span class="line">          - --container&#x3D;kube-state-metrics</span><br><span class="line">          - --cpu&#x3D;100m</span><br><span class="line">          - --extra-cpu&#x3D;1m</span><br><span class="line">          - --memory&#x3D;100Mi</span><br><span class="line">          - --extra-memory&#x3D;2Mi</span><br><span class="line">          - --threshold&#x3D;5</span><br><span class="line">          - --deployment&#x3D;kube-state-metrics</span><br><span class="line">      volumes:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: kube-state-metrics-config</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics-config</span><br><span class="line">  namespace: ops</span><br><span class="line">data:</span><br><span class="line">  NannyConfiguration: |-</span><br><span class="line">    apiVersion: nannyconfig&#x2F;v1alpha1</span><br><span class="line">    kind: NannyConfiguration</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: ops</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io&#x2F;scrape: &#39;true&#39;</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: http-metrics</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - name: telemetry</span><br><span class="line">    port: 8081</span><br><span class="line">    targetPort: telemetry</span><br><span class="line">    protocol: TCP</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-state-metrics</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: ops</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  - secrets</span><br><span class="line">  - nodes</span><br><span class="line">  - pods</span><br><span class="line">  - services</span><br><span class="line">  - resourcequotas</span><br><span class="line">  - replicationcontrollers</span><br><span class="line">  - limitranges</span><br><span class="line">  - persistentvolumeclaims</span><br><span class="line">  - persistentvolumes</span><br><span class="line">  - namespaces</span><br><span class="line">  - endpoints</span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;apps&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - statefulsets</span><br><span class="line">  - daemonsets</span><br><span class="line">  - deployments</span><br><span class="line">  - replicasets</span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;batch&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - cronjobs</span><br><span class="line">  - jobs</span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;autoscaling&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - horizontalpodautoscalers</span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;networking.k8s.io&quot;, &quot;extensions&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses </span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;storage.k8s.io&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - storageclasses </span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;certificates.k8s.io&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - certificatesigningrequests</span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;policy&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - poddisruptionbudgets </span><br><span class="line">  verbs: [&quot;list&quot;, &quot;watch&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: Role</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics-resizer</span><br><span class="line">  namespace: ops</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - pods</span><br><span class="line">  verbs: [&quot;get&quot;]</span><br><span class="line">- apiGroups: [&quot;extensions&quot;,&quot;apps&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - deployments</span><br><span class="line">  resourceNames: [&quot;kube-state-metrics&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;update&quot;]</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1 </span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: ops</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: ops</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: kube-state-metrics-resizer</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: ops</span><br></pre></td></tr></table></figure><h4 id="prometheus部署文件-prometheus-deploy-yaml-注意版本需要用2-20"><a href="#prometheus部署文件-prometheus-deploy-yaml-注意版本需要用2-20" class="headerlink" title="prometheus部署文件  prometheus-deploy.yaml(注意版本需要用2.20)"></a>prometheus部署文件  prometheus-deploy.yaml(注意版本需要用2.20)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus </span><br><span class="line">  namespace: ops</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: prometheus</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: prometheus</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: prometheus</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: prometheus</span><br><span class="line">      initContainers:</span><br><span class="line">      - name: &quot;init-chown-data&quot;</span><br><span class="line">        image: &quot;busybox:latest&quot;</span><br><span class="line">        imagePullPolicy: &quot;IfNotPresent&quot;</span><br><span class="line">        command: [&quot;chown&quot;, &quot;-R&quot;, &quot;65534:65534&quot;, &quot;&#x2F;data&quot;]</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: prometheus-data</span><br><span class="line">          mountPath: &#x2F;data</span><br><span class="line">          subPath: &quot;&quot;</span><br><span class="line">      containers:</span><br><span class="line">        - name: prometheus-server-configmap-reload</span><br><span class="line">          image: &quot;jimmidyson&#x2F;configmap-reload:v0.1&quot;</span><br><span class="line">          imagePullPolicy: &quot;IfNotPresent&quot;</span><br><span class="line">          args:</span><br><span class="line">            - --volume-dir&#x3D;&#x2F;etc&#x2F;config</span><br><span class="line">            - --webhook-url&#x3D;http:&#x2F;&#x2F;localhost:9090&#x2F;-&#x2F;reload</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: config-volume</span><br><span class="line">              mountPath: &#x2F;etc&#x2F;config</span><br><span class="line">              readOnly: true</span><br><span class="line">            - mountPath: &#x2F;etc&#x2F;localtime</span><br><span class="line">              name: timezone</span><br><span class="line">          resources:</span><br><span class="line">            limits:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 100Mi</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 100Mi</span><br><span class="line"></span><br><span class="line">        - name: prometheus-server</span><br><span class="line">          image: &quot;prom&#x2F;prometheus:v2.20.0&quot;</span><br><span class="line">          imagePullPolicy: &quot;IfNotPresent&quot;</span><br><span class="line">          args:</span><br><span class="line">            - --config.file&#x3D;&#x2F;etc&#x2F;config&#x2F;prometheus.yml</span><br><span class="line">            - --storage.tsdb.path&#x3D;&#x2F;data</span><br><span class="line">            - --web.console.libraries&#x3D;&#x2F;etc&#x2F;prometheus&#x2F;console_libraries</span><br><span class="line">            - --web.console.templates&#x3D;&#x2F;etc&#x2F;prometheus&#x2F;consoles</span><br><span class="line">            - --web.enable-lifecycle</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 9090</span><br><span class="line">          readinessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              path: &#x2F;-&#x2F;ready</span><br><span class="line">              port: 9090</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              path: &#x2F;-&#x2F;healthy</span><br><span class="line">              port: 9090</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          resources:</span><br><span class="line">            limits:</span><br><span class="line">              cpu: 500m</span><br><span class="line">              memory: 800Mi</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 200m</span><br><span class="line">              memory: 400Mi</span><br><span class="line">            </span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: config-volume</span><br><span class="line">              mountPath: &#x2F;etc&#x2F;config</span><br><span class="line">            - name: prometheus-data</span><br><span class="line">              mountPath: &#x2F;data</span><br><span class="line">              subPath: &quot;&quot;</span><br><span class="line">            - name: prometheus-rules</span><br><span class="line">              mountPath: &#x2F;etc&#x2F;config&#x2F;rules</span><br><span class="line">            - mountPath: &#x2F;etc&#x2F;localtime</span><br><span class="line">              name: timezone  </span><br><span class="line">      volumes:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: prometheus-config</span><br><span class="line">        - name: prometheus-rules</span><br><span class="line">          configMap:</span><br><span class="line">            name: prometheus-rules</span><br><span class="line">        - name: prometheus-data</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: prometheus</span><br><span class="line">        - name: timezone</span><br><span class="line">          hostPath:</span><br><span class="line">            path: &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai</span><br><span class="line">                                                  </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: &quot;nfs-storage&quot;</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata: </span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: ops</span><br><span class="line">spec: </span><br><span class="line">  type: NodePort</span><br><span class="line">  ports: </span><br><span class="line">    - name: http </span><br><span class="line">      port: 9090</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 9090</span><br><span class="line">      nodePort: 30089</span><br><span class="line">  selector: </span><br><span class="line">    k8s-app: prometheus</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: ops</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - &quot;&quot;</span><br><span class="line">    resources:</span><br><span class="line">      - nodes</span><br><span class="line">      - nodes&#x2F;metrics</span><br><span class="line">      - services</span><br><span class="line">      - endpoints</span><br><span class="line">      - pods</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">      - list</span><br><span class="line">      - watch</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - &quot;&quot;</span><br><span class="line">    resources:</span><br><span class="line">      - configmaps</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">  - nonResourceURLs:</span><br><span class="line">      - &quot;&#x2F;metrics&quot;</span><br><span class="line">    verbs:</span><br><span class="line">      - get</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: prometheus</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: ops  </span><br></pre></td></tr></table></figure><h4 id="prometheus配置报警规则-prometheus-rules-yaml"><a href="#prometheus配置报警规则-prometheus-rules-yaml" class="headerlink" title="prometheus配置报警规则 prometheus-rules.yaml"></a>prometheus配置报警规则 prometheus-rules.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-rules</span><br><span class="line">  namespace: ops</span><br><span class="line">data:</span><br><span class="line">  general.rules: |</span><br><span class="line">    groups:</span><br><span class="line">    - name: general.rules</span><br><span class="line">      rules:</span><br><span class="line">      - alert: InstanceDown</span><br><span class="line">        expr: up &#x3D;&#x3D; 0</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; 停止工作&quot;</span><br><span class="line">          description: &quot;&#123;&#123; $labels.instance &#125;&#125; job &#123;&#123; $labels.job &#125;&#125; 已经停止5分钟以上.&quot;</span><br><span class="line">               </span><br><span class="line">  node.rules: |</span><br><span class="line">    groups:</span><br><span class="line">    - name: node.rules</span><br><span class="line">      rules:</span><br><span class="line">      - alert: NodeFilesystemUsage</span><br><span class="line">        expr: |</span><br><span class="line">          100 - (node_filesystem_free_bytes &#x2F; node_filesystem_size_bytes) * 100 &gt; 60</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; : &#123;&#123; $labels.mountpoint &#125;&#125; 分区使用率过高&quot;</span><br><span class="line">          description: &quot;&#123;&#123; $labels.instance &#125;&#125;: &#123;&#123; $labels.mountpoint &#125;&#125; 分区使用大于60% (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: NodeMemoryUsage</span><br><span class="line">        expr: |</span><br><span class="line">          100 - (node_memory_MemFree_bytes+node_memory_Cached_bytes+node_memory_Buffers_bytes) &#x2F; node_memory_MemTotal_bytes * 100 &gt; 60</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; 内存使用率过高&quot;</span><br><span class="line">          description: &quot;&#123;&#123; $labels.instance &#125;&#125;内存使用大于60% (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: NodeCPUUsage    </span><br><span class="line">        expr: |</span><br><span class="line">          100 - (avg(irate(node_cpu_seconds_total&#123;mode&#x3D;&quot;idle&quot;&#125;[5m])) by (instance) * 100) &gt; 60 </span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; CPU使用率过高&quot;       </span><br><span class="line">          description: &quot;&#123;&#123; $labels.instance &#125;&#125;CPU使用大于60% (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: KubeNodeNotReady</span><br><span class="line">        expr: |</span><br><span class="line">          kube_node_status_condition&#123;condition&#x3D;&quot;Ready&quot;,status&#x3D;&quot;true&quot;&#125; &#x3D;&#x3D; 0</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">        annotations:</span><br><span class="line">          message: &#39;&#123;&#123; $labels.node &#125;&#125; 已经有10多分钟没有准备好了.&#39;</span><br><span class="line"></span><br><span class="line">  pod.rules: |</span><br><span class="line">    groups:</span><br><span class="line">    - name: pod.rules</span><br><span class="line">      rules:</span><br><span class="line">      - alert: PodCPUUsage</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(pod, namespace) (rate(container_cpu_usage_seconds_total&#123;image!&#x3D;&quot;&quot;&#125;[5m]) * 100) &gt; 5</span><br><span class="line">        for: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; CPU使用大于80% (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodMemoryUsage</span><br><span class="line">        expr: |</span><br><span class="line">           sum(container_memory_rss&#123;image!&#x3D;&quot;&quot;&#125;) by(pod, namespace) &#x2F; sum(container_spec_memory_limit_bytes&#123;image!&#x3D;&quot;&quot;&#125;) by(pod, namespace) * 100 !&#x3D; +inf &gt; 80</span><br><span class="line">        for: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; 内存使用大于80% (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodNetworkReceive</span><br><span class="line">        expr: |</span><br><span class="line">           sum(rate(container_network_receive_bytes_total&#123;image!&#x3D;&quot;&quot;,name&#x3D;~&quot;^k8s_.*&quot;&#125;[5m]) &#x2F;1000) by (pod,namespace) &gt; 30000</span><br><span class="line">        for: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; 入口流量大于30MB&#x2F;s (当前值: &#123;&#123; $value &#125;&#125;K&#x2F;s)&quot;           </span><br><span class="line"></span><br><span class="line">      - alert: PodNetworkTransmit</span><br><span class="line">        expr: | </span><br><span class="line">           sum(rate(container_network_transmit_bytes_total&#123;image!&#x3D;&quot;&quot;,name&#x3D;~&quot;^k8s_.*&quot;&#125;[5m]) &#x2F;1000) by (pod,namespace) &gt; 30000</span><br><span class="line">        for: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; 出口流量大于30MB&#x2F;s (当前值: &#123;&#123; $value &#125;&#125;&#x2F;K&#x2F;s)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodRestart</span><br><span class="line">        expr: |</span><br><span class="line">           sum(changes(kube_pod_container_status_restarts_total[1m])) by (pod,namespace) &gt; 0</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; Pod重启 (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodFailed</span><br><span class="line">        expr: |</span><br><span class="line">           sum(kube_pod_status_phase&#123;phase&#x3D;&quot;Failed&quot;&#125;) by (pod,namespace) &gt; 0</span><br><span class="line">        for: 5s</span><br><span class="line">        labels:</span><br><span class="line">          severity: error </span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; Pod状态Failed (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodPending</span><br><span class="line">        expr: | </span><br><span class="line">           sum(kube_pod_status_phase&#123;phase&#x3D;&quot;Pending&quot;&#125;) by (pod,namespace) &gt; 0</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125; Pod状态Pending (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodErrImagePull</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace,pod) (kube_pod_container_status_waiting_reason&#123;reason&#x3D;&quot;ErrImagePull&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125;  Pod状态ErrImagePull (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodImagePullBackOff</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace,pod) (kube_pod_container_status_waiting_reason&#123;reason&#x3D;&quot;ImagePullBackOff&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125;  Pod状态ImagePullBackOff (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodCrashLoopBackOff</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace,pod) (kube_pod_container_status_waiting_reason&#123;reason&#x3D;&quot;CrashLoopBackOff&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125;  Pod状态CrashLoopBackOff (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodInvalidImageName</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace,pod) (kube_pod_container_status_waiting_reason&#123;reason&#x3D;&quot;InvalidImageName&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125;  Pod状态InvalidImageName (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">      - alert: PodCreateContainerConfigError</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace,pod) (kube_pod_container_status_waiting_reason&#123;reason&#x3D;&quot;CreateContainerConfigError&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;命名空间: &#123;&#123; $labels.namespace &#125;&#125; | Pod名称: &#123;&#123; $labels.pod &#125;&#125;  Pod状态CreateContainerConfigError (当前值: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line"></span><br><span class="line">  volume.rules: |</span><br><span class="line">    groups:</span><br><span class="line">    - name: volume.rules</span><br><span class="line">      rules:</span><br><span class="line">      - alert: PersistentVolumeClaimLost</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace, persistentvolumeclaim) (kube_persistentvolumeclaim_status_phase&#123;phase&#x3D;&quot;Lost&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 2m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;PersistentVolumeClaim &#123;&#123; $labels.namespace &#125;&#125;&#x2F;&#123;&#123; $labels.persistentvolumeclaim &#125;&#125; is lost\n  VALUE &#x3D; &#123;&#123; $value &#125;&#125;\n  LABELS &#x3D; &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      - alert: PersistentVolumeClaimPendig</span><br><span class="line">        expr: |</span><br><span class="line">           sum by(namespace, persistentvolumeclaim) (kube_persistentvolumeclaim_status_phase&#123;phase&#x3D;&quot;Pendig&quot;&#125;) &#x3D;&#x3D; 1</span><br><span class="line">        for: 2m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;PersistentVolumeClaim &#123;&#123; $labels.namespace &#125;&#125;&#x2F;&#123;&#123; $labels.persistentvolumeclaim &#125;&#125; is pendig\n  VALUE &#x3D; &#123;&#123; $value &#125;&#125;\n  LABELS &#x3D; &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      - alert: PersistentVolume Failed</span><br><span class="line">        expr: |</span><br><span class="line">           sum(kube_persistentvolume_status_phase&#123;phase&#x3D;&quot;Failed&quot;,job&#x3D;&quot;kubernetes-service-endpoints&quot;&#125;) by (persistentvolume) &#x3D;&#x3D; 1</span><br><span class="line">        for: 2m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;Persistent volume is failed state\n  VALUE &#x3D; &#123;&#123; $value &#125;&#125;\n  LABELS &#x3D; &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      - alert: PersistentVolume Pending</span><br><span class="line">        expr: |</span><br><span class="line">           sum(kube_persistentvolume_status_phase&#123;phase&#x3D;&quot;Pending&quot;,job&#x3D;&quot;kubernetes-service-endpoints&quot;&#125;) by (persistentvolume) &#x3D;&#x3D; 1</span><br><span class="line">        for: 2m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;Persistent volume is pending state\n  VALUE &#x3D; &#123;&#123; $value &#125;&#125;\n  LABELS &#x3D; &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="node-exporter配置node-exporter-yaml-注意版本需要用1-0-1"><a href="#node-exporter配置node-exporter-yaml-注意版本需要用1-0-1" class="headerlink" title="node-exporter配置node-exporter.yaml(注意版本需要用1.0.1)"></a>node-exporter配置node-exporter.yaml(注意版本需要用1.0.1)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1 </span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: node-exporter </span><br><span class="line">  namespace: ops </span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: node-exporter </span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: node-exporter</span><br><span class="line">      version: v1.0.1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: node-exporter </span><br><span class="line">        version: v1.0.1</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: prometheus-node-exporter</span><br><span class="line">          image: &quot;prom&#x2F;node-exporter:v1.0.1&quot;</span><br><span class="line">          #imagePullPolicy: &quot;Always&quot;</span><br><span class="line">          args:</span><br><span class="line">            - --path.procfs&#x3D;&#x2F;host&#x2F;proc</span><br><span class="line">            - --path.sysfs&#x3D;&#x2F;host&#x2F;sys</span><br><span class="line">          ports:</span><br><span class="line">            - name: metrics</span><br><span class="line">              containerPort: 9100</span><br><span class="line">              hostPort: 9100</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: proc</span><br><span class="line">              mountPath: &#x2F;host&#x2F;proc</span><br><span class="line">              readOnly:  true</span><br><span class="line">            - name: sys</span><br><span class="line">              mountPath: &#x2F;host&#x2F;sys</span><br><span class="line">              readOnly: true</span><br><span class="line">          resources:</span><br><span class="line">            limits:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 50Mi</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 50Mi</span><br><span class="line">      hostNetwork: true</span><br><span class="line">      hostPID: true</span><br><span class="line">      hostIPC: true</span><br><span class="line">      volumes:</span><br><span class="line">        - name: proc</span><br><span class="line">          hostPath:</span><br><span class="line">            path: &#x2F;proc</span><br><span class="line">        - name: sys</span><br><span class="line">          hostPath:</span><br><span class="line">            path: &#x2F;sys</span><br><span class="line">        - name: rootfs</span><br><span class="line">          hostPath:</span><br><span class="line">            path: &#x2F;</span><br><span class="line">        - name: dev</span><br><span class="line">          hostPath:</span><br><span class="line">            path: &#x2F;dev</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: node-exporter</span><br><span class="line">  namespace: ops</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io&#x2F;scrape: &quot;true&quot;</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">    - name: metrics</span><br><span class="line">      port: 9100</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 9100</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: node-exporter</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="alertmanager-yaml文件"><a href="#alertmanager-yaml文件" class="headerlink" title="alertmanager yaml文件"></a>alertmanager yaml文件</h3><h4 id="alertmanager配置文件alertmanger-configmap-yaml"><a href="#alertmanager配置文件alertmanger-configmap-yaml" class="headerlink" title="alertmanager配置文件alertmanger-configmap.yaml"></a>alertmanager配置文件alertmanger-configmap.yaml</h4><p>注:邮箱需要自己去网易邮箱申请并且取得授权管理密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-config</span><br><span class="line">  namespace: ops</span><br><span class="line">data:</span><br><span class="line">  alertmanager.yml: |-</span><br><span class="line">    global:</span><br><span class="line">      # 在没有报警的情况下声明为已解决的时间</span><br><span class="line">      resolve_timeout: 5m</span><br><span class="line">      # 配置邮件发送信息</span><br><span class="line">      smtp_smarthost: &#39;smtp.163.com:465&#39;</span><br><span class="line">      smtp_from: &#39;xxx@163.com&#39;</span><br><span class="line">      smtp_auth_username: &#39;xxx@163.com&#39;</span><br><span class="line">      smtp_auth_password: &#39;xxxxxx&#39;</span><br><span class="line">      smtp_hello: &#39;163.com&#39;</span><br><span class="line">      smtp_require_tls: false</span><br><span class="line">    # 所有报警信息进入后的根路由，用来设置报警的分发策略</span><br><span class="line">    route:</span><br><span class="line">      # 这里的标签列表是接收到报警信息后的重新分组标签，例如，接收到的报警信息里面有许多具有 cluster&#x3D;A 和 alertname&#x3D;LatncyHigh 这样的标签的报警信息将会批量被聚合到一个分组里面</span><br><span class="line">      group_by: [&#39;alertname&#39;, &#39;cluster&#39;]</span><br><span class="line">      # 当一个新的报警分组被创建后，需要等待至少group_wait时间来初始化通知，这种方式可以确保您能有足够的时间为同一分组来获取多个警报，然后一起触发这个报警信息。</span><br><span class="line">      group_wait: 30s</span><br><span class="line"> </span><br><span class="line">      # 当第一个报警发送后，等待&#39;group_interval&#39;时间来发送新的一组报警信息。</span><br><span class="line">      group_interval: 5m</span><br><span class="line"> </span><br><span class="line">      # 如果一个报警信息已经发送成功了，等待&#39;repeat_interval&#39;时间来重新发送他们</span><br><span class="line">      repeat_interval: 5m</span><br><span class="line"> </span><br><span class="line">      # 默认的receiver：如果一个报警没有被一个route匹配，则发送给默认的接收器</span><br><span class="line">      receiver: default</span><br><span class="line"> </span><br><span class="line">      # 上面所有的属性都由所有子路由继承，并且可以在每个子路由上进行覆盖。</span><br><span class="line">      routes:</span><br><span class="line">      - receiver: email</span><br><span class="line">        group_wait: 10s</span><br><span class="line">        match:</span><br><span class="line">          team: node</span><br><span class="line">    templates:</span><br><span class="line">      - &#39;&#x2F;etc&#x2F;config&#x2F;template&#x2F;email.tmpl&#39;</span><br><span class="line">    receivers:</span><br><span class="line">    - name: &#39;default&#39;</span><br><span class="line">      email_configs:</span><br><span class="line">      - to: &#39;xxxx@qq.com&#39;</span><br><span class="line">        html: &#39;&#123;&#123; template &quot;email.html&quot; . &#125;&#125;&#39;</span><br><span class="line">        headers: &#123; Subject: &quot;[WARN] Prometheus 告警邮件&quot; &#125;</span><br><span class="line">        #send_resolved: true</span><br><span class="line">    - name: &#39;email&#39;</span><br><span class="line">      email_configs:</span><br><span class="line">      - to: &#39;xxxx@gmail.com&#39;</span><br><span class="line">        send_resolved: true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="alertmanager-template文件alertmanager-template-yaml"><a href="#alertmanager-template文件alertmanager-template-yaml" class="headerlink" title="alertmanager template文件alertmanager-template.yaml"></a>alertmanager template文件alertmanager-template.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#自定义告警模板</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-template-volume</span><br><span class="line">  namespace: ops</span><br><span class="line">data:</span><br><span class="line">  email.tmpl: |</span><br><span class="line">    &#123;&#123; define &quot;email.html&quot; &#125;&#125;</span><br><span class="line">        &#123;&#123; range .Alerts &#125;&#125;</span><br><span class="line">    &lt;pre&gt;</span><br><span class="line">        &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;start&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">       告警程序: prometheus_alert_email </span><br><span class="line">       告警级别: &#123;&#123; .Labels.severity &#125;&#125; 级别 </span><br><span class="line">       告警类型: &#123;&#123; .Labels.alertname &#125;&#125; </span><br><span class="line">       故障主机: &#123;&#123; .Labels.instance &#125;&#125; </span><br><span class="line">       告警主题: &#123;&#123; .Annotations.summary &#125;&#125;</span><br><span class="line">       告警详情: &#123;&#123; .Annotations.description &#125;&#125;</span><br><span class="line">       处理方法: &#123;&#123; .Annotations.console &#125;&#125;</span><br><span class="line">       触发时间: &#123;&#123; .StartsAt.Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class="line">       &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;end&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">    &lt;&#x2F;pre&gt;</span><br><span class="line">        &#123;&#123; end &#125;&#125;</span><br><span class="line">    &#123;&#123; end &#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="alertmanager部署文件alertmanager-deployment-yaml"><a href="#alertmanager部署文件alertmanager-deployment-yaml" class="headerlink" title="alertmanager部署文件alertmanager-deployment.yaml"></a>alertmanager部署文件alertmanager-deployment.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: alertmanager</span><br><span class="line">      version: v0.14.0</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: alertmanager</span><br><span class="line">        version: v0.14.0</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: prometheus-alertmanager</span><br><span class="line">          image: &quot;prom&#x2F;alertmanager:v0.14.0&quot;</span><br><span class="line">          imagePullPolicy: &quot;IfNotPresent&quot;</span><br><span class="line">          args:</span><br><span class="line">            - --config.file&#x3D;&#x2F;etc&#x2F;config&#x2F;alertmanager.yml</span><br><span class="line">            - --storage.path&#x3D;&#x2F;data</span><br><span class="line">            - --web.external-url&#x3D;&#x2F;</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 9093</span><br><span class="line">          readinessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              path: &#x2F;#&#x2F;status</span><br><span class="line">              port: 9093</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: config-volume</span><br><span class="line">              mountPath: &#x2F;etc&#x2F;config</span><br><span class="line">#自定义告警模板</span><br><span class="line">            - name: config-template-volume</span><br><span class="line">              mountPath: &#x2F;etc&#x2F;config&#x2F;template</span><br><span class="line">            - name: storage-volume</span><br><span class="line">              mountPath: &quot;&#x2F;data&quot;</span><br><span class="line">              subPath: &quot;&quot;</span><br><span class="line">            - mountPath: &#x2F;etc&#x2F;localtime</span><br><span class="line">              name: timezone</span><br><span class="line">          resources:</span><br><span class="line">            limits:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 200Mi</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 100Mi</span><br><span class="line">        - name: prometheus-alertmanager-configmap-reload</span><br><span class="line">          image: &quot;jimmidyson&#x2F;configmap-reload:v0.1&quot;</span><br><span class="line">          imagePullPolicy: &quot;IfNotPresent&quot;</span><br><span class="line">          args:</span><br><span class="line">            - --volume-dir&#x3D;&#x2F;etc&#x2F;config</span><br><span class="line">            - --webhook-url&#x3D;http:&#x2F;&#x2F;localhost:9093&#x2F;-&#x2F;reload</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: config-volume</span><br><span class="line">              mountPath: &#x2F;etc&#x2F;config</span><br><span class="line">              readOnly: true</span><br><span class="line">          resources:</span><br><span class="line">            limits:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 200Mi</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 10m</span><br><span class="line">              memory: 100Mi</span><br><span class="line">      volumes:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: alertmanager-config</span><br><span class="line">        - name: config-template-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: alertmanager-template-volume</span><br><span class="line">        - name: storage-volume</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: alertmanager</span><br><span class="line">        - name: timezone</span><br><span class="line">          hostPath:</span><br><span class="line">            path: &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: nfs-storage</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: &quot;2Gi&quot;</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager</span><br><span class="line">  namespace: ops</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;name: &quot;Alertmanager&quot;</span><br><span class="line">spec:</span><br><span class="line">  type: &quot;NodePort&quot;</span><br><span class="line">  ports:</span><br><span class="line">    - name: http</span><br><span class="line">      port: 80</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 9093</span><br><span class="line">      nodePort: 30093</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: alertmanager</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="grafana-yaml文件"><a href="#grafana-yaml文件" class="headerlink" title="grafana yaml文件"></a>grafana yaml文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment </span><br><span class="line">metadata:</span><br><span class="line">  name: grafana</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: grafana</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: grafana</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: grafana</span><br><span class="line">        image: grafana&#x2F;grafana:7.1.0</span><br><span class="line">        ports:</span><br><span class="line">          - containerPort: 3000</span><br><span class="line">            protocol: TCP</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 100m            </span><br><span class="line">            memory: 256Mi          </span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m            </span><br><span class="line">            memory: 256Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: grafana-data</span><br><span class="line">            mountPath: &#x2F;var&#x2F;lib&#x2F;grafana</span><br><span class="line">            subPath: grafana</span><br><span class="line">          - mountPath: &#x2F;etc&#x2F;localtime</span><br><span class="line">            name: timezone</span><br><span class="line">      securityContext:</span><br><span class="line">        fsGroup: 472</span><br><span class="line">        runAsUser: 472</span><br><span class="line">      volumes:</span><br><span class="line">      - name: grafana-data</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: grafana</span><br><span class="line">      - name: timezone</span><br><span class="line">        hostPath:</span><br><span class="line">          path: &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana </span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: &quot;nfs-storage&quot;</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana</span><br><span class="line">  namespace: ops</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port : 80</span><br><span class="line">    targetPort: 3000</span><br><span class="line">    nodePort: 30030</span><br><span class="line">  selector:</span><br><span class="line">    app: grafana</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="部署到k8s中"><a href="#部署到k8s中" class="headerlink" title="部署到k8s中"></a>部署到k8s中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f .</span><br></pre></td></tr></table></figure><h2 id="grafana数据源和监控"><a href="#grafana数据源和监控" class="headerlink" title="grafana数据源和监控"></a>grafana数据源和监控</h2><h3 id="grafana添加数据源"><a href="#grafana添加数据源" class="headerlink" title="grafana添加数据源"></a>grafana添加数据源</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/2e2b52257bf58eb3de3800b73bf1b33a.png" alt="在这里插入图片描述"><br>点击datasource - add datasource<br><img src="https://img-blog.csdnimg.cn/img_convert/f4a6d0482662d940b54f5345ff5719b6.png" alt="在这里插入图片描述"><br>之后点击save&amp;test,添加数据源结束</p><h3 id="import导入模板"><a href="#import导入模板" class="headerlink" title="import导入模板"></a>import导入模板</h3><p>模板下载：<a href="https://github.com/alexclownfish/k8s-monitor/tree/main/grafana_template">https://github.com/alexclownfish/k8s-monitor/tree/main/grafana_template</a><br><img src="https://img-blog.csdnimg.cn/img_convert/0da7161b13ec62e8a64bb700885473fc.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/img_convert/6dc324132e15af124c96a6cb10632f20.png" alt="在这里插入图片描述"></p><h3 id="修改prometheus-rules验证监控触发报警并发送邮件"><a href="#修改prometheus-rules验证监控触发报警并发送邮件" class="headerlink" title="修改prometheus rules验证监控触发报警并发送邮件"></a>修改prometheus rules验证监控触发报警并发送邮件</h3><p>修改prometheus-rules.yaml<br><img src="https://img-blog.csdnimg.cn/img_convert/68786c7f9abf4518c5cf910056074369.png" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#热更新configmap</span><br><span class="line">kubectl apply -f prometheus-rules.yaml</span><br><span class="line">curl -X POST http:&#x2F;&#x2F;10.1.230.219:9090&#x2F;-&#x2F;reload</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/9bed866e7556554490febdfb84bf3769.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/img_convert/7a5776cc75bbd830ee989699467317c4.png" alt="在这里插入图片描述"></p><p>看到已经触发报警并发送邮件<br>至此结束</p><h2 id="感谢大佬"><a href="#感谢大佬" class="headerlink" title="感谢大佬"></a>感谢大佬</h2><p><a href="https://blog.51cto.com/luoguoling">https://blog.51cto.com/luoguoling</a><br><a href="https://alexcld.com/">https://alexcld.com</a></p>]]></content>
      
      
      <categories>
          
          <category> monitor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prometheus+grafana+alertmanager监控k8s无坑版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clickhouse升级最新版21.6.6</title>
      <link href="posts/35255.html"/>
      <url>posts/35255.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h3 id="闲聊"><a href="#闲聊" class="headerlink" title="闲聊"></a>闲聊</h3><p>上章提到clickhouse版本更新迭代较快，bug较多。<br>以上篇文章20.8为例</p><p>项目中有用到clickhouse20.8来实时同步mysql8.13的数据，但是同步过去的表正常查询数据 插入数据都没有问题，遇到复杂查询（嵌套，运算，聚合）就会报错，在网上找了好多方法，最后才发现是clickhouse版本的问题，clickhouse官网文档在新的版本也有修复。</p><p>类似这一个sql，好像也不支持用in来嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  generateUUIDv4() as ukey,</span><br><span class="line">  apiName,</span><br><span class="line">  toStartOfDay(toDateTime(timestamp &#x2F; 1000)) AS time,</span><br><span class="line">  count(apiName) AS num</span><br><span class="line">from</span><br><span class="line">  audit.http_stripped_event</span><br><span class="line">where</span><br><span class="line">  apiName in (</span><br><span class="line">  SELECT</span><br><span class="line">    data_val</span><br><span class="line">  from</span><br><span class="line">    data_dataTransfer_ch.t_task_check_field_data</span><br><span class="line">  where</span><br><span class="line">    task_id &#x3D; &#39;796D82C8-CB64-41AC-84EE-9D292880FEBC&#39;</span><br><span class="line">    and data_version &#x3D; 0)</span><br><span class="line">GROUP BY</span><br><span class="line">  apiName,</span><br><span class="line">  time;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">centos7836 :) select * from data_dataTransfer_ch_test.t_task_check_field_data;</span><br><span class="line">SELECT *</span><br><span class="line">FROM data_dataTransfer_ch_test.t_task_check_field_data</span><br><span class="line">Received exception from server (version 20.8.3):</span><br><span class="line">Code: 32. DB::Exception: Received from 192.168.78.36:9000. DB::Exception: Attempt to read after eof. </span><br><span class="line">0 rows in set. Elapsed: 0.405 sec. </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210707142311748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后就将我的clickhouse进行了升级，以下是操作</p><h2 id="clickhouse升级最新版21-6-6"><a href="#clickhouse升级最新版21-6-6" class="headerlink" title="clickhouse升级最新版21.6.6"></a>clickhouse升级最新版21.6.6</h2><p>以我们项目为例，整理下ClickHouse升级的相关注意事项，由于鄙人学识浅薄，提供的方式方法仅供大家参考，引起的任何问题，本人不承担任何责任。安全生产第一条：记得备份、记得备份、记得备份，重要的事情说三遍。</p><p>我们ClickHouse是通过RPM方式来安装的，包括如下三个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master repo]# ll</span><br><span class="line">total 159984</span><br><span class="line">-rw-r--r-- 1 root root     62996 Jul  4 20:34 clickhouse-client-21.6.6.51-2.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root 163667677 Jul  4 20:34 clickhouse-common-static-21.6.6.51-2.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root     87450 Jul  4 20:34 clickhouse-server-21.6.6.51-2.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>1、备份配置文件</p><p>路径为：/etc/clickhouse-server，把这个文件夹下面都备份吧，正常安装新版本，clickhouse会自动将之前的配置文件config.xml备份，命名为：config.xml.rpmsave。不过小心使得万年船。</p><p>2、备份数据文件</p><p>数据文件的路径是在config.xml中进行配置的，我们配置指向一块单独的盘。<br><img src="https://img-blog.csdnimg.cn/20210707143002167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">总而言之，言而总之，把整个数据文件备份吧。</p><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><p>1、查看目前安装版本</p><p>yum list installed | grep clickhouse</p><p>2、删除软件版本</p><p>yum remove -y clickhouse-common-static</p><p>yum remove -y clickhouse-server-common</p><h3 id="安装新版本"><a href="#安装新版本" class="headerlink" title="安装新版本"></a>安装新版本</h3><p><a href="https://repo.clickhouse.tech/rpm/stable/x86_64/">rpm包下载地址：https://repo.clickhouse.tech/rpm/stable/x86_64/</a><br>下载完成之后直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh *.rpm</span><br></pre></td></tr></table></figure><p>安装成功后，会在/etc/clickhouse-server下生产相应的配置文件。</p><p>按照旧的config.xml配置信息，更改config.xml。也可先直接覆盖，如果后续不成功，还是一条一条来修改，最好比对下。防止有小版本差异。</p><p>新版本clickhouse由systemd控制<br>重启服务验证功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start clickhouse-server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> clickhouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clickhouse升级最新版21.6.6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clickhouse单机部署及实时同步mysql数据</title>
      <link href="posts/24143.html"/>
      <url>posts/24143.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="clickhouse单机部署及实时同步mysql数据"><a href="#clickhouse单机部署及实时同步mysql数据" class="headerlink" title="clickhouse单机部署及实时同步mysql数据"></a>clickhouse单机部署及实时同步mysql数据</h1><h2 id="clickhouse20-8-3部分"><a href="#clickhouse20-8-3部分" class="headerlink" title="clickhouse20.8.3部分"></a>clickhouse20.8.3部分</h2><h4 id="示例版本：20-8-3"><a href="#示例版本：20-8-3" class="headerlink" title="示例版本：20.8.3"></a>示例版本：20.8.3</h4><h4 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep -q sse4_2 &#x2F;proc&#x2F;cpuinfo &amp;&amp; echo &quot;SSE 4.2 supported&quot; || echo &quot;SSE 4.2 not supported&quot;</span><br><span class="line">显示：SSE 4.2 supported，则环境支持</span><br></pre></td></tr></table></figure><h4 id="下载安装（单机模式）"><a href="#下载安装（单机模式）" class="headerlink" title="下载安装（单机模式）"></a>下载安装（单机模式）</h4><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y curl</span><br><span class="line">yum install -y libtool</span><br></pre></td></tr></table></figure><p>添加Clickhouse 的yum镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https:&#x2F;&#x2F;packagecloud.io&#x2F;install&#x2F;repositories&#x2F;altinity&#x2F;clickhouse&#x2F;script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure><p>检查镜像情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep clickhouse</span><br></pre></td></tr></table></figure><h4 id="安装-server-client"><a href="#安装-server-client" class="headerlink" title="安装 server client"></a>安装 server client</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y clickhouse-server </span><br><span class="line">yum install -y clickhouse-client</span><br><span class="line">安装完后</span><br><span class="line">vim &#x2F;etc&#x2F;clickhouse-server&#x2F;users.xml</span><br><span class="line">            &lt;password&gt;alexNB&lt;&#x2F;password&gt;</span><br><span class="line">给default用户设置密码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">启动server</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;clickhouse-server start|restart|stop</span><br><span class="line">启动client CLI</span><br><span class="line">clickhouse-client</span><br><span class="line">clickhouse-client -m #可以在命令窗口输入多行命令</span><br><span class="line">停止</span><br><span class="line">systemctl stop clickhouse-server</span><br></pre></td></tr></table></figure><h4 id="外网访问-可选"><a href="#外网访问-可选" class="headerlink" title="外网访问(可选)"></a>外网访问(可选)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;clickhouse-server&#x2F;config.xml</span><br><span class="line">把 &lt;listen_host&gt;::&lt;&#x2F;listen_host&gt; 的注释打开，这样的话才能让ClickHouse被除本机以外的服务器访问</span><br><span class="line">如果禁用了ipv6，使用下面配置</span><br><span class="line">&lt;listen_host&gt;0.0.0.0&lt;&#x2F;listen_host&gt;</span><br></pre></td></tr></table></figure><ul><li>修改默认目录</li><li>服务端的配置目录：/etc/clickhouse-server</li><li>数据文件路径：var/lib/clickhouse <path>/var/lib/clickhouse/</path></li><li>日志文件路径： /var/log/clickhouse-server/ 如<log>/var/log/clickhouse-server/clickhouse-server.log</li><li>存储和日志需要建议修改为非系统盘，其他默认即可<h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查看安装</span><br><span class="line">yum list installed | grep clickhouse</span><br><span class="line">clickhouse-client.noarch               21.3.3.14-2                     @repo.clickhouse.tech_rpm_stable_x86_64</span><br><span class="line">clickhouse-common-static.x86_64        21.3.3.14-2                     @repo.clickhouse.tech_rpm_stable_x86_64</span><br><span class="line">clickhouse-server.noarch               21.3.3.14-2                     @repo.clickhouse.tech_rpm_stable_x86_64</span><br><span class="line">卸载并删除目录</span><br><span class="line">yum remove -y clickhouse-common-static</span><br><span class="line">yum remove -y clickhouse-server-commonrm -rf &#x2F;var&#x2F;lib&#x2F;clickhouserm -rf &#x2F;etc&#x2F;clickhouse*rm -rf &#x2F;var&#x2F;log&#x2F;clickhouse*</span><br></pre></td></tr></table></figure><h2 id="mysql-8-13"><a href="#mysql-8-13" class="headerlink" title="mysql_8.13"></a>mysql_8.13</h2><h4 id="安装完master之后-执行sql查看是否满足条件"><a href="#安装完master之后-执行sql查看是否满足条件" class="headerlink" title="安装完master之后,执行sql查看是否满足条件"></a>安装完master之后,执行sql查看是否满足条件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;%gtid_mode%&#39;;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| gtid_mode     | ON    |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; show variables like &#39;%enforce_gtid_consistency%&#39;;</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">| Variable_name            | Value |</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">| enforce_gtid_consistency | ON    |</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; show variables like &#39;%binlog_format%&#39;;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| binlog_format | ROW   |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="若不满足修改配置文件并重启mysql"><a href="#若不满足修改配置文件并重启mysql" class="headerlink" title="若不满足修改配置文件并重启mysql"></a>若不满足修改配置文件并重启mysql</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;my.cnf</span><br><span class="line"></span><br><span class="line">gtid_mode&#x3D;ON</span><br><span class="line">enforce_gtid_consistency&#x3D;1</span><br><span class="line">binlog_format&#x3D;ROW</span><br></pre></td></tr></table></figure><h4 id="MySQL8创建用户并授权的语句"><a href="#MySQL8创建用户并授权的语句" class="headerlink" title="MySQL8创建用户并授权的语句"></a>MySQL8创建用户并授权的语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;create user brady@&#39;%&#39; identified  by &#39;brady&#39;;</span><br></pre></td></tr></table></figure>授权示例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;grant all privileges on *.* to brady@&#39;%&#39; with grant option;</span><br></pre></td></tr></table></figure>刷新权限<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure>修改远程连接用户的加密规则<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;ALTER USER &#39;brady&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;brady&#39;;</span><br></pre></td></tr></table></figure><h2 id="数据同步"><a href="#数据同步" class="headerlink" title="数据同步"></a>数据同步</h2><h4 id="进入clickhouse数据库"><a href="#进入clickhouse数据库" class="headerlink" title="进入clickhouse数据库"></a>进入clickhouse数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client -u default -h &lt;IP&gt; --password alexNB</span><br></pre></td></tr></table></figure><h4 id="开启复制通道"><a href="#开启复制通道" class="headerlink" title="开启复制通道"></a>开启复制通道</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from system.settings where name &#x3D;&#39;allow_experimental_database_materialize_mysql&#39;;</span><br><span class="line"></span><br><span class="line">SET allow_experimental_database_materialize_mysql&#x3D;1;</span><br></pre></td></tr></table></figure><h4 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE DBNAME ENGINE &#x3D; MaterializeMySQL(&#39;MYSQLIP:PORT&#39;, &#39;SOURCEDB&#39;, &#39;MYSQL_DB&#39;, &#39;PASSWORD&#39;);</span><br><span class="line"></span><br><span class="line">CREATE DATABASE data_dataTransfer_ch_update ENGINE &#x3D; MaterializeMySQL(&#39;172.22.254.217:3306&#39;, &#39;data_dataTransfer_ch&#39;, &#39;brady&#39;, &#39;brady&#39;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">k8s-master :) show databases;</span><br><span class="line">SHOW DATABASES</span><br><span class="line">Query id: 7469cc9b-da21-44ad-9eb5-f32cddcadbe7</span><br><span class="line">┌─name────────────────────────┐</span><br><span class="line">│ audit                       │</span><br><span class="line">│ data_dataTransfer_ch        │</span><br><span class="line">│ data_dataTransfer_ch_update │</span><br><span class="line">│ default                     │</span><br><span class="line">│ system                      │</span><br><span class="line">│ tstu                        │</span><br><span class="line">└─────────────────────────────┘</span><br><span class="line">6 rows in set. Elapsed: 0.002 sec. </span><br><span class="line"></span><br><span class="line">k8s-master :) use data_dataTransfer_ch_update;</span><br><span class="line">USE data_dataTransfer_ch_update</span><br><span class="line">Query id: 552cecae-df70-49e1-a4c4-8bae3e7f4f7d</span><br><span class="line">Ok.</span><br><span class="line">0 rows in set. Elapsed: 0.001 sec. </span><br><span class="line"></span><br><span class="line">k8s-master :) select task_id,data_val from data_dataTransfer_ch_update.t_task_check_field_data where task_id &#x3D; &#39;796D82C8-CB64-41AC-84EE-9D292880FEBC&#39;;</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">    task_id,</span><br><span class="line">    data_val</span><br><span class="line">FROM data_dataTransfer_ch_update.t_task_check_field_data</span><br><span class="line">WHERE task_id &#x3D; &#39;796D82C8-CB64-41AC-84EE-9D292880FEBC&#39;</span><br><span class="line"></span><br><span class="line">Query id: 676b491b-df7a-4010-84ed-acb8dec5a393</span><br><span class="line"></span><br><span class="line">┌─task_id──────────────────────────────┬─data_val──────────────────────────────────────────────────────────────┐</span><br><span class="line">│ 796D82C8-CB64-41AC-84EE-9D292880FEBC │ http:&#x2F;&#x2F;110.110.110.110:8085&#x2F;vul&#x2F;xss&#x2F;xssblind&#x2F;admin_login.php            │</span><br><span class="line">│ 796D82C8-CB64-41AC-84EE-9D292880FEBC │ http:&#x2F;&#x2F;110.110.110.110:8085&#x2F;vul&#x2F;xss&#x2F;xssblind&#x2F;admin_login.php            │</span><br><span class="line">│ 796D82C8-CB64-41AC-84EE-9D292880FEBC │ http:&#x2F;&#x2F;110.110.110.110:8085&#x2F;&#x2F;vul&#x2F;xss&#x2F;xsspost&#x2F;post_login.php             │</span><br><span class="line">│ 796D82C8-CB64-41AC-84EE-9D292880FEBC │ http:&#x2F;&#x2F;110.110.110.110:8085&#x2F;vul&#x2F;sqli&#x2F;sqli_iu&#x2F;sqli_login.php             │</span><br><span class="line">│ 796D82C8-CB64-41AC-84EE-9D292880FEBC │ http:&#x2F;&#x2F;110.110.110.110:8085&#x2F;vul&#x2F;infoleak&#x2F;findabc.php                    │</span><br></pre></td></tr></table></figure>至此实时同步结束<br>可以在mysql对数据表进行增删改操作，在clickhouse可以看到效果</li></ul><p>clickhouse版本更新迭代较快，老版本bug较多不稳定。<br>20.8这个版本bug也挺多，如果有遇到可以参考下篇文章<br><a href="https://alexcld.com/posts/35255.html">大佬移步这里</a><br><a href="https://blog.csdn.net/weixin_45509582">或者这里</a></p>]]></content>
      
      
      <categories>
          
          <category> clickhouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clickhouse单机部署及实时同步mysql数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8s nodePort、port、targetPort、hostPort详解</title>
      <link href="posts/2313.html"/>
      <url>posts/2313.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="K8s-nodePort、port、targetPort、hostPort详解"><a href="#K8s-nodePort、port、targetPort、hostPort详解" class="headerlink" title="K8s nodePort、port、targetPort、hostPort详解"></a>K8s nodePort、port、targetPort、hostPort详解</h1><h2 id="1-nodePort"><a href="#1-nodePort" class="headerlink" title="1. nodePort"></a>1. nodePort</h2><p>外部流量访问k8s集群中service入口的一种方式（另一种方式是LoadBalancer），即nodeIP:nodePort是提供给外部流量访问k8s集群中service的入口。比如外部用户要访问k8s集群中的一个Web应用，那么我们可以配置对应service的type=NodePort，nodePort=30001。其他用户就可以通过浏览器<a href="http://node:30001访问到该web服务。而数据库等服务可能不需要被外界访问，只需被内部服务访问即可，那么我们就不必设置service的NodePort。">http://node:30001访问到该web服务。而数据库等服务可能不需要被外界访问，只需被内部服务访问即可，那么我们就不必设置service的NodePort。</a></p><h2 id="2-port"><a href="#2-port" class="headerlink" title="2. port"></a>2. port</h2><p>k8s集群内部服务之间访问service的入口。即clusterIP:port是service暴露在clusterIP上的端口。mysql容器暴露了3306端口，集群内其他容器通过33306端口访问mysql服务，但是外部流量不能访问mysql服务，因为mysql服务没有配置NodePort。对应的service.yaml如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line"> name: mysql-service</span><br><span class="line">spec:</span><br><span class="line"> ports:</span><br><span class="line"> - port: 33306</span><br><span class="line">   targetPort: 3306</span><br><span class="line"> selector:</span><br><span class="line">  name: mysql-pod</span><br></pre></td></tr></table></figure><h2 id="3-targetPort"><a href="#3-targetPort" class="headerlink" title="3.targetPort"></a>3.targetPort</h2><p>容器的端口（最终的流量端口）。targetPort是pod上的端口，从port和nodePort上来的流量，经过kube-proxy流入到后端pod的targetPort上，最后进入容器。<br>制作容器时暴露的端口一致（使用DockerFile中的EXPOSE），例如官方的nginx（参考DockerFile）暴露80端口。 对应的service.yaml如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line"> name: nginx-service</span><br><span class="line">spec:</span><br><span class="line"> type: NodePort         &#x2F;&#x2F; 有配置NodePort，外部流量可访问k8s中的服务</span><br><span class="line"> ports:</span><br><span class="line"> - port: 30080          &#x2F;&#x2F; 服务访问端口</span><br><span class="line">   targetPort: 80       &#x2F;&#x2F; 容器端口</span><br><span class="line">   nodePort: 30001      &#x2F;&#x2F; NodePort</span><br><span class="line"> selector:</span><br><span class="line">  name: nginx-pod</span><br></pre></td></tr></table></figure><h2 id="4-hostPort"><a href="#4-hostPort" class="headerlink" title="4.hostPort"></a>4.hostPort</h2><p>这是一种直接定义Pod网络的方式。hostPort是直接将容器的端口与所调度的节点上的端口路由，这样用户就可以通过宿主机的IP加上来访问Pod了，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: influxdb</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">    - name: influxdb</span><br><span class="line">      image: influxdb</span><br><span class="line">      ports:</span><br><span class="line">        - containerPort: 8086</span><br><span class="line">          hostPort: 8086</span><br></pre></td></tr></table></figure><p>这样做有个缺点，因为Pod重新调度的时候该Pod被调度到的宿主机可能会变动，这样就变化了，用户必须自己维护一个Pod与所在宿主机的对应关系。<br>使用了 hostPort 的容器只能调度到端口不冲突的 Node 上，除非有必要（比如运行一些系统级的 daemon 服务），不建议使用端口映射功能。如果需要对外暴露服务，建议使用 NodePort Service。</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>总的来说，port和nodePort都是service的端口，前者暴露给k8s集群内部服务访问，后者暴露给k8s集群外部流量访问。从上两个端口过来的数据都需要经过反向代理kube-proxy，流入后端pod的targetPort上，最后到达pod内的容器。</p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8s nodePort、port、targetPort、hostPort详解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubesphere最小化安装</title>
      <link href="posts/32145.html"/>
      <url>posts/32145.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="KUBERSPHERE安装"><a href="#KUBERSPHERE安装" class="headerlink" title="KUBERSPHERE安装"></a>KUBERSPHERE安装</h1><h2 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h2><p>在k8s搭建完成的基础上安装最小化kubesphere</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">环境：centos7x3</span><br><span class="line">k8s-master192.168.10.1012核5G</span><br><span class="line">k8s-node1192.168.10.1022核2G</span><br><span class="line">k8s-node2192.168.10.1032核2G</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/PD1CCkKZgtZD7pAZEqF-rw">kubeadmin安装kubernetes移步阿良大佬的教程</a><br>基于kubeadmin搭建，master内存尽量给到7-8个G（我这里环境不允许，期间出现过多次蓝屏）</p><p>由于部分包被墙，搭建过程中可能会有许多包拉不下来，建议爬个梯子过去，或者本地翻过去之后给虚拟机做转发</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在yum源存在的情况下</span><br><span class="line">yum -y install openvpn</span><br><span class="line">后台运行</span><br><span class="line">openvpn --daemon --config *.openvpn</span><br></pre></td></tr></table></figure><p>出现什么什么successfully什么什么completely就ok了</p><h3 id="一、安装helm"><a href="#一、安装helm" class="headerlink" title="一、安装helm"></a>一、安装helm</h3><p>1.地址 <a href="https://helm.sh/docs/intro/install/">https://helm.sh/docs/intro/install/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;get.helm.sh&#x2F;helm-v3.3.4-linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line">tart -zxvf helm-v3.3.4-linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line">mv linux-amd64&#x2F;helm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;helm</span><br><span class="line"> </span><br><span class="line">helm version</span><br><span class="line">version.BuildInfo&#123;Version:&quot;v3.3.4&quot;, GitCommit:&quot;a61ce5633af99708171414353ed49547cf05013d&quot;, GitTreeState:&quot;clean&quot;, GoVersion:&quot;go1.14.9&quot;&#125;</span><br></pre></td></tr></table></figure><p>2.命令补全</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.bashrc</span><br><span class="line"></span><br><span class="line">source &lt;(helm completion bash)</span><br><span class="line"></span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>3.添加常用仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ helm repo add stable https:&#x2F;&#x2F;kubernetes-charts.storage.googleapis.com&#x2F;</span><br><span class="line">$ helm repo add bitnami https:&#x2F;&#x2F;charts.bitnami.com&#x2F;bitnami</span><br><span class="line">$ helm repo add incubator https:&#x2F;&#x2F;kubernetes-charts-incubator.storage.googleapis.com&#x2F;</span><br><span class="line">$ helm repo add ingress-nginx https:&#x2F;&#x2F;kubernetes.github.io&#x2F;ingress-nginx</span><br><span class="line">$ helm repo update # Make sure we get the latest list of charts</span><br><span class="line">$ helm repo add ali-stable    https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;charts  #阿里云</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">helm repo list</span><br><span class="line"></span><br><span class="line">NAME            URL                                                       </span><br><span class="line">ingress-nginx   https:&#x2F;&#x2F;kubernetes.github.io&#x2F;ingress-nginx                </span><br><span class="line">stable          https:&#x2F;&#x2F;kubernetes-charts.storage.googleapis.com&#x2F;         </span><br><span class="line">bitnami         https:&#x2F;&#x2F;charts.bitnami.com&#x2F;bitnami                        </span><br><span class="line">incubator       https:&#x2F;&#x2F;kubernetes-charts-incubator.storage.googleapis.com&#x2F;</span><br></pre></td></tr></table></figure><p>4.配置权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">权限</span><br><span class="line">kubectl apply -f helm-rbac.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: tiller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: tiller</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: tiller</span><br><span class="line">    namespace: kube-system</span><br></pre></td></tr></table></figure><h3 id="二、安装openebs创建storageclass持久化存储"><a href="#二、安装openebs创建storageclass持久化存储" class="headerlink" title="二、安装openebs创建storageclass持久化存储"></a>二、安装openebs创建storageclass持久化存储</h3><p><a href="https://www.cnblogs.com/benjamin77/p/9944268.html">可移步大佬用nfs做持久化存储案例来了解持久化存储</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node -o wide</span><br><span class="line">去除污点</span><br><span class="line">kubectl describe node master | grep Taint</span><br><span class="line">去除master的污点</span><br><span class="line">kubectl taint nodes master node-role.kubernetes.io&#x2F;master:NoSchedule-</span><br><span class="line"></span><br><span class="line">安装OpenEBS</span><br><span class="line">A:若集群已安装了 Helm，可通过 Helm 命令来安装 OpenEBS：</span><br><span class="line">kubectl create ns openebs</span><br><span class="line">helm install --namespace openebs --name openebs stable&#x2F;openebs --version 1.5.0</span><br><span class="line">B:除此之外 还可以通过 kubectl 命令安装：</span><br><span class="line">kubectl apply -f https:&#x2F;&#x2F;openebs.github.io&#x2F;charts&#x2F;openebs-operator-1.5.0.yaml</span><br><span class="line"></span><br><span class="line">验证</span><br><span class="line">kubectl get sc</span><br><span class="line">如下将 openebs-hostpath设置为 默认的 StorageClass</span><br><span class="line">kubectl patch storageclass openebs-hostpath -p &#39;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io&#x2F;is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">验证</span><br><span class="line">kubectl get sc</span><br></pre></td></tr></table></figure><h3 id="三、最小化安装kubesphere"><a href="#三、最小化安装kubesphere" class="headerlink" title="三、最小化安装kubesphere"></a>三、最小化安装kubesphere</h3><p><a href="https://kubesphere.io/docs/quick-start/minimal-kubesphere-on-k8s/">参考官网</a><br><img src="https://img-blog.csdnimg.cn/20210520140416518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https:&#x2F;&#x2F;github.com&#x2F;kubesphere&#x2F;ks-installer&#x2F;releases&#x2F;download&#x2F;v3.1.0&#x2F;kubesphere-installer.yaml</span><br><span class="line">   </span><br><span class="line">kubectl apply -f https:&#x2F;&#x2F;github.com&#x2F;kubesphere&#x2F;ks-installer&#x2F;releases&#x2F;download&#x2F;v3.1.0&#x2F;cluster-configuration.yaml</span><br></pre></td></tr></table></figure><p>2.检查安装日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app&#x3D;ks-install -o jsonpath&#x3D;&#39;&#123;.items[0].metadata.name&#125;&#39;) -f</span><br></pre></td></tr></table></figure><p>3.使用kubectl get pod –all-namespaces，看看是否所有的豆荚，在KubeSphere相关的命名空间运行正常。如果是，请30880通过以下命令检查控制台的端口（默认情况下）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc&#x2F;ks-console -n kubesphere-system</span><br></pre></td></tr></table></figure><p>4.查看kubusphere组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n kubesphere-monitoring-system</span><br></pre></td></tr></table></figure><p>5.登录kubesphere控制台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console: http:&#x2F;&#x2F;192.168.10.103:30880</span><br><span class="line">Account: admin</span><br><span class="line">Password: P@88w0rd</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021052014123986.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520141239698.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520141239688.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> kubesphere </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s环境下kubesphere最小化安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker下jumpserver跳板机,堡垒机详细部署</title>
      <link href="posts/7853.html"/>
      <url>posts/7853.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h3 id="关于跳板机-堡垒机的介绍："><a href="#关于跳板机-堡垒机的介绍：" class="headerlink" title="关于跳板机/堡垒机的介绍："></a>关于跳板机/堡垒机的介绍：</h3><p>跳板机可以使开发或运维人员在维护过程中首先要统一登录到这台服务器，然后再登录到目标设备进行维护和操作</p><h3 id="跳板机使用场景："><a href="#跳板机使用场景：" class="headerlink" title="跳板机使用场景："></a>跳板机使用场景：</h3><p><img src="https://img-blog.csdnimg.cn/20210122105747380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="jumpserver概述"><a href="#jumpserver概述" class="headerlink" title="jumpserver概述"></a>jumpserver概述</h3><p>Jumpserver是一款开源的开源的堡垒机，可使系统的管理员和开发人员安全的连接到企业内部服务器上执行操作，并且支持大部分操作系统，是一款非常安全的远程连接工具</p><h3 id="常见支持的系统："><a href="#常见支持的系统：" class="headerlink" title="常见支持的系统："></a>常见支持的系统：</h3><p>CentOS, RedHat, Fedora, Amazon Linux<br>Debian<br>SUSE, Ubuntu<br>FreeBSD<br>其他ssh协议硬件设备</p><h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><h5 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h5><h5 id="Tips-该实验需要虚拟机接入互联网，使虚拟机上网可看我的另一个文章"><a href="#Tips-该实验需要虚拟机接入互联网，使虚拟机上网可看我的另一个文章" class="headerlink" title="Tips:该实验需要虚拟机接入互联网，使虚拟机上网可看我的另一个文章"></a>Tips:<a href="https://alexcld.com/posts/2356.html">该实验需要虚拟机接入互联网，使虚拟机上网可看我的另一个文章</a></h5><p>关闭selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#setenforce 0</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#systemctl stop firewalld</span><br><span class="line">[root@centos7 ~]#iptables -F</span><br></pre></td></tr></table></figure><h5 id="安装docker的源"><a href="#安装docker的源" class="headerlink" title="安装docker的源"></a>安装docker的源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#yum -y install wget</span><br><span class="line">[root@centos7 ~]#cd &#x2F;etc&#x2F;yum.repos.d&#x2F;</span><br><span class="line">[root@centos7 ~]#wget https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line">[root@centos7 ~]#wget http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">[root@centos7 ~]#yum -y install centos-release-openstack-ocata</span><br></pre></td></tr></table></figure><h5 id="配置mariadb"><a href="#配置mariadb" class="headerlink" title="配置mariadb"></a>配置mariadb</h5><p>安装mariadb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#yum -y install mariadb-server</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">[client-server]</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">symbolic-links&#x3D;0</span><br><span class="line">#禁止主机名解析</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line">!includedir &#x2F;etc&#x2F;my.cnf.d</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#systemctl start mariadb</span><br><span class="line">[root@centos7 ~]#systemctl enable mariadb</span><br></pre></td></tr></table></figure><p>创建jumpserver数据库并授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#mysql</span><br><span class="line">MariaDB [(none)]&gt; create database jumpserver default charset &#39;utf8&#39;;</span><br><span class="line">#创建管理账号，密码必须是数字加字母</span><br><span class="line">MariaDB [(none)]&gt; grant all on jumpserver.* to &#39;jumpserver&#39;@&#39;%&#39; identified by &#39;ywz0207.&#39;;</span><br></pre></td></tr></table></figure><h5 id="配置Redis"><a href="#配置Redis" class="headerlink" title="配置Redis"></a>配置Redis</h5><p>安装Redis</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#yum install epel-release</span><br><span class="line">[root@centos7 ~]#yum -y install redis</span><br></pre></td></tr></table></figure><p>编辑配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#vim &#x2F;etc&#x2F;redis.conf </span><br><span class="line">61：bind 0.0.0.0</span><br><span class="line">480：requirepass 123</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#systemctl start redis</span><br><span class="line">[root@centos7 ~]#systemctl enable redis</span><br></pre></td></tr></table></figure><h5 id="配置docker"><a href="#配置docker" class="headerlink" title="配置docker"></a>配置docker</h5><p>安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#yum -y install docker-ce</span><br></pre></td></tr></table></figure><p>启动docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#systemctl start docker</span><br><span class="line">[root@centos7 ~]#systemctl enable docker</span><br></pre></td></tr></table></figure><p>下载jumpserver镜像，并运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#docker run --name jms_all -d \</span><br><span class="line">    -v &#x2F;opt&#x2F;mysql:&#x2F;var&#x2F;lib&#x2F;mysql \</span><br><span class="line">    -v &#x2F;opt&#x2F;jumpserver:&#x2F;opt&#x2F;jumpserver&#x2F;data&#x2F;media \</span><br><span class="line">    -p 80:80 \</span><br><span class="line">    -p 2222:2222 \</span><br><span class="line">    -e SECRET_KEY&#x3D;PEHVdLzvZFtDQT733ntHDH1hglXQ9OQKoI1xxAfdDhpRGx3tg7 \</span><br><span class="line">    -e BOOTSTRAP_TOKEN&#x3D;YDzl55tZPTdclbUh \</span><br><span class="line">    -e DB_HOST&#x3D;192.168.10.101 \ #当前主机IP</span><br><span class="line">    -e DB_PORT&#x3D;3306 \ </span><br><span class="line">    -e DB_USER&#x3D;jumpserver \ #数据库用户</span><br><span class="line">    -e DB_PASSWORD&#x3D;ywz0207. \ #数据库密码</span><br><span class="line">    -e DB_NAME&#x3D;jumpserver \ #数据库名称</span><br><span class="line">    -e REDIS_HOST&#x3D;192.168.10.101 \</span><br><span class="line">    -e REDIS_PORT&#x3D;6379 \</span><br><span class="line">    -e REDIS_PASSWORD&#x3D;123 \ #Redis密码</span><br><span class="line">    jumpserver&#x2F;jms_all:1.4.8</span><br></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#docker logs -f jms_all</span><br><span class="line">#看到如下几行即可</span><br><span class="line">gunicorn is running: 57</span><br><span class="line">celery is running: 73</span><br><span class="line">beat is running: 75</span><br><span class="line">guacd[98]: INFO:    Guacamole proxy daemon (guacd) version 0.9.14 started</span><br><span class="line">Starting guacd: SUCCESS</span><br><span class="line">Tomcat started.</span><br><span class="line">Use eventlet dispatch</span><br><span class="line">Start coco process</span><br><span class="line">Use eventlet dispatch</span><br><span class="line">Start coco process</span><br><span class="line">Use eventlet dispatch</span><br><span class="line">Start coco process</span><br><span class="line">Jumpserver ALL 1.4.8</span><br><span class="line">官网 http:&#x2F;&#x2F;www.jumpserver.org</span><br><span class="line">文档 http:&#x2F;&#x2F;docs.jumpserver.org</span><br><span class="line">有问题请参考 http:&#x2F;&#x2F;docs.jumpserver.org&#x2F;zh&#x2F;docs&#x2F;faq.html</span><br></pre></td></tr></table></figure><p>进入容器命令 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it jms_all &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>访问测试<br>登入web界面，初始密码账号均为admin</p><p><img src="https://img-blog.csdnimg.cn/20210122110648550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="后续主机列表配置，策略，用户策略等相关截图过多，自己琢磨吧。网上有相关文档可参考"><a href="#后续主机列表配置，策略，用户策略等相关截图过多，自己琢磨吧。网上有相关文档可参考" class="headerlink" title="后续主机列表配置，策略，用户策略等相关截图过多，自己琢磨吧。网上有相关文档可参考"></a>后续主机列表配置，策略，用户策略等相关截图过多，自己琢磨吧。网上有相关文档可参考</h4>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker下jumpserver跳板机,堡垒机详细部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让Linux虚拟机连接宿主机并且能够上网</title>
      <link href="posts/2356.html"/>
      <url>posts/2356.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>系统：centos7.6<br>1：设置虚拟机的IP地址<br>[root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0<br>TYPE=Ethernet<br>BOOTPROTO=static<br>DEFROUTE=yes<br>PEERDNS=yes<br>PEERROUTES=yes<br>IPV4_FAILURE_FATAL=no<br>IPADDR=192.168.10.101<br>NETMASK=255.255.255.0<br>GATEWAY=192.168.10.254<br>DNS1=192.168.10.254<br>#IPV6INIT=yes<br>#IPV6_AUTOCONF=yes<br>#IPV6_DEFROUTE=yes<br>#IPV6_PEERDNS=yes<br>#IPV6_PEERROUTES=yes<br>#IPV6_FAILURE_FATAL=no<br>#IPV6_ADDR_GEN_MODE=stable-privacy<br>NAME=ens33<br>UUID=53739d53-97dd-47bf-9be1-8dd323d36030<br>DEVICE=ens33<br>ONBOOT=yes</p><p>注意：这里的ip地址可以随意设置，但要和后面的地址保持一致</p><p>2：将该虚拟机的网卡设置为NAT桥接模式，（默认为NAT模式）</p><p><img src="https://img-blog.csdnimg.cn/20210122094220849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3：VMware中打开虚拟网络编辑器，设置vmnet8的子网IP，要和第一步中保持一致<br><img src="https://img-blog.csdnimg.cn/20210122094241410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>4：在上图中打开vmnet8的“NAT设置”，将网关IP改为192.168.10.254，要和第一步中保持一致<br><img src="https://img-blog.csdnimg.cn/20210122094303425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>5：修改桥接模式</p><p><img src="https://img-blog.csdnimg.cn/20210122094639316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>6：在宿主机上，给vmnet8设置一个IP，IP地址是192.168.10.0网络的，不要和其他IP冲突</p><p><img src="https://img-blog.csdnimg.cn/20210122094440173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>7：在linux上分别测试与宿主机vmnet8，和互联网是否通信<br><img src="https://img-blog.csdnimg.cn/20210122095044381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 让Linux虚拟机连接宿主机并且能够上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle常用sql语句集合</title>
      <link href="posts/1651.html"/>
      <url>posts/1651.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>1、说明：创建数据库<br>Create DATABASE database-name<br>2、说明：删除数据库<br>drop database dbname<br>3、说明：备份sql server<br>— 创建备份数据的 device<br>USE master<br>EXEC sp_addumpdevice ‘disk‘, ‘testBack‘, ‘c:\mssql7backup\MyNwind_1.dat‘<br>— 开始备份<br>BACKUP DATABASE pubs TO testBack<br>4、说明：创建新表<br>create table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],…)<br>根据已有的表创建新表：<br>A：create table tab_new like tab_old (使用旧表创建新表)<br>B：create table tab_new as select col1,col2… from tab_old definition only<br>5、说明：删除新表<br>drop table tabname<br>6、说明：增加一个列<br>Alter table tabname add column col type<br>alter table student add dd char;<br>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。<br>7、说明：添加主键： Alter table tabname add primary key(col)<br>alter table student add primary key(sno);<br>说明：删除主键： Alter table tabname drop primary key(col)<br>Alter table TF_F_USER_RES drop primary key(USER_ID, PARTITION_ID, RES_TYPE_CODE, RES_CODE, START_DATE);<br>8、说明：创建索引：create [unique] index idxname on tabname(col….)<br>删除索引：drop index idxname<br>注：索引是不可更改的，想更改必须删除重新建。<br>9、说明：创建视图：create view viewname as select statement<br>删除视图：drop view viewname<br>10、说明：几个简单的基本的sql语句<br>选择：select * from table1 where 范围<br>插入：insert into table1(field1,field2) values(value1,value2)<br>删除：delete from table1 where 范围<br>更新：update table1 set field1=value1 where 范围<br>查找：select * from table1 where field1 like ’%value1%’ —like的语法很精妙，查资料!<br>排序：select * from table1 order by field1,field2 [desc]<br>总数：select count as totalcount from table1<br>求和：select sum(field1) as sumvalue from table1<br>平均：select avg(field1) as avgvalue from table1<br>最大：select max(field1) as maxvalue from table1<br>最小：select min(field1) as minvalue from table1<br>11、说明：几个高级查询运算词<br>A： UNION 运算符<br>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。<br>B： EXCEPT 运算符<br>EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。<br>C： INTERSECT 运算符<br>INTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。<br>注：使用运算词的几个查询结果行必须是一致的。<br>12、说明：使用外连接<br>A、left outer join：<br>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。<br>SQL: select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c<br>B：right outer join:<br>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。<br>C：full outer join：<br>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</p><p>二、提升</p><p>1、说明：复制表(只复制结构,源表名：a 新表名：b) (Access可用)<br>法一：select * into b from a where 1&lt;&gt;1<br>法二：select top 0 * into b from a<br>2、说明：拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)<br>insert into b(a, b, c) select d,e,f from b;</p><p>3、说明：跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)<br>insert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件<br>例子：…from b in ‘“&amp;Server.MapPath(“.”&amp;”\data.mdb” &amp;”‘ where…</p><p>4、说明：子查询(表名1：a 表名2：b)<br>select a,b,c from a where a IN (select d from b 或者: select a,b,c from a where a IN (1,2,3)</p><p>5、说明：显示文章、提交人和最后回复时间<br>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b</p><p>6、说明：外连接查询(表名1：a 表名2：b)<br>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</p><p>7、说明：在线视图查询(表名1：a<br>select * from (Select a,b,c FROM a) T where t.a &gt; 1;</p><p>8、说明：between的用法,between限制查询数据范围时包括了边界值,not between不包括<br>select * from table1 where time between time1 and time2<br>select a,b,c, from table1 where a not between 数值1 and 数值2</p><p>9、说明：in 的使用方法<br>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)</p><p>10、说明：两张关联表，删除主表中已经在副表中没有的信息<br>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1</p><p>11、说明：四表联查问题：<br>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where …</p><p>12、说明：日程安排提前五分钟提醒<br>SQL: select * from 日程安排 where datediff(‘minute‘,f开始时间,getdate())&gt;5</p><p>13、说明：一条sql 语句搞定数据库分页<br>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段</p><p>14、说明：前10条记录<br>select top 10 * form table1 where 范围</p><p>15、说明：选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)<br>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)</p><p>16、说明：包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表<br>(select a from tableA except (select a from tableB) except (select a from tableC)</p><p>17、说明：随机取出10条数据<br>select top 10 * from tablename order by newid()</p><p>18、说明：随机选择记录<br>select newid()</p><p>19、说明：删除重复记录<br>Delete from tablename where id not in (select max(id) from tablename group by col1,col2,…)</p><p>20、说明：列出数据库里所有的表名<br>select name from sysobjects where type=‘U‘</p><p>21、说明：列出表里的所有的<br>select name from syscolumns where id=object_id(‘TableName‘)</p><p>22、说明：列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。<br>select type,sum(case vender when ‘A‘ then pcs else 0 end),sum(case vender when ‘C‘ then pcs else 0 end),sum(case vender when ‘B‘ then pcs else 0 end) FROM tablename group by type<br>显示结果：<br>type vender pcs<br>电脑 A 1<br>电脑 A 1<br>光盘 B 2<br>光盘 A 2<br>手机 B 3<br>手机 C 3</p><p>23、说明：初始化表table1</p><p>TRUNCATE TABLE table1</p><p>24、说明：选择从10到15的记录<br>select top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc</p><p>三、技巧</p><p>1、1=1，1=2的使用，在SQL语句组合时用的较多</p><p>“where 1=1”是表示选择全部“where 1=2”全部不选，<br>如：<br>if @strWhere !=‘<br>begin<br>set @strSQL = ‘select count() as Total from [‘ + @tblName + ‘] where ‘ + @strWhere<br>end<br>else<br>begin<br>set @strSQL = ‘select count() as Total from [‘ + @tblName + ‘]‘<br>end</p><p>我们可以直接写成<br>set @strSQL = ‘select count(*) as Total from [‘ + @tblName + ‘] where 1=1 安定‘+ @strWhere</p><p>2、收缩数据库<br>–重建索引<br>DBCC REINDEX<br>DBCC INDEXDEFRAG<br>–收缩数据和日志<br>DBCC SHRINKDB<br>DBCC SHRINKFILE</p><p>3、压缩数据库<br>dbcc shrinkdatabase(dbname)</p><p>4、转移数据库给新用户以已存在用户权限<br>exec sp_change_users_login ‘update_one‘,‘newname‘,‘oldname‘<br>go</p><p>5、检查备份集<br>RESTORE VERIFYONLY from disk=‘E:\dvbbs.bak‘</p><p>6、修复数据库<br>Alter DATABASE [dvbbs] SET SINGLE_USER<br>GO<br>DBCC CHECKDB(‘dvbbs‘,repair_allow_data_loss) WITH TABLOCK<br>GO<br>Alter DATABASE [dvbbs] SET MULTI_USER<br>GO</p><p>7、日志清除<br>SET NOCOUNT ON<br>DECLARE @LogicalFileName sysname,<br>@MaxMinutes INT,<br>@NewSize INT</p><p>USE tablename – 要操作的数据库名<br>Select @LogicalFileName = ‘tablename_log‘, – 日志文件名<br>@MaxMinutes = 10, – Limit on time allowed to wrap log.<br>@NewSize = 1 – 你想设定的日志文件的大小(M)</p><p>– Setup / initialize<br>DECLARE @OriginalSize int<br>Select @OriginalSize = size<br>FROM sysfiles<br>Where name = @LogicalFileName<br>Select ‘Original Size of ‘ + db_name() + ‘ LOG is ‘ +<br>CONVERT(VARCHAR(30),@OriginalSize) + ‘ 8K pages or ‘ +<br>CONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + ‘MB‘<br>FROM sysfiles<br>Where name = @LogicalFileName<br>Create TABLE DummyTrans<br>(DummyColumn char (8000) not null)</p><p>DECLARE @Counter INT,<br>@StartTime DATETIME,<br>@TruncLog VARCHAR(255)<br>Select @StartTime = GETDATE(),<br>@TruncLog = ‘BACKUP LOG ‘ + db_name() + ‘ WITH TRUNCATE_ONLY‘</p><p>DBCC SHRINKFILE (@LogicalFileName, @NewSize)<br>EXEC (@TruncLog)<br>– Wrap the log if necessary.<br>WHILE @MaxMinutes &gt; DATEDIFF (mi, @StartTime, GETDATE()) – time has not expired<br>AND @OriginalSize = (Select size FROM sysfiles Where name = @LogicalFileName)<br>AND (@OriginalSize * 8 /1024) &gt; @NewSize<br>BEGIN – Outer loop.<br>Select @Counter = 0<br>WHILE ((@Counter &lt; @OriginalSize / 16) AND (@Counter &lt; 50000))<br>BEGIN – update<br>Insert DummyTrans VALUES (‘Fill Log‘)<br>Delete DummyTrans<br>Select @Counter = @Counter + 1<br>END<br>EXEC (@TruncLog)<br>END<br>Select ‘Final Size of ‘ + db_name() + ‘ LOG is ‘ +<br>CONVERT(VARCHAR(30),size) + ‘ 8K pages or ‘ +<br>CONVERT(VARCHAR(30),(size*8/1024)) + ‘MB‘<br>FROM sysfiles<br>Where name = @LogicalFileName<br>Drop TABLE DummyTrans<br>SET NOCOUNT OFF</p><p>8、说明：更改某个表<br>exec sp_changeobjectowner ‘tablename‘,‘dbo‘</p><p>9、存储更改全部表</p><p>Create PROCEDURE dbo.User_ChangeObjectOwnerBatch<br>@OldOwner as NVARCHAR(128),<br>@NewOwner as NVARCHAR(128)<br>AS</p><p>DECLARE @Name as NVARCHAR(128)<br>DECLARE @Owner as NVARCHAR(128)<br>DECLARE @OwnerName as NVARCHAR(128)</p><p>DECLARE curObject CURSOR FOR<br>select ‘Name‘ = name,<br>‘Owner‘ = user_name(uid)<br>from sysobjects<br>where user_name(uid)=@OldOwner<br>order by name</p><p>OPEN curObject<br>FETCH NEXT FROM curObject INTO @Name, @Owner<br>WHILE(@@FETCH_STATUS=0)<br>BEGIN<br>if @Owner=@OldOwner<br>begin<br>set @OwnerName = @OldOwner + ‘.‘ + rtrim(@Name)<br>exec sp_changeobjectowner @OwnerName, @NewOwner<br>end<br>– select @name,@NewOwner,@OldOwner</p><p>FETCH NEXT FROM curObject INTO @Name, @Owner<br>END</p><p>close curObject<br>deallocate curObject<br>GO</p><p>10、SQL SERVER中直接循环写入数据<br>declare @i int<br>set @i=1<br>while @i&lt;30<br>begin<br>insert into test (userid) values(@i)<br>set @i=@i+1<br>end</p>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle常用sql语句集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决oracle不能上下箭头翻历史命令问题</title>
      <link href="posts/3246.html"/>
      <url>posts/3246.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h3 id="解决命令行中上下键不能翻历史命令的问题"><a href="#解决命令行中上下键不能翻历史命令的问题" class="headerlink" title="解决命令行中上下键不能翻历史命令的问题"></a>解决命令行中上下键不能翻历史命令的问题</h3><p>安装过程：<br>将软件拷贝到/root下<br>挂载光盘到/media/mnt下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#mkdir &#x2F;media&#x2F;mnt</span><br><span class="line">#mount &#x2F;dev&#x2F;cdrom &#x2F;media&#x2F;cdrom</span><br><span class="line">#vim &#x2F;etc&#x2F;yum.repos.d&#x2F;test.repo</span><br><span class="line">[aaa]</span><br><span class="line">name&#x3D;aaa</span><br><span class="line">baseurl&#x3D;file:&#x2F;&#x2F;&#x2F;media&#x2F;cdrom&#x2F;</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgcheck&#x3D;0</span><br></pre></td></tr></table></figure><p>添加本地yum源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle ~]## yum -y install readline*</span><br><span class="line">[root@oracle ~]# cd &#x2F;opt</span><br><span class="line">[root@oracle opt]# tar zxvf rlwrap-0.42.tar.gz</span><br><span class="line">[root@oracle opt]# cd rlwrap-0.42&#x2F;</span><br><span class="line">[root@oracle rlwrap-0.42]# .&#x2F;configure &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>这样就可以使用 rlwarp 了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle rlwrap-0.42]# su oracle</span><br><span class="line">[oracle@oracle rlwrap-0.42]$ vi ~oracle&#x2F;.bash_profile</span><br><span class="line">[oracle@oracle rlwrap-0.42]$ vi ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>在末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias sqlplus&#x3D;&#39;rlwrap sqlplus&#39;</span><br><span class="line">alias rman&#x3D;&#39;rlwrap rman&#39;</span><br><span class="line">alias lsnrctl&#x3D;&#39;rlwrap lsnrctl&#39;</span><br></pre></td></tr></table></figure><p>保存退出<br>使文件立即生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[oracle@oracle opt]$ source ~oracle&#x2F;.bash_profile</span><br><span class="line">[oracle@oracle rlwrap-0.42]$ source ~oracle&#x2F;.bashrc </span><br></pre></td></tr></table></figure><p>安装完rlwrap后，有些可能使用SecureCRT会再次出现乱码，这是修改一下SecureCRT的字符编码：<br>【选项】-&gt;【会话选项】-&gt;【终端】-&gt;【外观】+</p>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决oracle不能上下箭头翻历史命令问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker pull &amp; docker search 报错：index.docker.io i/o timeout</title>
      <link href="posts/8546.html"/>
      <url>posts/8546.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="docker-pull-amp-amp-docker-search出现：Error-response-from-daemon-Get-https-index-docker-io-v1-search-q-nginx-amp-n-25-dial-tcp-lookup-index-docker-io-on-172-16-16-2-53-read-udp-172-16-16-23-44580-gt-172-16-16-2-53-i-o-timeout此类报错"><a href="#docker-pull-amp-amp-docker-search出现：Error-response-from-daemon-Get-https-index-docker-io-v1-search-q-nginx-amp-n-25-dial-tcp-lookup-index-docker-io-on-172-16-16-2-53-read-udp-172-16-16-23-44580-gt-172-16-16-2-53-i-o-timeout此类报错" class="headerlink" title="docker pull &amp;&amp; docker search出现：Error response from daemon: Get https://index.docker.io/v1/search?q=nginx&amp;n=25: dial tcp: lookup index.docker.io on 172.16.16.2:53: read udp 172.16.16.23:44580-&gt;172.16.16.2:53: i/o timeout此类报错"></a>docker pull &amp;&amp; docker search出现：Error response from daemon: Get <a href="https://index.docker.io/v1/search?q=nginx&amp;n=25">https://index.docker.io/v1/search?q=nginx&amp;n=25</a>: dial tcp: lookup index.docker.io on 172.16.16.2:53: read udp 172.16.16.23:44580-&gt;172.16.16.2:53: i/o timeout此类报错</h2><p>如图：<img src="https://img-blog.csdnimg.cn/20201103172930131.png#pic_center" alt="在这里插入图片描述"></p><h3 id="解决方法一："><a href="#解决方法一：" class="headerlink" title="解决方法一："></a>解决方法一：</h3><p>这个是因为dns域名没有解析的原因，编辑/etc/resolv.conf 文件，增加一行dns地址，例如：nameserver 8.8.4.4<br>类似这种：<br><img src="https://img-blog.csdnimg.cn/20201103173056479.png#pic_center" alt="在这里插入图片描述"></p><h3 id="解决方法二："><a href="#解决方法二：" class="headerlink" title="解决方法二："></a>解决方法二：</h3><p>也可直接在hosts文件里添加解析，从 dig返回的ip随便选个加进hosts文件：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# dig @114.114.114.114 index.docker.io</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201103173414634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201103173709440.png#pic_center" alt="在这里插入图片描述"><br>然后在进行docker pull &amp; docker search就可以了</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装oracle10G自启动实例监听</title>
      <link href="posts/6514.html"/>
      <url>posts/6514.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>安装环境:<br>这里在vmware里虚拟的RHEL5，分配的内存1G，SWAP分区1G，建议最好把SWAP分区改成2G。否则安装时，到了测试的步骤会提示监测失败。（当然，如果你强行安装一样没问题）</p><h3 id="安装Oracle-10g-Release2-前的配置"><a href="#安装Oracle-10g-Release2-前的配置" class="headerlink" title="安装Oracle 10g Release2 前的配置"></a>安装Oracle 10g Release2 前的配置</h3><h5 id="1-首先挂在光盘，安装Oracle-10g-R2所需的软件包"><a href="#1-首先挂在光盘，安装Oracle-10g-R2所需的软件包" class="headerlink" title="1. 首先挂在光盘，安装Oracle 10g R2所需的软件包"></a>1. 首先挂在光盘，安装Oracle 10g R2所需的软件包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># mkdir &#x2F;mnt&#x2F;cdrom</span><br><span class="line"># mount &#x2F;dev&#x2F;cdrom &#x2F;mnt&#x2F;cdrom</span><br><span class="line"># cd &#x2F;mnt&#x2F;cdrom&#x2F;Server&#x2F;</span><br><span class="line"># rpm -Uvh setarch-2*</span><br><span class="line"># rpm -Uvh make-3*</span><br><span class="line"># rpm -Uvh glibc-2*</span><br><span class="line"># rpm -Uvh libaio-0*</span><br><span class="line"># rpm -Uvh compat-libstdc++-33-3*</span><br><span class="line"># rpm -Uvh compat-gcc-34-3*</span><br><span class="line"># rpm -Uvh compat-gcc-34-c++-3*</span><br><span class="line"># rpm -Uvh gcc-4*</span><br><span class="line"># rpm -Uvh libXp-1*</span><br><span class="line"># rpm -Uvh openmotif22-*</span><br><span class="line"># rpm -Uvh compat-db-4*</span><br></pre></td></tr></table></figure><p>其中除了openmotif22-2.2.3-18和compat-db-4.2.52-5.1在第三张盘上，其余的包都在第一张盘上。</p><h5 id="2-修改-etc-redhat-release文件"><a href="#2-修改-etc-redhat-release文件" class="headerlink" title="2.修改/etc/redhat-release文件"></a>2.修改/etc/redhat-release文件</h5><p>因为Oracle 10g官方只支持到RHEL4为止，所以需要更改版本说明，编辑/etc/redhat-release文件,删除Red Hat Enterprise Linux Server release 5 (Tikanga)，改为redhat-4</p><h5 id="3-修改内核参数"><a href="#3-修改内核参数" class="headerlink" title="3.修改内核参数"></a>3.修改内核参数</h5><p>#vim /etc/sysctl.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kernel.shmmni &#x3D; 4096</span><br><span class="line">kernel.sem &#x3D; 250 32000 100 128</span><br><span class="line">fs.file-max &#x3D; 65536</span><br><span class="line">net.ipv4.ip_local_port_range &#x3D; 1024 65000</span><br><span class="line">net.core.rmem_default&#x3D;262144</span><br><span class="line">net.core.rmem_max&#x3D;262144</span><br><span class="line">net.core.wmem_default&#x3D;262144</span><br><span class="line">net.core.wmem_max&#x3D;262144</span><br></pre></td></tr></table></figure><p>使更改立即生效，使用下面的命令：</p><p>#sysctl -p</p><h5 id="4-建立安装Oracle需要的用户，组，及目录"><a href="#4-建立安装Oracle需要的用户，组，及目录" class="headerlink" title="4.建立安装Oracle需要的用户，组，及目录"></a>4.建立安装Oracle需要的用户，组，及目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#groupadd oinstall</span><br><span class="line">#groupadd dba</span><br><span class="line">#groupadd oper</span><br><span class="line">#useradd -g oinstall -G dba oracle</span><br><span class="line">#passwd oracle</span><br><span class="line"></span><br><span class="line">#mkdir &#x2F;oracle</span><br><span class="line">#chown -R oracle:oinstall &#x2F;oracle</span><br><span class="line">#chmod -R 775 &#x2F;oracle</span><br></pre></td></tr></table></figure><p>安装oracle的目录建议安装在一个单独的分区或者磁盘上。</p><h5 id="5-设置oracle用户的shell-limit"><a href="#5-设置oracle用户的shell-limit" class="headerlink" title="5.设置oracle用户的shell limit"></a>5.设置oracle用户的shell limit</h5><p>#vi /etc/security/limits.conf    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">oracle soft nproc 2047</span><br><span class="line">oracle hard nproc 16384</span><br><span class="line">oracle soft nofile 1024</span><br><span class="line">oracle hard nofile 65536</span><br></pre></td></tr></table></figure><p>接下来更改/etc/pam.d/login文件，添加下面的内容，使shell limit生效：</p><p>#vi /etc/pam.d/login</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session                  required                pam_limits.so</span><br></pre></td></tr></table></figure><h5 id="6-配置IP地址"><a href="#6-配置IP地址" class="headerlink" title="6.配置IP地址"></a>6.配置IP地址</h5><p>安装RHEL的时候最好采用静态IP地址，如果当时选择的是DHCP，现在需要更改/etc/sysconfig/network-scripts/ifcfg-eth0文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@TSM54-Test network-scripts]# cat ifcfg-eth0</span><br><span class="line"># Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE]</span><br><span class="line">DEVICE&#x3D;eth0</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">HWADDR&#x3D;00:0C:29:4B:17:C4</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">IPADDR&#x3D;192.168.68.98</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">GATEWAY&#x3D;192.168.68.10</span><br></pre></td></tr></table></figure><h5 id="7-配置oracle用户的环境变量"><a href="#7-配置oracle用户的环境变量" class="headerlink" title="7.配置oracle用户的环境变量"></a>7.配置oracle用户的环境变量</h5><p>下面的操作，该用oracle用户登陆执行了。</p><p>为了防止安装oracle时出现乱码，先把语言环境改为英文,在终端里输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[oracle@TSM54-TEST ~]$export LC_CTYPE&#x3D;en_US.UTF-8</span><br></pre></td></tr></table></figure><p>接下来，编辑/home/oracle目录下的.bash_profile文件，添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">export ORACLE_BASE&#x3D;&#x2F;oracle</span><br><span class="line">export ORACLE_HOME&#x3D;$ORACLE_BASE&#x2F;product&#x2F;10.2.0&#x2F;db_1</span><br><span class="line">export ORACLE_SID&#x3D;orcl</span><br><span class="line">export PATH&#x3D;$PATH:$ORACLE_HOME&#x2F;bin</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$ORACLE_HOME&#x2F;lib:&#x2F;lib:&#x2F;usr&#x2F;lib</span><br><span class="line">CLASSPATH&#x3D;$ORACLE_HOME&#x2F;JRE:$ORACLE_HOME&#x2F;jlib:$ORACLE_HOME&#x2F;rdbms&#x2F;jlib</span><br><span class="line">export CLASSPATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ $USER &#x3D; &quot;oracle&quot; ]; then</span><br><span class="line">        if [ $SHELL &#x3D; &quot;&#x2F;bin&#x2F;ksh&quot; ]; then</span><br><span class="line">                ulimit -p 16384</span><br><span class="line">                ulimit -n 65536</span><br><span class="line">        else</span><br><span class="line">                ulimit -u 16384 -n 65536</span><br><span class="line">        fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="可以用oracle用户登陆进入系统安装，或者用第三方工具xmanager"><a href="#可以用oracle用户登陆进入系统安装，或者用第三方工具xmanager" class="headerlink" title="可以用oracle用户登陆进入系统安装，或者用第三方工具xmanager"></a>可以用oracle用户登陆进入系统安装，或者用第三方工具xmanager</h3><h5 id="然后安装Xmanager-启动Xstart-在HOST填写LINUX的IP地址，选择SSH协议，用户名和密码与LINUX登陆一样，选择用户界面，在Command-下选择GNOME-我的是GNOME-，最后RUN，然后打开Xshell-就能够远程控制LINUX了"><a href="#然后安装Xmanager-启动Xstart-在HOST填写LINUX的IP地址，选择SSH协议，用户名和密码与LINUX登陆一样，选择用户界面，在Command-下选择GNOME-我的是GNOME-，最后RUN，然后打开Xshell-就能够远程控制LINUX了" class="headerlink" title="然后安装Xmanager,启动Xstart 在HOST填写LINUX的IP地址，选择SSH协议，用户名和密码与LINUX登陆一样，选择用户界面，在Command 下选择GNOME  我的是GNOME ，最后RUN，然后打开Xshell 就能够远程控制LINUX了"></a>然后安装Xmanager,启动Xstart 在HOST填写LINUX的IP地址，选择SSH协议，用户名和密码与LINUX登陆一样，选择用户界面，在Command 下选择GNOME  我的是GNOME ，最后RUN，然后打开Xshell 就能够远程控制LINUX了</h5><h3 id="安装Oracle-10g"><a href="#安装Oracle-10g" class="headerlink" title="安装Oracle 10g"></a>安装Oracle 10g</h3><p>我把10201_database_linux32.zip放在/opt目录下，并通过</p><p>#unzip 10201_database_linux32.zip解压，现在使用oracle用户到/opt/database目录下执行安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[oracle@TSM54-Test opt]$ cd &#x2F;opt&#x2F;database&#x2F;</span><br><span class="line">[oracle@TSM54-Test database]$ ls</span><br><span class="line">doc install response runInstaller stage welcome.html</span><br><span class="line">[oracle@TSM54-Test database]$ .&#x2F;runInstaller</span><br></pre></td></tr></table></figure><p>然后根据自己真实环境通过图形化界面安装oracle10g<br>这里暂时不做多余说明，后续会将图放上来</p><h3 id="数据库的启动"><a href="#数据库的启动" class="headerlink" title="数据库的启动"></a>数据库的启动</h3><p>启动过程分为：启动实例、由实例装载数据库、打开数据库<br>SQL&gt; startup nomount<br>只启动实例</p><p>SQL&gt; startup mount<br>启动实例，并加载数据库，但不打开数据库</p><p>SQL&gt; startup<br>启动实例、由实例装载数据库、打开数据库</p><p>SQL&gt; alter database mount;<br>如果使用startup nomount启动实例，可以用此命令加载数据库，但不会启动数据库</p><p>SQL&gt; alter database open;<br>如果当前处于数据库已加载状态，可以使用此命令打开数据库</p><p>9：关闭数据库<br>SQL&gt; shutdown normal<br>等同于直接使用shutdown命令，</p><p>SQL&gt; shutdown immediate</p><p>SQL&gt; shutdown transactional</p><p>SQL&gt; shutdown abort</p><p>10：启动与关闭监听<br>[oracle@oracle ~]$ lsnrctl start</p><p>[oracle@oracle ~]$ lsnrctl stop</p><p>[oracle@oracle ~]$ lsnrctl </p><p>LSNRCTL for Linux: Version 12.2.0.1.0 - Production on 03-8月 -2018 05:08:52</p><p>Copyright (c) 1991, 2016, Oracle.  All rights reserved.</p><p>欢迎来到LSNRCTL, 请键入”help”以获得信息。</p><p>LSNRCTL&gt; </p><h3 id="配置oracle开机自启动实例，监听"><a href="#配置oracle开机自启动实例，监听" class="headerlink" title="配置oracle开机自启动实例，监听"></a>配置oracle开机自启动实例，监听</h3><p>1.修改/etc/oratab文件，将N改为Y即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#vim &#x2F;etc&#x2F;oratab</span><br><span class="line">#game:&#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;10.2.0&#x2F;db_1:Y</span><br><span class="line">--格式：$ORACLE_SID:$ORACLE_HOME:&lt;N|Y&gt;   </span><br><span class="line">--&lt;N|Y&gt;选项代表开机是否自启动</span><br><span class="line">--game:&#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;10.2.0&#x2F;db_1:N   --dbca创建库时注册的默认信息</span><br></pre></td></tr></table></figure><p>2.确认dbstart文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#cd $ORACLE_HOME&#x2F;bin</span><br><span class="line">#ls -ll | grep dbstart</span><br><span class="line">#vim dbstart</span><br><span class="line">--dbstart为开机自启动脚本，让系统开机就去执行dbstart脚本文件，它会去读oratab文件，读到Y就会把对应的实例开机自启动</span><br><span class="line"></span><br><span class="line">--调整或确认监听路径，如ORACLE_HOME_LISTNER&#x3D;&#x2F;ade&#x2F;vikrkuma_new&#x2F;oracle或ORACLE_HOME_LISTNER&#x3D;$ORACLE_HOME根据设置的监听调整路径</span><br></pre></td></tr></table></figure><p>3.编辑/etc/rc.d/rc.local</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#vim &#x2F;etc&#x2F;rc.d&#x2F;rc.local #添加如下两行启动实例，启动监听</span><br><span class="line">su - oracle -c&quot;&#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;10.2.0&#x2F;db_1&#x2F;bin&#x2F;dbstart&quot;</span><br><span class="line">su - oracle -c&quot;&#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;10.2.0&#x2F;db_1&#x2F;bin&#x2F;lsnrctl start&quot;</span><br><span class="line">--命令中-c代表执行脚本，脚本dbstart中指定启动的实例，脚本lsnrctl中启动配置的监听</span><br></pre></td></tr></table></figure><p>小结：<br>linux下设置实例自启动有关脚本：</p><p>oratab：实例是否自启动的注册信息</p><p>dbstart：开机启动脚本文件会读取oratab信息</p><p>rc.local：开机后立即要做的文件</p><p>到此结束，愉快的开始oracle之旅</p><h4 id="数据库常用sql语句集合"><a href="#数据库常用sql语句集合" class="headerlink" title="数据库常用sql语句集合"></a><a href="https://alexcld.com/posts/1651.html">数据库常用sql语句集合</a></h4><h3 id="解决oracle不能上下翻历史命令问题"><a href="#解决oracle不能上下翻历史命令问题" class="headerlink" title="解决oracle不能上下翻历史命令问题"></a><a href="https://alexcld.com/posts/3246.html">解决oracle不能上下翻历史命令问题</a></h3>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux安装oracle10G自启动实例监听 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-butterfly使用aplayer加载音乐页面</title>
      <link href="posts/1564.html"/>
      <url>posts/1564.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>由于hexo butterfly主题作者没有详细说明如何加载aplayer，之指明了aplayer官网文档。但是官网文档的教程未免有些难懂（尤其是对于新手），因为网上找到的大多为ejs创造的主题，而本主题使用了pug，所以，我将我摸索的经验在此公布，希望能带给使用pug编写的主题的朋友们一些帮助</p><p>首先，打开shell（windows cmd），然后定位到你博客的根目录下<br>接着，依次执行三条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page music</span><br><span class="line">npm install aplayer</span><br><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>接着，假如安装成功，则可以定位到<br>主题目录\layout\includes<br>看看layout.pug应该出现以下字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">head</span><br><span class="line">   include .&#x2F;head.pug</span><br><span class="line">    link(rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;APlayer.min.css&quot;)</span><br><span class="line">    div(id&#x3D;&quot;aplayer&quot;)</span><br><span class="line">    script(src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;radium-bit&#x2F;res@master&#x2F;live2d&#x2F;autoload.js&quot; async)</span><br><span class="line">    script(src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting@2&#x2F;dist&#x2F;Meting.min.js&quot; async)</span><br><span class="line"> body</span><br></pre></td></tr></table></figure><p>若不存在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">link(rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;APlayer.min.css&quot;)</span><br><span class="line">div(id&#x3D;&quot;aplayer&quot;)</span><br><span class="line">script(src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting@2&#x2F;dist&#x2F;Meting.min.js&quot; async)</span><br></pre></td></tr></table></figure><p>若不存在请手动加上。一定要注意缩进与上述结构一致！因为缩进是Pug的表达方式。<br>接着，查看aplayer.pug，若文件不存在。请创建文件并复制以下内容手动加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">link(rel&#x3D;&quot;stylesheet&quot; type&#x3D;&#39;text&#x2F;css&#39;, href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer@1.10&#x2F;dist&#x2F;APlayer.min.css&quot;)</span><br><span class="line">script(type&#x3D;&#39;text&#x2F;javascript&#39;, src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer@1.10&#x2F;dist&#x2F;APlayer.min.js&quot;)</span><br><span class="line">script(type&#x3D;&#39;text&#x2F;javascript&#39;, src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting@1.2&#x2F;dist&#x2F;Meting.min.js&quot;)</span><br></pre></td></tr></table></figure><p>最后，返回博客根目录，查看_config.yml在最后添加以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#aplayer</span><br><span class="line">aplayer: </span><br><span class="line">  script_dir: js                      # Public 目录下脚本目录路径，默认: &#39;assets&#x2F;js&#39;</span><br><span class="line">  style_dir: css                         # Public 目录下样式目录路径，默认: &#39;assets&#x2F;css&#39;</span><br><span class="line">  #cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  #style_cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span><br><span class="line">  meting: true                                  # MetingJS 支持</span><br><span class="line">  #meting_api: http:&#x2F;&#x2F;xxx&#x2F;api.php                # 自定义 Meting API 地址</span><br><span class="line">  #meting_cdn: http:&#x2F;&#x2F;xxx&#x2F;Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  asset_inject: true                            # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span><br><span class="line">  #externalLink: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js       # 老版本参数，功能与参数 cdn 相同meting: true</span><br></pre></td></tr></table></figure><p>并调整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>最后，在 博客根目录\source\music\index.md使用以下格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的歌单</span><br><span class="line">date: 2019-05-17 16:14:00</span><br><span class="line">cover: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;radium-bit&#x2F;res@latest&#x2F;Music.jpg</span><br><span class="line">type: &quot;music&quot;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;font color&#x3D;#0c74d6 size&#x3D;3 face&#x3D;&quot;黑体&quot;&gt;**这是歌单介绍，如果不需要刻意留空**&lt;&#x2F;font&gt;</span><br><span class="line"></span><br><span class="line">&#123;% meting &quot;697054881&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br></pre></td></tr></table></figure><p>那一串数字是歌单ID，“netease”为网易云音乐。详细参数用法请参考官方文档<br>歌单ID提取方法是以链接分享某个歌单<br>例如<br><a href="https://music.163.com/playlist?id=313418853&amp;userid=1362990007">https://music.163.com/playlist?id=313418853&amp;userid=1362990007</a></p><p>红色部分就是歌单ID了</p><p>写入完毕后，回到CMD。输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>生成完毕！接下来就可以部署到你的服务器啦(…•˘_˘•…)</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo-butterfly使用aplayer加载音乐页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器上搭建kubernetes集群</title>
      <link href="posts/8327.html"/>
      <url>posts/8327.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="云服务器上搭建kubernetes集群"><a href="#云服务器上搭建kubernetes集群" class="headerlink" title="云服务器上搭建kubernetes集群"></a>云服务器上搭建kubernetes集群</h1><h3 id="使用的虚机百度云BCC，centos7-5-，2核4G"><a href="#使用的虚机百度云BCC，centos7-5-，2核4G" class="headerlink" title="使用的虚机百度云BCC，centos7.5 ，2核4G"></a>使用的虚机百度云BCC，centos7.5 ，2核4G</h3><p>yum源百度云官方自带yum源，腾讯，阿里云自带yum源都可参考该文档</p><p>搭建k8，一共三台虚机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master 192.168.0.8master跟etcd共用一台</span><br><span class="line">minion1 192.168.0.9</span><br><span class="line">minion2 192.168.0.10</span><br></pre></td></tr></table></figure><p>百度云虚机自带yum源就可以下载<br>三台虚机都需要安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum -y install kubernetes etcd flannel ntp</span><br><span class="line">[root@minion1 ~]# yum -y install kubernetes etcd flannel ntp</span><br><span class="line">[root@minion2 ~]# yum -y install kubernetes etcd flannel ntp</span><br></pre></td></tr></table></figure><p>关闭防火墙 三台同样需要关闭     注：若是生产环境不必关闭，写firewalld rule</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl stop firewalld &amp;&amp; systemctl disable firewalld &amp;&amp; systemctl status firewalld</span><br><span class="line">[root@minion1~]# systemctl stop firewalld &amp;&amp; systemctl disable firewalld &amp;&amp; systemctl status firewalld</span><br><span class="line">[root@minion2~]# systemctl stop firewalld &amp;&amp; systemctl disable firewalld &amp;&amp; systemctl status firewalld</span><br></pre></td></tr></table></figure><p>在hosts文件添加以下内容，执行一台，剩余拷贝就ok</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# vim &#x2F;etc&#x2F;hosts</span><br><span class="line">192.168.0.8 master</span><br><span class="line">192.168.0.8 etcd</span><br><span class="line">192.168.0.9 minion1</span><br><span class="line">192.168.0.10 minion2</span><br><span class="line">[root@master ~]# scp &#x2F;etc&#x2F;hosts 192.168.0.9:&#x2F;etc&#x2F;</span><br><span class="line">[root@master ~]# scp &#x2F;etc&#x2F;hosts 192.168.0.10:&#x2F;etc&#x2F;</span><br></pre></td></tr></table></figure><p>在master上配置etcd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# vim &#x2F;etc&#x2F;etcd&#x2F;etcd.conf </span><br><span class="line">改：2 ETCD NAME&#x3D;default</span><br><span class="line">为：2ETCD_NAME&#x3D;&quot;etcd&quot;</span><br><span class="line">ETCD_DATA_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;default.etcd&quot;</span><br><span class="line">改：9 ETCD_LISTEN_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost:2379&quot;</span><br><span class="line">为：ETCD_LISTEN_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost：2379,http:&#x2F;&#x2F;192.168.0.8:2379&quot;</span><br><span class="line">改：20 ETCD_ADVERTISE_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost:2379&quot;</span><br><span class="line">为：ETCD_ADVERTISE_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;192.168.0.8:2379&quot;</span><br><span class="line">注释：    advertise [aedvetarz] 做广告，做宣传；通告，通知</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;etcd.conf 配置文件含意如下：</span><br><span class="line">ETCD_NAME&#x3D;&quot;etcd&quot;</span><br><span class="line">etcd节点名称，如果etcd 集群只有一台etcd，这一项可以注释不用配置，默认名称为default，这</span><br><span class="line">个名宇后面会用到。</span><br><span class="line">ETCD_DATA_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;default.etcd&quot;</span><br><span class="line">etcd 存储数据的目录</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost:2379,http:&#x2F;&#x2F;192.168.1.63:2379&quot;</span><br><span class="line">etcd 对外服务监听地址，一般指定2379端口，如果为0.0.0.0将会监听所有接口</span><br><span class="line">ETCD_ARGS&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure><p>需要额外添加的参数，可以自己添加，etcd 的所有参数可以通过etcd-h查看。<br><strong>启动服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl start etcd</span><br><span class="line">[root@master ~]# systemctl status etcd</span><br><span class="line">[root@master ~]# systemctl enable etcd</span><br><span class="line">[root@master ~]# netstat -anptu | grep 2379</span><br><span class="line">tcp        0      0 127.0.0.1:2379          0.0.0.0:*               LISTEN      2963&#x2F;etcd           </span><br><span class="line">tcp        0      0 192.168.0.8:2379        0.0.0.0:*               LISTEN      2963&#x2F;etcd           </span><br><span class="line">tcp        0      0 192.168.0.8:38866       192.168.0.8:2379        ESTABLISHED 2963&#x2F;etcd           </span><br><span class="line">tcp        0      0 127.0.0.1:2379          127.0.0.1:45804         ESTABLISHED 2963&#x2F;etcd           </span><br><span class="line">tcp        0      0 192.168.0.8:2379        192.168.0.8:38866       ESTABLISHED 2963&#x2F;etcd           </span><br><span class="line">tcp        0      0 127.0.0.1:45804         127.0.0.1:2379          ESTABLISHED 2963&#x2F;etcd           </span><br></pre></td></tr></table></figure><p>检查etcd集群列表，这里只有一台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# etcdctl member list</span><br><span class="line">8e9e05c52164694d: name&#x3D;etcd peerURLs&#x3D;http:&#x2F;&#x2F;localhost:2380 clientURLs&#x3D;http:&#x2F;&#x2F;192.168.0.8:2379 isLeader&#x3D;true</span><br></pre></td></tr></table></figure><p>在master配置master<br>修改kubernetets配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;config </span><br><span class="line">改：KUBE_MASTER&#x3D;&quot;--master&#x3D;http:&#x2F;&#x2F;127.0.0.1:8080&quot;</span><br><span class="line">为：KUBE_MASTER&#x3D;&quot;--master&#x3D;http:&#x2F;&#x2F;192.168.0.8:8080&quot;</span><br></pre></td></tr></table></figure><p>修改apiserver配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;apiserver</span><br><span class="line">[root@xuegod63 ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;apiserver</span><br><span class="line">改：8 KUBE_API_ADDRESS&#x3D;&quot;--insecure-bind-address&#x3D;127.0.0.1&quot;</span><br><span class="line">为：8 KUBE_API_ADDRESS&#x3D;&quot;--insecure-bind-address&#x3D;0.0.0.0</span><br><span class="line">改：17 KUBE_ETCD_SERVERS&#x3D;&quot;--etcd-servers&#x3D;http:&#x2F;&#x2F;127.0.0.1:2379&quot;</span><br><span class="line">为：KUBE_ETCD_SERVERS&#x3D;&quot;--etcd-servers&#x3D;http:&#x2F;&#x2F;192.168.0.8:2379&quot;</span><br><span class="line">改23行：</span><br><span class="line">KUBE_ADMISSION_CONTROL&#x3D;&quot;--admission-control&#x3D;NamespaceLifecycle,NamespaceExist</span><br><span class="line">s,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota&quot;</span><br><span class="line">为：KUBE_ADMISSION_CONTROL&#x3D;&quot;--admission-control&#x3D;AlwaysAdmit&quot; #这里必须配置</span><br><span class="line">正确</span><br></pre></td></tr></table></figure><p>配置kube-controller-manager配置文件<br>默认不需要改动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# cat &#x2F;etc&#x2F;kubernetes&#x2F;controller-manager </span><br></pre></td></tr></table></figure><p>配置kube-scheduler配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;scheduler </span><br><span class="line">改：KUBE_SCHEDULER_ARGS&#x3D;&quot; &quot;</span><br><span class="line">为：KUBE_SCHEDULER_ARGS&#x3D;&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure><p>设置etcd网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# etcdctl set &#x2F;k8s&#x2F;network&#x2F;config &#39;&#123;&quot;Network&quot;:&quot;10.255.0.0&#x2F;16&quot;&#125;&#39;   &#x2F;&#x2F;用于存储flanneld网络信息</span><br><span class="line">[root@master ~]# etcdctl get &#x2F;k8s&#x2F;network&#x2F;config      &#x2F;&#x2F;查看</span><br><span class="line">&#123;&quot;Network&quot;:&quot;10.255.0.0&#x2F;16&quot;&#125;</span><br></pre></td></tr></table></figure><p>配置flanneld服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# vim &#x2F;etc&#x2F;sysconfig&#x2F;flanneld </span><br><span class="line">改：4FLANNEL_ETCD_ENDPOINTS&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1:2379&quot;</span><br><span class="line">为：4FLANNEL_ETCD_ENDPOINTS&#x3D;&quot;http:&#x2F;&#x2F;192.168.0.8:2379&quot;</span><br><span class="line">改:8 FLANNEL_ETCD_PREFIX&#x3D;&quot;&#x2F;atomic.io&#x2F;network&quot;</span><br><span class="line">为：8 FLANNEL_ETCD_PREFIX&#x3D;&quot;&#x2F;k8s&#x2F;network&quot;</span><br><span class="line">#注其中&#x2F;k8s&#x2F;network 与上面 etcd 中的 Network 对应</span><br><span class="line">改：11 #FLANNEL_OPTIONS&#x3D;&quot;&quot;</span><br><span class="line">为：11 FLANNEL_OPTIONS&#x3D;&quot;--iface&#x3D;eth0&quot; #指定 通信的物理网卡</span><br><span class="line">[root@master ~]# systemctl restart flanneld.service </span><br><span class="line">[root@master ~]# systemctl status flanneld.service </span><br><span class="line">[root@master ~]# cat &#x2F;run&#x2F;flannel&#x2F;subnet.env  &#x2F;&#x2F;查看&#x2F;run&#x2F;flannel&#x2F;subnet.env 子网信息</span><br><span class="line">FLANNEL_NETWORK&#x3D;10.255.0.0&#x2F;16</span><br><span class="line">FLANNEL_SUBNET&#x3D;10.255.6.1&#x2F;24</span><br><span class="line">FLANNEL_MTU&#x3D;1472</span><br><span class="line">FLANNEL_IPMASQ&#x3D;false</span><br></pre></td></tr></table></figure><p>之后会有一个脚本姜subnet.env转写程一个docker的环境变量文件/run/flannel/docker<br>docker0的地址是由 /run/flannel/subnet.env 的FLANNEL_SUBENT参数决定的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# cat &#x2F;run&#x2F;flannel&#x2F;docker </span><br><span class="line">DOCKER_OPT_BIP&#x3D;&quot;--bip&#x3D;10.255.6.1&#x2F;24&quot;</span><br><span class="line">DOCKER_OPT_IPMASQ&#x3D;&quot;--ip-masq&#x3D;true&quot;</span><br><span class="line">DOCKER_OPT_MTU&#x3D;&quot;--mtu&#x3D;1472&quot;</span><br><span class="line">DOCKER_NETWORK_OPTIONS&#x3D;&quot; --bip&#x3D;10.255.6.1&#x2F;24 --ip-masq&#x3D;true --mtu&#x3D;1472&quot;</span><br></pre></td></tr></table></figure><p>启动master上的4个服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl restart kube-apiserver kube-controller-manager kube-scheduler flanneld</span><br><span class="line">[root@master ~]# systemctl status kube-apiserver kube-controller-manager kube-scheduler flanneld</span><br><span class="line">[root@master ~]# systemctl enable kube-apiserver kube-controller-manager kube-scheduler flanneld</span><br></pre></td></tr></table></figure><p><strong>到此master和etcd节点配置成功</strong></p><p>配置minion1,采用flannel方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# vim &#x2F;etc&#x2F;sysconfig&#x2F;flanneld </span><br><span class="line">改：4FLANNEL_ETCD_ENDPOINTS&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1:2379&quot;</span><br><span class="line">为：4FLANNEL_ETCD_ENDPOINTS&#x3D;&quot;http:&#x2F;&#x2F;192.168.0.8:2379&quot;</span><br><span class="line">改:8 FLANNEL_ETCD_PREFIX&#x3D;&quot;&#x2F;atomic.io&#x2F;network&quot;</span><br><span class="line">为：8 FLANNEL_ETCD_PREFIX&#x3D;&quot;&#x2F;k8s&#x2F;network&quot;</span><br><span class="line">#注其中&#x2F;k8s&#x2F;network 与上面 etcd 中的 Network 对应</span><br><span class="line">改：11 #FLANNEL_OPTIONS&#x3D;&quot;&quot;</span><br><span class="line">为：11 FLANNEL_OPTIONS&#x3D;&quot;--iface&#x3D;eth0&quot; #指定 通信的物理网卡</span><br></pre></td></tr></table></figure><p>配置minion1上的master地址和kube-proxy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;config </span><br><span class="line">改：KUBE_MASTER&#x3D;&quot;--master&#x3D;http:&#x2F;&#x2F;127.0.01:8080&quot;</span><br><span class="line">为：KUBE_MASTER&#x3D;&quot;--master&#x3D;http:&#x2F;&#x2F;192.168.0.8:8080&quot;</span><br></pre></td></tr></table></figure><p>kube-proxy默认不需要改动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# grep -v &#39;^#&#39; &#x2F;etc&#x2F;kubernetes&#x2F;proxy </span><br><span class="line">KUBE_PROXY_ARGS&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure><p>配置minion1 kubelet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;kubelet </span><br><span class="line">改：5 KUBELET_ADDRESS&#x3D;&quot;--address&#x3D;127.0.0.1&quot;</span><br><span class="line">为：5KUBELET_ADDRESS&#x3D;&quot;--address&#x3D;0.0.0.0&quot; #默认只监听127.0.0.1，要改成：0.0.0.0，</span><br><span class="line">因为后期要使用kubectl 远程连接到kubelet 服务上，来查看 pod 及 pod 中容器的状态。如果是 127</span><br><span class="line">就无法远程连接kubelet服务。</span><br><span class="line">改：11 KUBELET_HOSTNAME&#x3D;&quot;--hostname-override&#x3D;127.0.0.1&quot;</span><br><span class="line">为：11 KUBELET_HOSTNAME&#x3D;&quot;_-hostname-override&#x3D;minion1&quot; # minion 的主机名，设置</span><br><span class="line">成和本主机机名一样，便于识别。</span><br><span class="line">改：14 KUBELET_API_SERVER&#x3D;&quot;--api-servers&#x3D;http:&#x2F;&#x2F;127.0.0.1:8080&quot;</span><br><span class="line">为：14 KUBELET_API_SERVER&#x3D;&quot;--api-servers&#x3D;http:&#x2F;&#x2F;192.168.0.8:8080&quot; #批定 apiserver</span><br><span class="line">的地址</span><br></pre></td></tr></table></figure><p>启动minion1服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# systemctl restart flanneld kube-proxy kubelet docker</span><br><span class="line">[root@minion1 ~]# systemctl enable flanneld kube-proxy kubelet docker</span><br><span class="line">[root@minion1 ~]# systemctl status flanneld kube-proxy kubelet docker</span><br><span class="line">查看</span><br><span class="line">[root@minion1 ~]# ifconfig</span><br><span class="line">docker0: flags&#x3D;4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.255.90.1  netmask 255.255.255.0  broadcast 0.0.0.0</span><br><span class="line">        ether 02:42:0c:ce:9d:7d  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel0: flags&#x3D;4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1472</span><br><span class="line">        inet 10.255.90.0  netmask 255.255.0.0  destination 10.255.90.0</span><br><span class="line">        inet6 fe80::6062:c456:9093:278b  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 3  bytes 144 (144.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>查看kube-proxy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# netstat -antup | grep proxy</span><br><span class="line">tcp        0      0 127.0.0.1:10249         0.0.0.0:*               LISTEN      3242&#x2F;kube-proxy     </span><br><span class="line">tcp        0      0 192.168.0.9:53976       192.168.0.8:8080        ESTABLISHED 3242&#x2F;kube-proxy     </span><br><span class="line">tcp        0      0 192.168.0.9:53974       192.168.0.8:8080        ESTABLISHED 3242&#x2F;kube-proxy  </span><br></pre></td></tr></table></figure><p>配置minion2,采用flannel方式，和minion1配置一样<br>这里 直接将minion1的的配置文件拷贝到minion2了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# scp &#x2F;etc&#x2F;sysconfig&#x2F;flanneld 189.168.0.10:&#x2F;etc&#x2F;sysconfig&#x2F;</span><br><span class="line">再次确认拷贝正确</span><br><span class="line">[root@minion2 ~]# grep -v &#39;^#&#39; &#x2F;etc&#x2F;sysconfig&#x2F;flanneld </span><br><span class="line"></span><br><span class="line">FLANNEL_ETCD_ENDPOINTS&#x3D;&quot;http:&#x2F;&#x2F;192.168.0.8:2379&quot;</span><br><span class="line"></span><br><span class="line">FLANNEL_ETCD_PREFIX&#x3D;&quot;&#x2F;k8s&#x2F;network&quot;</span><br><span class="line"></span><br><span class="line">FLANNEL_OPTIONS&#x3D;&quot;--iface&#x3D;eth0&quot;</span><br><span class="line">[root@minion2 ~]# systemctl start flanneld.service </span><br><span class="line">[root@minion2 ~]# ifconfig </span><br><span class="line">flannel0: flags&#x3D;4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1472</span><br><span class="line">        inet 10.255.50.0  netmask 255.255.0.0  destination 10.255.50.0</span><br><span class="line">        inet6 fe80::435b:45bf:df6b:58c  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2  bytes 96 (96.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>配置minion2上的地址和kube-proxy<br>这里也直接拷贝minion1的配置文件了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# scp &#x2F;etc&#x2F;kubernetes&#x2F;config 192.168.0.10:&#x2F;etc&#x2F;kubernetes&#x2F;</span><br><span class="line">[root@minion1 ~]# scp &#x2F;etc&#x2F;kubernetes&#x2F;proxy 192.168.0.10:&#x2F;etc&#x2F;kubernetes&#x2F;</span><br><span class="line">[root@minion2 ~]# systemctl start kube-proxy</span><br><span class="line">[root@minion2 ~]# netstat -anptu | grep proxy</span><br><span class="line">tcp        0      0 127.0.0.1:10249         0.0.0.0:*               LISTEN      29942&#x2F;kube-proxy    </span><br><span class="line">tcp        0      0 192.168.0.10:59170      192.168.0.8:8080        ESTABLISHED 29942&#x2F;kube-proxy    </span><br><span class="line">tcp        0      0 192.168.0.10:59168      192.168.0.8:8080        ESTABLISHED 29942&#x2F;kube-proxy    </span><br><span class="line">tcp        0      0 192.168.0.10:59166      192.168.0.8:8080        ESTABLISHED 29942&#x2F;kube-proxy    </span><br></pre></td></tr></table></figure><p>配置minion2 kubelet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@minion1 ~]# scp &#x2F;etc&#x2F;kubernetes&#x2F;kubelet 192.168.0.10:&#x2F;etc&#x2F;kubernetes&#x2F;</span><br><span class="line">root@192.168.0.10 password: </span><br><span class="line">kubelet                                                                                               100%  613     1.6MB&#x2F;s   00:00  </span><br><span class="line">[root@minion2 ~]# vim &#x2F;etc&#x2F;kubernetes&#x2F;kubelet </span><br><span class="line">改：KUBELET_HOSTNAME&#x3D;&quot;--hostname-override&#x3D;minion1&quot;</span><br><span class="line">为：KUBELET_HOSTNAME&#x3D;&quot;--hostname-override&#x3D;minion2&quot;</span><br><span class="line">[root@minion2 ~]# systemctl start kubelet</span><br><span class="line">[root@minion2 ~]# netstat -antup | grep 8080    &#x2F;&#x2F;查看：已建立连接</span><br><span class="line">tcp        0      0 192.168.0.10:59216      192.168.0.8:8080        TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 192.168.0.10:59168      192.168.0.8:8080        ESTABLISHED 29942&#x2F;kube-proxy    </span><br><span class="line">tcp        0      0 192.168.0.10:59212      192.168.0.8:8080        ESTABLISHED 32339&#x2F;kubelet       </span><br><span class="line">tcp        0      0 192.168.0.10:59214      192.168.0.8:8080        ESTABLISHED 32339&#x2F;kubelet       </span><br><span class="line">tcp        0      0 192.168.0.10:59218      192.168.0.8:8080        ESTABLISHED 32339&#x2F;kubelet       </span><br><span class="line">tcp        0      0 192.168.0.10:59166      192.168.0.8:8080        ESTABLISHED 29942&#x2F;kube-proxy    </span><br><span class="line">tcp        0      0 192.168.0.10:59210      192.168.0.8:8080        ESTABLISHED 32339&#x2F;kubelet       </span><br><span class="line">[root@minion2 ~]# systemctl restart flanneld kube-proxy kubelet docker</span><br><span class="line">[root@minion2 ~]# systemctl enable flanneld kube-proxy kubelet docker</span><br><span class="line">[root@minion2 ~]# systemctl status flanneld kube-proxy kubelet docker</span><br></pre></td></tr></table></figure><p>ifconfig查看docker0 IP  minion1和minion2是不一样的</p><p>到master主机上查看集群运行状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME      STATUS    AGE</span><br><span class="line">minion1   Ready     26m</span><br><span class="line">minion2   Ready     7m</span><br></pre></td></tr></table></figure><p><strong>到此整个集群搭建完成</strong></p><blockquote><p>总结：kubernetes 每个节点需要启动的服务和开放端口号<br>在本实验中kubernetes4个结点一共需要启动13个服务，开6个端口号。<br>详情如下：~<br>etcd:一共1个服务 ，通讯使用 2379 端口<br>启动服务<br>[root@master（etcd）~]#systemctl restart etcd<br>master:一共4个服务，通讯使用 8080端口<br>[root@master（etcd）–]# systemctl restart kube-apiserver kube-controller-manager<br>kube-scheduler flanneld<br>minion1:一共4个服务<br>kubeproxy 监控听端口号是 10249 , kubelet 监听端口 10248、10250、10255 三个端口<br>[root@minion1 –]# systemctl restart flanneld kube-proxy kubelet docker<br>minion2:一共4个服务<br>[root@minion2 ~]# systemctl restart flanneld kube-proxy kubelet docker</p></blockquote><h3 id="点击前往作者CSDN博客"><a href="#点击前往作者CSDN博客" class="headerlink" title="点击前往作者CSDN博客"></a><a href="https://me.csdn.net/weixin_45509582">点击前往作者CSDN博客</a></h3>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes集群搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx反向代理+nginx性能优化配置详解</title>
      <link href="posts/3546.html"/>
      <url>posts/3546.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><p>代理服务可简单的分为正向代理和反向代理:</p><p>正向代理: 用于代理内部网络对Internet的连接请求(如VPN/NAT),客户端指定代理服务器,并将本来要直接发送给目标Web服务器的HTTP请求先发送到代理服务器上,然后由代理服务器去访问Web服务器<a id="more"></a>, 并将Web服务器的Response回传给客户端: </p><p>反向代理: 与正向代理相反,如果局域网向Internet提供资源,并让Internet上的其他用户可以访问局域网内资源, 也可以设置一个代理服务器, 它提供的服务就是反向代理. 反向代理服务器接受来自Internet的连接,然后将请求转发给内部网络上的服务器,并将Response回传给Internet上请求连接的客户端: </p><h2 id="一、Nginx反向代理-Web服务器的调度器："><a href="#一、Nginx反向代理-Web服务器的调度器：" class="headerlink" title="一、Nginx反向代理=Web服务器的调度器："></a>一、Nginx反向代理=Web服务器的调度器：</h2><p>（1.）反向代理（Reverse Proxy）方式是指以代理服务器来接受客户端的连接请求，然后将请求转发给网络上的web服务器（可能是apache、nginx、tomcat、iis等），并将从web服务器上得到的结果返回给请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p><p>从上图可以看出：反向代理服务器代理网站Web服务器接收Http请求，对请求进行转发。而且nginx作为反向代理服务器可以根据用户请求的内容把请求转发给后端不同的web服务器，例如静动分离，再例如在nginx上创建多个虚拟主机，这样就成功的做到了在浏览器中输入不同域名（url）的时候访问后端的不同web服务器或web群集。</p><p>（2.）反向代理的作用</p><ul><li>保护网站安全：任何来自Internet的请求都必须先经过代理服务器；</li><li>通过配置缓存功能加速Web请求：可以缓存真实Web服务器上的某些静态资源，减轻真实Web服务器的负载压力；</li><li>实现负载均衡：充当负载均衡服务器均衡地分发请求，平衡集群中各个服务器的负载压力；</li></ul><h2 id="二、什么是nginx"><a href="#二、什么是nginx" class="headerlink" title="二、什么是nginx"></a>二、什么是nginx</h2><h3 id="nginx简介"><a href="#nginx简介" class="headerlink" title="nginx简介"></a>nginx简介</h3><p>Nginx是一款轻量级的网页服务器、反向代理器以及电子邮件代理服务器。因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。Nginx（发音同engine x），它是由俄罗斯程序员Igor Sysoev所开发的。起初是供俄国大型的门户网站及搜索引擎Rambler（俄语：Рамблер）使用。此软件BSD-like协议下发行，可以在UNIX、GNU/Linux、BSD、Mac OS X、Solaris，以及Microsoft Windows等操作系统中运行。</p><p>Nginx的应用现状：</p><p>Nginx 已经在俄罗斯最大的门户网站── Rambler Media（<a href="http://www.rambler.ru）上运行，同时俄罗斯超过20%的虚拟主机平台采用Nginx作为反向代理服务器。">www.rambler.ru）上运行，同时俄罗斯超过20%的虚拟主机平台采用Nginx作为反向代理服务器。</a></p><p>在国内，已经有淘宝、新浪博客、新浪播客、网易新闻、六间房、56.com、Discuz!、水木社区、豆瓣、YUPOO、海内、迅雷在线等多家网站使用 Nginx 作为Web服务器或反向代理服务器。</p><h3 id="Nginx的核心特点"><a href="#Nginx的核心特点" class="headerlink" title="Nginx的核心特点"></a>Nginx的核心特点</h3><ul><li><p>跨平台：Nginx 可以在大多数OS编译运行，而且也有Windows的版本；</p></li><li><p>配置异常简单：非常容易上手。</p></li><li><p>非阻塞、高并发连接：官方测试能够支撑5万并发连接，在实际生产环境中跑到2～3万并发连接数。（这得益于Nginx使用了最新的epoll模型）；</p></li></ul><p>注意：</p><p>对于一个Web服务器来说，首先看一个请求的基本过程：建立连接—接收数据—发送数据，在系统底层看来：上述过程（建立连接—接收数据—发送数据）在系统底层就是读写事件。</p><p>如果采用阻塞调用的方式，当读写事件没有准备好时，那么就只能等待，当前线程被挂起，等事件准备好了，才能进行读写事件。</p><p>如果采用非阻塞调用的方式：事件马上返回，告诉你事件还没准备好呢，过会再来吧。过一会，再来检查一下事件，直到事件准备好了为止，在这期间，你就可以先去做其它事情，然后再来看看事件好了没。虽然不阻塞了，但你得不时地过来检查一下事件的状态，你可以做更多的事情了，但带来的开销也是不小的。非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程</p><ul><li>事件驱动：通信机制采用epoll模型，支持更大的并发连接。</li></ul><p>非阻塞通过不断检查事件的状态来判断是否进行读写操作，这样带来的开销很大，因此就有了异步非阻塞的事件处理机制。这种机制让你可以同时监控多个事件，调用他们是非阻塞的，但可以设置超时时间，在超时时间之内，如果有事件准备好了，就返回。这种机制解决了上面阻塞调用与非阻塞调用的两个问题。</p><p>以epoll模型为例：当事件没有准备好时，就放入epoll(队列)里面。如果有事件准备好了，那么就去处理；当事件没有准备好时，才在 epoll里面等着。这样，我们就可以并发处理大量的并发了，当然，这里的并发请求，是指未处理完的请求。线程只有一个，所以同时能处理的请求当然只有一个了，只是在请求之间进行不断地切换而已，切换也是因为异步事件未准备好，而主动让出的。这里的切换是没有任何代价，你可以理解为循环处理多个准备好的事件。</p><p>多线程方式相比，这种事件处理方式是有很大的优势的，不需要创建线程，每个请求占用的内存也很少，没有上下文切换，事件处理非常的轻量级，并发数再多也不会导致无谓的资源浪费（上下文切换）。对于apache服务器，每个请求会独占一个工作线程，当并发数上到几千时，就同时有几千的线程在处理请求了。这对操作系统来说，是个不小的挑战：因为线程带来的内存占用非常大，线程的上下文切换带来的cpu开销很大，自然性能就上不去，从而导致在高并发场景下性能下降严重。</p><p>总结：通过异步非阻塞的事件处理机制，Nginx实现由进程循环处理多个准备好的事件，从而实现高并发和轻量级。</p><ul><li>Master/Worker结构：一个master进程，生成一个或多个worker进程。注意：<br>Master-Worker设计模式主要包含两个主要组件Master和Worker，Master维护着Worker队列，将请求下发到多个Worker并行执行，Worker主要进行实际逻辑计算，并将结果返回给Master。</li></ul><p>nginx采用这种进程模型有什么好处？采用独立的进程，可以让互相之间不会影响，一个进程退出后，其它进程还在工作，服务不会中断，Master 进程则很快重新启动新的Worker进程。当然，Worker进程的异常退出，肯定是程序有bug了，异常退出，会导致当前Worker上的所有请求失败，不过不会影响到所有work请求，所以降低了风险。</p><ul><li><p>内存消耗小：处理大并发的请求内存消耗非常小。在3万并发连接下，开启的10个Nginx 进程才消耗150M内存（15M*10=150M）。</p></li><li><p>内置的健康检查功能：如果 Nginx 代理的后端的某台 Web 服务器宕机了，不会影响前端访问。</p></li><li><p>节省带宽：支持 GZIP 压缩，可以添加浏览器本地缓存的 Header 头。</p></li><li><p>稳定性高：用于反向代理，宕机的概率微乎其微。</p></li></ul><h2 id="三、Nginx（反向代理）-apache构建Web服务器集群的负载均衡"><a href="#三、Nginx（反向代理）-apache构建Web服务器集群的负载均衡" class="headerlink" title="三、Nginx（反向代理）+apache构建Web服务器集群的负载均衡"></a>三、Nginx（反向代理）+apache构建Web服务器集群的负载均衡</h2><p>nginx配置反向代理</p><p>配置nginx作为反向代理和负载均衡，同时利用其缓存功能，将静态页面放在nginx上缓存，以达到降低后端服务器连接数的目的并检查后端web服务器的健康状况。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>环境：</p><p>OS:centos7.2</p><p>nginx：192.168.197.169</p><p>apache1:192.168.197.167</p><p>apache2:192.168.197.168</p><p>（1.）安装zlib-devel、pcre-devel等Nginx相关依赖包以及gcc编译环境</p><p>yum -y install gcc gcc-c++ make libtool zlib zlib-devel pcre pcre-devel openssl openssl-devel</p><p>注意：</p><p>结合proxy和upstream模块实现后端web负载均衡</p><p>使用proxy模块实现静态文件缓存</p><p>结合nginx默认自带的 ngx_http_proxy_module 模块 和ngx_http_upstream_module模块实现后端服务器的健康检查，也可以使用第三方模块nginx_upstream_check_module</p><p>使用nginx-sticky-module扩展模块实现Cookie会话黏贴（保持会话）</p><p>使用ngx_cache_purge实现更强大的缓存清除功能</p><p>上面提到的2个模块都属于第三方扩展模块，需要提前下好源码，然后编译时通过–add-moudle=src_path一起安装。</p><p>（2.）创建Nginx用户和组，并且把用户加入到组里不让用户在控制台登录</p><p>[root@kang ~]# groupadd www<br>[root@kang ~]# useradd -g www www -s /sbin/nologin<br>（3.）编译安装Nginx<br>可以到官网去下载最新版本Nginx：<a href="http://nginx.org/download/nginx-1.13.8.tar.gz">http://nginx.org/download/nginx-1.13.8.tar.gz</a></p><p>本章使用的是nginx-1.10.2.tar.gz版本来演示：</p><p>#tar zxf nginx-1.10.2.tar.gz</p><p>#tar zxf ngx_cache_purge-2.3.tar.gz</p><p> #tar zxf master.tar.gz</p><p>[root@kang ~]# tar zxf nginx-1.10.2.tar.gz<br>[root@kang ~]# tar zxf ngx_cache_purge-2.3.tar.gz<br>[root@kang ~]# tar zxf master.tar.gz<br>[root@kang ~]# cd nginx-1.10.2/<br>[root@kang nginx-1.10.2]# </p><p>注意：nginx的所有模块必须在编译的时候添加，不能再运行的时候动态加载。<br>[root@kang nginx-1.10.2]#  ./configure –prefix=/usr/local/nginx1.10 –user=www –group=www –with-http_stub_status_module –with-http_realip_module –with-http_ssl_module –with-http_gzip_static_module –http-client-body-temp-path=/var/tmp/nginx/client –http-proxy-temp-path=/var/tmp/nginx/proxy –http-fastcgi-temp-path=/var/tmp/nginx/fcgi –with-pcre –add-module=../ngx_cache_purge-2.3 –with-http_flv_module  –add-module=../nginx-goodies-nginx-sticky-module-ng-08a395c66e42</p><p>[root@kang nginx-1.10.2]# make &amp;&amp; make install</p><p>注意：nginx的所有模块必须在编译的时候添加，不能再运行的时候动态加载。</p><p>（4.）优化nginx程序的执行路径</p><p>[root@kang nginx-1.10.2]# ln -s /usr/local/nginx1.10/sbin/nginx /usr/local/sbin/<br>（5.）检测Nginx服务是否有错误<br>[root@kang nginx-1.10.2]# nginx -t<br>发现报如下错误信息：</p><p>（6.）那是因为没有那个指定的目录，所以接下来创建指定的目录，并设置相关操作权限</p><p>[root@kang nginx-1.10.2]# mkdir -p /var/tmp/nginx/client<br>[root@kang nginx-1.10.2]# chown -R www:www /var/tmp/nginx/<br>（7.）再次测试执行<br>nginx -t</p><p>2.编写Nginx服务脚本</p><h3 id="编写Nginx服务脚本"><a href="#编写Nginx服务脚本" class="headerlink" title="编写Nginx服务脚本"></a>编写Nginx服务脚本</h3><p>[root@kang ~]# vi /etc/init.d/nginx<br> 内容如下：<br>#!/bin/bash<br>#chkconfig: 2345 99 20<br>#description: Nginx Service Control Script<br>PROG=”/usr/local/nginx1.10/sbin/nginx”<br>PIDF=”/usr/local/nginx1.10/logs/nginx.pid”<br>case “$1” in<br>  start)<br>   netstat -anplt |grep “:80” &amp;&gt; /dev/null &amp;&amp; pgrep “nginx” &amp;&gt; /dev/null<br>   if [ $? -eq 0 ]<br>   then<br>     echo “Nginx service already running.”<br>   else<br>     $PROG -t &amp;&gt; /dev/null<br>     if [ $? -eq 0 ] ; then<br>       $PROG<br>       echo “Nginx service start success.”<br>     else<br>     $PROG -t<br>     fi<br>   fi<br>   ;;<br>  stop)<br>   netstat -anplt |grep “:80” &amp;&gt; /dev/null &amp;&amp; pgrep “nginx” &amp;&gt; /dev/null<br>   if [ $? -eq 0 ]<br>   then<br>    kill -s QUIT $(cat $PIDF)<br>    echo “Nginx service stop success.”<br>   else<br>    echo “Nginx service already stop”<br>   fi<br>   ;;<br>  restart)<br>    $0 stop<br>    $0 start<br>    ;;<br>  status)<br>   netstat -anplt |grep “:80” &amp;&gt; /dev/null &amp;&amp; pgrep “nginx” &amp;&gt; /dev/null<br>   if [ $? -eq 0 ]<br>   then<br>     echo “Nginx service is running.”<br>   else<br>     echo “Nginx is stop.”<br>   fi<br>  ;;<br>  reload)<br>   netstat -anplt |grep “:80” &amp;&gt; /dev/null &amp;&amp; pgrep “nginx” &amp;&gt; /dev/null<br>   if [ $? -eq 0 ]<br>   then<br>    $PROG -t &amp;&gt; /dev/null<br>    if [ $? -eq 0 ] ; then<br>      kill -s HUP $(cat $PIDF)<br>      echo “reload Nginx config success.”<br>    else<br>      $PROG -t<br>    fi<br>   else<br>    echo “Nginx service is not run.”<br>   fi<br>    ;;<br>  *)<br>   echo “Usage: $0 {start|stop|restart|reload}”<br>   exit 1<br>esac</p><p>（2.）给脚本添加可执行权限，以及设置服务开机自启动</p><p>[root@kang ~]# chmod +x /etc/init.d/nginx<br>[root@kang ~]# chkconfig –add nginx<br>[root@kang ~]# chkconfig nginx on<br>（3.）启动Nginx服务，查看端口</p><p>（4.）访问Nginx网站测试</p><p>注意：关闭防火墙或者放行80端口：</p><p>[root@kang ~]# firewall-cmd –permanent –add-port=80/tcp<br>success<br>[root@kang ~]# firewall-cmd  –reload<br>success<br>[root@kang ~]# </p><p>注意：如果你想在已安装好的nginx上添加第三方模块，依然需要重新编译，但为了不覆盖你原有的配置，请不要make install，而是直接拷贝可执行文件：</p><p>[root@kang ~]# nginx -V</p><p>[root@www nginx-1.10.2]#./configure  –add-module=……   #你的第三方模块<br>[root@www nginx-1.10.2] #make后不要make install,改为手动拷贝，先备份<br>[root@www nginx-1.10.2] #cp /usr/local/nginx1.10/sbin/nginx /usr/local/nginx1.10/sbin/nginx.bak<br>[root@www nginx-1.10.2] #cp objs/nginx /usr/local/nginx1.10/sbin/nginx</p><h2 id="相关模块功能详解"><a href="#相关模块功能详解" class="headerlink" title="相关模块功能详解"></a>相关模块功能详解</h2><p>（1.）查看Nginx加载的模块</p><p>注意：nginx的所有模块必须在编译的时候添加，不能再运行的时候动态加载。</p><p>（2.）nginx-sticky-module模块：<br>到同一个后端服务器上处理，这样一定程度上可以解决多个backend servers的session同步的问题 —— 因为不再需要同步，而RR轮询模式必须要运维人员自己考虑session同步的实现。<br>这个模块的作用是通过cookie黏贴的方式将来自同一个客户端（浏览器）的请求发送</p><p>另外内置的 ip_hash 也可以实现根据客户端IP来分发请求，但它很容易造成负载不均衡的情况，而如果nginx前面有CDN网络或者来自同一局域网的访问，它接收的客户端IP是一样的，容易造成负载不均衡现象。nginx-sticky-module的cookie过期时间，默认浏览器关闭就过期。</p><p>这个模块并不合适不支持 Cookie 或手动禁用了cookie的浏览器，此时默认sticky就会切换成RR。它不能与ip_hash同时使用。</p><p>例如：<br>upstream backend {<br>        server 192.168.31.141:80 weight=1;<br>        server 192.168.31.250:80 weight=1;<br>        sticky; 重点模块<br>}<br>配置起来超级简单，一般来说一个sticky指令就够了。</p><p>相关信息可以查看官方文档<a href="https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng">https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng</a></p><p> （3.）load-balance其它调度方案：</p><p>这里顺带介绍一下nginx的负载均衡模块支持的其它调度算法：</p><p>轮询（默认） ：每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响。Weight 指定轮询权值，Weight值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下。</p><p>ip_hash ： 每个请求按访问IP的hash结果分配，这样来自同一个IP的访客固定访问一个后端服务器，有效解决了动态网页存在的session共享问题。当然如果这个节点不可用了，会发到下个节点，而此时没有session同步的话就注销掉了。</p><p>least_conn ：请求被发送到当前活跃连接最少的realserver上。会考虑weight的值。</p><p>url_hash ： 此方法按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身是不支持url_hash的，如果需要使用这种调度算法，必须安装Nginx 的hash软件包 nginx_upstream_hash 。</p><p>fair ：这是比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx本身是不支持fair的，如果需要使用这种调度算法，必须下载Nginx的 upstream_fair 模块。</p><p>（4.）负载均衡与健康检查：</p><p>严格来说，nginx自带是没有针对负载均衡后端节点的健康检查的，但是可以通过默认自带的 ngx_http_proxy_module 模块和ngx_http_upstream_module 模块中的相关指令来完成当后端节点出现故障时，自动切换到下一个节点来提供访问。</p><p>例如：</p><p>upstream backend {<br>        sticky;<br>        server 192.168.31.141:80 weight=1 max_fails=2 fail_timeout=10s;<br>        server 192.168.31.250:80 weight=1 max_fails=2 fail_timeout=10s;<br>}<br>server {<br>   ……<br>location / {<br>            proxy_pass <a href="http://backend/">http://backend</a>;<br>}<br>……<br>}<br>weight ： 轮询权值也是可以用在ip_hash的，默认值为1</p><p>max_fails ： 允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream模块定义的错误。</p><p>fail_timeout ： 有两层含义，一是在10s 时间内最多容许2 次失败；二是在经历了 2 次失败以后，10s时间内不分配请求到这台服务器。</p><p>（5.）nginx的proxy缓存使用：</p><p>缓存也就是将js、css、image等静态文件从后端服务器缓存到nginx指定的缓存目录下，既可以减轻后端服务器负担，也可以加快访问速度，但这样缓存及时清理成为了一个问题，所以需要 ngx_cache_purge 这个模块来在过期时间未到之前，手动清理缓存。</p><p>proxy模块中常用的指令时proxy_pass和proxy_cache.</p><p>nginx的web缓存功能的主要是由proxy_cache、fastcgi_cache指令集和相关指令集完成，proxy_cache指令负责反向代理缓存后端服务器的静态内容，fastcgi_cache主要用来处理FastCGI动态进程缓存。</p><p>例如：</p><p>http {<br>    #$upstream_cache_status记录缓存命中率<br>log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘<br>                      ‘“$upstream_cache_status”‘;<br>access_log  logs/access.log  main;<br>proxy_buffering on;   #代理的时候，开启或关闭缓冲后端服务器的响应<br>proxy_temp_path /usr/local/nginx1.10/proxy_temp;<br>   proxy_cache_path /usr/local/nginx1.10/proxy_cache levels=1:2 keys_zone=my-cache:100m  inactive=600m max_size=2g;<br>    server {<br>        listen       80;<br>        server_name  localhost;<br>        root   html;<br>        index  index.php index.html index.htm;<br>        #ngx_cache_purge实现缓存清除<br>        location  ~/purge(/.*) {<br>           allow 127.0.0.1;<br>           allow 192.168.31.0/24;<br>           deny all;<br>           proxy_cache_purge my-cache $host$1$is_args$args;<br>        }<br>      location ~ .<em>.(gif|jpg|png|html|htm|css|js|ico|swf|pdf)(.</em>) {<br>           proxy_pass  <a href="http://backend/">http://backend</a>;<br>           proxy_redirect off;<br>           proxy_set_header Host $host;<br>           proxy_set_header X-Real-IP $remote_addr;<br>           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>           proxy_ignore_headers Set-Cookie;<br>proxy_hide_header Set-Cookie;<br>           proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;<br>           proxy_cache my-cache;<br>           add_header Nginx-Cache $upstream_cache_status;<br>           proxy_cache_valid 200 304 301 302 8h;<br>           proxy_cache_valid 404 1m;<br>           proxy_cache_valid any 1d;<br>           proxy_cache_key $host$uri$is_args$args;<br>           expires 30d;<br>       }<br>相关选项说明：</p><p>proxy_buffering on; 代理的时候，开启或关闭缓冲后端服务器的响应。</p><p>当开启缓冲时，nginx尽可能快地从被代理的服务器接收响应，再将它存入缓冲区中。</p><p>proxy_temp_path ： 缓存临时目录。后端的响应并不直接返回客户端，而是先写到一个临时文件中，然后被rename一下当做缓存放在 proxy_cache_path 。0.8.9版本以后允许temp和cache两个目录在不同文件系统上（分区），然而为了减少性能损失还是建议把它们设成一个文件系统上。</p><p>proxy_cache_path： 设置缓存目录，目录里的文件名是cache_key 的MD5值。</p><p>levels=1:2 keys_zone=my-cache:100m表示采用2级目录结构，第一层目录只有一个字符，是由levels=1:2设置，总共二层目录，子目录名字由二个字符组成。Web缓存区名称为my-cache，内存缓存空间大小为100MB，这个缓冲zone可以被多次使用。文件系统上看到的缓存文件名类似于 /usr/local/nginx1.10/proxy_cache/c/29/b7f54b2df7773722d382f4809d65029c。</p><p>inactive=600 max_size=2g表示600分钟没有被访问的内容自动清除，硬盘最大缓存空间为2GB，超过这个大学将清除最近最少使用的数据。</p><p>需要在默认情况，nginx不缓存从后端响应的http头中带有Set-Cookie的对象。如果客户端发送的请求带有Cookie header，varnish将忽略缓存，直接将请求传递到后端。nginx中通过proxy_ignore_headers设置忽略它们，设置方法如下：</p><p>解决办法：  </p><p>proxy_ignore_headers Set-Cookie;</p><p>proxy_hide_header Set-Cookie;<br>proxy_cache ： 引用前面定义的缓存区 my-cache</p><p>proxy_cache_key ：定义如何生成缓存的键，设置web缓存的key值，nginx根据key值md5哈希存储缓存</p><p>proxy_cache_valid ： 为不同的响应状态码设置不同的缓存时间，比如200、302等正常结果可以缓存的时间长点，而404、500等缓存时间设置短一些，这个时间到了文件就会过期，而不论是否刚被访问过。</p><p>add_header指令来设置response header,语法: add_header name value;</p><p>$upstream_cache_status这个变量来显示缓存的状态，我们可以在配置中添加一个http头来显示这一状态，</p><p>$upstream_cache_status包含以下几种状态： </p><p>·MISS 未命中，请求被传送到后端<br>·HIT 缓存命中<br>·EXPIRED 缓存已经过期请求被传送到后端<br>·UPDATING 正在更新缓存，将使用旧的应答<br>·STALE 后端将得到过期的应答</p><p> expires ： 在响应头里设置Expires:或Cache-Control:max-age，返回给客户端的浏览器缓存失效时间。</p><h2 id="四、配置nginx反向代理：反向代理-负载均衡-健康探测"><a href="#四、配置nginx反向代理：反向代理-负载均衡-健康探测" class="headerlink" title="四、配置nginx反向代理：反向代理+负载均衡+健康探测"></a>四、配置nginx反向代理：反向代理+负载均衡+健康探测</h2><p>（1.）下面的Nginx.conf实现nginx在前端做反向代理服务器的完整配置文件的例子，处理js、png等静态文件，jsp/php等动态请求转发到其它服务器tomcat/apache</p><p>例如：<br>user  www www;<br>worker_processes  4;<br>worker_cpu_affinity 0001 0010 0100 1000;<br>error_log  logs/error.log;<br>#error_log  logs/error.log  notice;<br>#error_log  logs/error.log  info;<br>worker_rlimit_nofile 10240;<br>pid        logs/nginx.pid;<br>events {<br>    use epoll;<br>    worker_connections  4096;<br>}<br>http {<br>    include       mime.types;<br>    default_type  application/octet-stream;<br>    log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘<br>                      ‘“$upstream_cache_status”‘;<br>access_log  logs/access.log  main;<br>server_tokens off;<br>    sendfile        on;<br>    #tcp_nopush     on;<br>    #keepalive_timeout  0;<br>    keepalive_timeout  65;<br>    #Compression Settings<br>    gzip on;<br>    gzip_comp_level 6;<br>    gzip_http_version 1.1;<br>    gzip_proxied any;<br>    gzip_min_length 1k;<br>    gzip_buffers 16 8k;<br>    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;<br>    gzip_vary on;<br>    #end gzip<br>    # http_proxy Settings<br>    client_max_body_size   10m;<br>    client_body_buffer_size   128k;<br>    proxy_connect_timeout   75;<br>    proxy_send_timeout   75;<br>    proxy_read_timeout   75;<br>    proxy_buffer_size   4k;<br>    proxy_buffers   4 32k;<br>    proxy_busy_buffers_size   64k;<br>proxy_temp_file_write_size  64k;<br>proxy_buffering on;<br>    proxy_temp_path /usr/local/nginx1.10/proxy_temp;<br>    proxy_cache_path /usr/local/nginx1.10/proxy_cache levels=1:2 keys_zone=my-cache:100m max_size=1000m inactive=600m max_size=2g;<br>    #load balance Settings<br>    upstream backend {<br>        sticky;<br>        server 192.168.31.141:80 weight=1 max_fails=2 fail_timeout=10s;<br>        server 192.168.31.250:80 weight=1 max_fails=2 fail_timeout=10s;<br>    }<br>    #virtual host Settings<br>    server {<br>        listen       80;<br>        server_name  localhost;<br>        charset utf-8;<br>        location  ~/purge(/.*) {<br>           allow 127.0.0.1;<br>           allow 192.168.31.0/24;<br>           deny all;<br>           proxy_cache_purge my-cache $host$1$is_args$args;<br>        }<br>        location / {<br>            index  index.php index.html index.htm;<br>            proxy_pass        <a href="http://backend/">http://backend</a>;<br>            proxy_redirect off;<br>            proxy_set_header  Host  $host;<br>            proxy_set_header  X-Real-IP  $remote_addr;<br>            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;<br>            proxy_ignore_headers Set-Cookie;<br>proxy_hide_header Set-Cookie;<br>            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;<br>        }<br>        location ~ .<em>.(gif|jpg|png|html|htm|css|js|ico|swf|pdf)(.</em>) {<br>           proxy_pass  <a href="http://backend/">http://backend</a>;<br>           proxy_redirect off;<br>           proxy_set_header Host $host;<br>           proxy_set_header X-Real-IP $remote_addr;<br>           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>           proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;<br>           proxy_cache my-cache;<br>           add_header Nginx-Cache $upstream_cache_status;<br>           proxy_cache_valid 200 304 301 302 8h;<br>           proxy_cache_valid 404 1m;<br>           proxy_cache_valid any 1d;<br>           proxy_cache_key $host$uri$is_args$args;<br>           expires 30d;<br>        }<br>        location /nginx_status {<br>            stub_status on;<br>            access_log off;<br>            allow 192.168.31.0/24;<br>            deny all;<br>        }<br>    }<br>}</p><p>（2.）配置Nginx<br>[root@kang ~]# vim  /usr/local/nginx1.10/conf/nginx.conf</p><h3 id="常用指令说明"><a href="#常用指令说明" class="headerlink" title="常用指令说明:"></a>常用指令说明:</h3><p>main全局配置:</p><p>woker_processes 4<br>在配置文件的顶级main部分，worker角色的工作进程的个数，master进程是接收并分配请求给worker处理。这个数值简单一点可以设置为cpu的核数grep ^processor /proc/cpuinfo | wc -l，也是 auto 值，如果开启了ssl和gzip更应该设置成与逻辑CPU数量一样甚至为2倍，可以减少I/O操作。如果nginx服务器还有其它服务，可以考虑适当减少。</p><p>worker_cpu_affinity<br>也是写在main部分。在高并发情况下，通过设置cpu粘性来降低由于多CPU核切换造成的寄存器等现场重建带来的性能损耗。如worker_cpu_affinity 0001 0010 0100 1000; （四核）。</p><p>附：</p><p>CPU工作状况：（输入 top 后，按1 查看）</p><p>‘<br>上面的配置表示：1核CPU，开启1个进程。0001表示开启第一个cpu内核， 0010表示开启第二个cpu内核，依次类推；有多少个核，就有几位数，1表示该内核开启，0表示该内核关闭。</p><p>例如：</p><p>2核CPU，开启2个进程</p><p>worker_processes  2;</p><p>worker_cpu_affinity 01 10;<br>2核CPU，开启4进程</p><p>worker_processes 4;<br>worker_cpu_affinity 01 10 01 10;<br>2核CPU，开启8进程</p><p>worker_processes  8;<br>worker_cpu_affinity 01 10 01 10 01 10 01 10;<br>8核CPU，开启2进程</p><p>worker_processes  2;<br>worker_cpu_affinity 10101010  01010101;<br>说明：10101010表示开启了第2,4,6,8内核，01010101表示开始了1,3,5,7内核</p><p>通过 apache 的ab测试查看nginx对CPU的使用状况：</p><p>如果多个CPU内核的利用率都相差不多，证明nginx己经成功的利用了多核CPU。测试结束后，CPU内核的负载应该都同时降低。</p><p>worker_connections 4096<br>写在events部分。每一个worker进程能并发处理（发起）的最大连接数（包含与客户端或后端被代理服务器间等所有连接数）。<br>worker_rlimit_nofile 10240<br>写在main部分。worker进程的最大打开文件数限制。默认是没有设置，如果没设置的话，这个值为操作系统的限制(ulimit -n)。可以限制为操作系统最大的限制65535。把这个值设高，这样nginx就不会有“too many open files”问题了。</p><p>use epoll</p><p>写在events部分。在Linux操作系统下，nginx默认使用epoll事件模型，得益于此，nginx在Linux操作系统下效率相当高。同时Nginx在OpenBSD或FreeBSD操作系统上采用类似于epoll的高效事件模型kqueue。</p><p>http服务器:<br>与提供http服务相关的一些配置参数。例如：是否使用keepalive啊，是否使用gzip进行压缩等。</p><p>sendfile on<br>开启高效文件传输模式。</p><p>keepalive_timeout 65 : </p><p>长连接超时时间，单位是秒，长连接请求大量小文件的时候，可以减少重建连接的开销，如果设置时间过长，用户又多，长时间保持连接会占用大量资源。</p><p>client_max_body_size 10m<br>允许客户端请求的最大单文件字节数。如果有上传较大文件，请设置它的限制值</p><p>client_body_buffer_size 128k<br>缓冲区代理缓冲用户端请求的最大字节数</p><p>server_tokens off;<br>隐藏nginx的版本号</p><p>模块http_proxy：<br>这个模块实现的是nginx作为反向代理服务器的功能，包括缓存功能</p><p>proxy_connect_timeout 60<br>nginx跟后端服务器连接超时时间(代理连接超时)</p><p>proxy_read_timeout 60</p><p>定义从后端服务器读取响应的超时。此超时是指相邻两次读操作之间的最长时间间隔，而不是整个响应传输完成的最长时间。如果后端服务器在超时时间段内没有传输任何数据，连接将被关闭。</p><p>定义向后端服务器传输请求的超时。此超时是指相邻两次写操作之间的最长时间间隔，而不是整个请求传输完成的最长时间。如果后端服务器在超时时间段内没有接收到任何数据，连接将被关闭。</p><p>proxy_buffer_size 4k<br>设置缓冲区的大小为size。nginx从被代理的服务器读取响应时，使用该缓冲区保存响应的开始部分。这部分通常包含着一个小小的响应头。该缓冲区大小默认等于proxy_buffers指令设置的一块缓冲区的大小，但它也可以被设置得更小。</p><p>proxy_buffers 8 4k<br>语法: proxy_buffers the_number is_size;<br>为每个连接设置缓冲区的数量为number，每块缓冲区的大小为size。这些缓冲区用于保存从被代理的服务器读取的响应。每块缓冲区默认等于一个内存页的大小。这个值是4K还是8K，取决于平台。</p><p>附：查看Linux内存页大小</p><p>[root@kang ~]# getconf PAGESIZE<br>4096<br>[root@kang ~]# </p><p>或者<br> getconf PAGE_SIZE<br>proxy_busy_buffers_size 64k</p><p>高负荷下缓冲大小（默认大小是proxy_buffers指令设置单块缓冲大小的2倍）</p><p> proxy_max_temp_file_size</p><p>当 proxy_buffers 放不下后端服务器的响应内容时，会将一部分保存到硬盘的临时文件中，这个值用来设置最大临时文件大小，默认1024M。</p><p> proxy_temp_file_write_size 64k</p><p>当缓存被代理的服务器响应到临时文件时，这个选项限制每次写临时文件的大小。</p><p>模块http_gzip：</p><p>gzip on : 开启gzip压缩输出，减少网络传输。</p><p>gzip_min_length 1k ： 设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。建议设置成大于1k的字节数，小于1k可能会越压越大。</p><p>gzip_buffers 4 16k ： 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。416k代表以16k为单位，按照原始数据大小以16k为单位的4倍申请内存。如果没有设置，默认值是申请跟原始数据相同大小的内存空间去存储gzip压缩结果</p><p>gzip_http_version 1.1 ： 用于识别 http 协议的版本，早期的浏览器不支持 Gzip 压缩，用户就会看到乱码，所以为了支持前期版本加上了这个选项，如果你用了 Nginx 的反向代理并期望也启用 Gzip 压缩的话，由于末端通信是 http/1.1，故请设置为 1.1。</p><p>gzip_comp_level 6 ： gzip压缩比，1压缩比最小处理速度最快，9压缩比最大但处理速度最慢(传输快但比较消耗cpu)</p><p>gzip_types ：匹配mime类型进行压缩，无论是否指定”text/html”类型总是会被压缩的。</p><p>默认值: gzip_types text/html (默认不对js/css文件进行压缩)<br>#压缩类型，匹配MIME类型进行压缩<br>#不能用通配符 text/*<br>#(无论是否指定)text/html默认已经压缩<br>#设置哪压缩种文本文件可参考 conf/mime.types</p><p>gzip_proxied any ： Nginx作为反向代理的时候启用，根据某些请求和应答来决定是否在对代理请求的应答启用gzip压缩，是否压缩取决于请求头中的“Via”字段，指令中可以同时指定多个不同的参数，意义如下：</p><p>off – 关闭所有的代理结果数据的压缩<br>expired – 启用压缩，如果header头中包含 “Expires” 头信息<br>no-cache – 启用压缩，如果header头中包含 “Cache-Control:no-cache” 头信息<br>no-store – 启用压缩，如果header头中包含 “Cache-Control:no-store” 头信息<br>private – 启用压缩，如果header头中包含 “Cache-Control:private” 头信息<br>no_last_modified – 启用压缩,如果header头中不包含 “Last-Modified” 头信息<br>no_etag – 启用压缩 ,如果header头中不包含 “ETag” 头信息<br>auth – 启用压缩 , 如果header头中包含 “Authorization” 头信息<br>any – 无条件启用压缩</p><p> gzip_vary on ：和http头有关系，加个vary头，给代理服务器用的，有的浏览器支持压缩，有的不支持，所以避免浪费不支持的也压缩，所以根据客户端的HTTP头来判断，是否需要压缩</p><p>模块http_stream：<br>这个模块通过一个简单的调度算法来实现客户端IP到后端服务器的负载均衡，upstream后接负载均衡器的名字，后端realserver以 host:port options; 方式组织在 {} 中。如果后端被代理的只有一台，也可以直接写在 proxy_pass 。</p><p>Location:</p><p>root /var/www/html</p><p>定义服务器的默认网站根目录位置。如果locationURL匹配的是子目录或文件，root没什么作用，一般放在server指令里面或/下。</p><p>index index.jsp index.html index.htm</p><p>定义路径下默认访问的文件名，一般跟着root放</p><p>proxy_pass http:/backend</p><p>请求转向backend定义的服务器列表，即反向代理，对应upstream负载均衡器。也可以proxy_pass <a href="http://ip:port。">http://ip:port。</a></p><p>proxy_redirectoff;</p><p>指定是否修改被代理服务器返回的响应头中的location头域跟refresh头域数值</p><p>例如：</p><p>设置后端服务器“Location”响应头和“Refresh”响应头的替换文本。假设后端服务器返回的响应头是 “Location: <a href="http://localhost:8000/two/some/uri/%E2%80%9D%EF%BC%8C%E9%82%A3%E4%B9%88%E6%8C%87%E4%BB%A4">http://localhost:8000/two/some/uri/”，那么指令</a></p><p>proxy_redirect<a href="http://localhost:8000/two/">http://localhost:8000/two/</a> <a href="http://frontend/one/">http://frontend/one/</a>;</p><p>将把字符串改写为 “Location: <a href="http://frontend/one/some/uri/%E2%80%9D%E3%80%82">http://frontend/one/some/uri/”。</a></p><p>proxy_set_header Host$host;</p><p>允许重新定义或者添加发往后端服务器的请求头。</p><p>Host的含义是表明请求的主机名，nginx反向代理服务器会向后端真实服务器发送请求，并且请求头中的host字段重写为proxy_pass指令设置的服务器。因为nginx作为反向代理使用，而如果后端真实的服务器设置有类似防盗链或者根据http请求头中的host字段来进行路由或判断功能的话，如果反向代理层的nginx不重写请求头中的host字段，将会导致请求失败。</p><p>proxy_set_headerX-Forwarded-For $proxy_add_x_forwarded_for;</p><p>后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</p><p>X_Forward_For字段表示该条http请求是有谁发起的？如果反向代理服务器不重写该请求头的话，那么后端真实服务器在处理时会认为所有的请求都来自反向代理服务器，如果后端有防攻击策略的话，那么机器就被封掉了。因此，在配置用作反向代理的nginx中一般会增加两条配置，修改http的请求头：<br>proxy_set_header Host $host;<br>proxy_set_header X-Forward-For $remote_addr;</p><p>proxy_next_upstream error timeoutinvalid_header http_500 http_502 http_503 http_504;</p><p>增加故障转移，如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。</p><p>proxy_set_headerX-Real-IP $remote_addr;</p><p>web服务器端获得用户的真实ip但是，实际上要获得用户的真实ip，也可以通过X-Forward-For</p><h2 id="五、验证：nginx反向代理的缓存功能、负载均衡及健康检查"><a href="#五、验证：nginx反向代理的缓存功能、负载均衡及健康检查" class="headerlink" title="五、验证：nginx反向代理的缓存功能、负载均衡及健康检查"></a>五、验证：nginx反向代理的缓存功能、负载均衡及健康检查</h2><p>（1.）下面我们来测试一下缓存功能</p><p>如果在缓存时间之内需要更新被缓存的静态文件怎么办呢，这时候就需要手动来清除缓存了。</p><p>ngx_cache_pure清除缓存模块使用说明</p><p>用谷歌浏览器测试的时候，可以按F12调用开发工具，选择Network选项，我们可以看到，Response Headers，在这里我们可以看到，我们请求的是否缓存</p><p>从图中我们可以看到，我们访问的服务器是192.168.197.169，缓存命中。</p><p>也可以查看缓存目录或nginx的访问日志</p><p>清除缓存:</p><p>上述配置的proxy_cache_purge指令用于方便的清除缓存，但必须按照第三方的 ngx_cache_purge 模块才能使用</p><p>使用 ngx_cache_purge 模块清除缓存（直接删除缓存目录下的文件也算一种办法）：<br>GET方式请求URL</p><p>即使用配置文件中的location ~ /purge(/.*)</p><p>浏览器访问<a href="http://192.168.197.169/purge/your/may/path%E6%9D%A5%E6%B8%85%E9%99%A4%E7%BC%93%E5%AD%98">http://192.168.197.169/purge/your/may/path来清除缓存</a></p><p>缓存清除成功。</p><p>备注：<br>      （1）purge是ngx_cache_pure 模块指令<br>      （2）your/may/path 是要清除的缓存文件URL路径</p><p>（2.）测试负载均衡</p><p>访问Nginx服务器的ip地址，不停刷新页面浏览到后端的两台Apache网站，证明通过反向代理实现了负载均衡测试成功！！！</p><h2 id="扩展知识"><a href="#扩展知识" class="headerlink" title="扩展知识"></a>扩展知识</h2><p>如何修改Nginx版本等信息</p><p>1、vi /usr/local/src/nginx-1.0.12/src/core/nginx.h   #编译前编辑</p><p>#define nginx_version<br>#define NGINX_VERSION<br>#define NGINX_VER<br>#define NGINX_VAR<br>修改上面的信息，即可更改nginx显示版本。<br>2、vi/usr/local/src/nginx-1.0.12/src/http/ngx_http_special_response.c   #编译前编辑<br>static u_char ngx_http_error_full_tail[] =<br>static u_char ngx_http_error_tail[] =<br>修改上面的信息为你自己的。<br>3、vi/usr/local/src/nginx-1.0.12/src/http/ngx_http_header_filter_module.c   #编译前编辑<br>static char ngx_http_server_string[]=<br>修改上面的信息为你自己的。<br>4、编译完成之后，修改/usr/local/nginx/conf目录下面<br>fastcgi.conf、fastcgi.conf.default、fastcgi_params、fastcgi_params.default<br>这四个文件里面的版本名称<br>/usr/local/nginx/sbin/nginx -V  #查看nginx版本号</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>（1.）Nginx的概念、特点、原理（正向、反向代理）、为什么使用Nginx？</p><p>（2.）Nginx的安装、</p><p>（3.）Nginx的优化、（gzip、cache、负载均衡、健康检查、CPU核数、最大连接数、开启epoll模型、第三方模块、模块优化）</p><p>（4.）验证Nginx网页、负载均衡、清除缓存、查看缓存等、</p><p>（5.）Nginx不能动态加载模块，需要提前编译时安装！！！</p><p><a href="https://me.csdn.net/weixin_45509582">原作者博客CSDN</a></p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx反向代理+nginx性能优化配置详解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo迁移至window+githubpush</title>
      <link href="posts/6666.html"/>
      <url>posts/6666.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><ul><li>在windows上安装Git bash</li><li>在windows上安装nodejs</li><li>下载地址：<a href="https://www.git-scm.com/">Git bash</a> ,  <a href="https://nodejs.org/en/">nodejs</a><a id="more"></a></li><li>将如下几个文件，目录拷贝至新的电脑<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br><span class="line"> package.json</span><br><span class="line"> scaffolds/</span><br><span class="line"> source/</span><br><span class="line"> themes/</span><br></pre></td></tr></table></figure></li><li>迁移到linux环境：步骤基本一致，只需保证将以上四个目录拷贝至blog目录，再准备环境，安装hexo即可。<h2 id="Git-bash安装"><a href="#Git-bash安装" class="headerlink" title="Git bash安装"></a>Git bash安装</h2>安装Windows版的Git安装程序</li></ul><p><img src="https://img-blog.csdnimg.cn/20200930150734139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>安装组件：这里可以使用默认选项，点击【Next &gt;】</p><ul><li>图标组件（Additional icons）：选择是否创建桌面快捷方</li><li>桌面浏览（Windows Explorer integration）<ul><li>使用Git Bash方式，shell方式</li><li>受用桌面程序方式</li></ul></li><li>关联配置文件：是否关联git配置文件，该配置文件主要显示文本编辑器样式</li><li>关联shell脚本文件：是否关联Bash命令执行脚本文件</li><li>使用TrueType编码：在命令行中是否使用TrueType编码，该编码是微软和苹果公司制定的通用编码<br><img src="https://img-blog.csdnimg.cn/20200930151134715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>Git自带：使用Git自带的Git Bash命令行工具</li><li>系统自带CMD：使用windows系统的命令行工具</li><li>二者都有：上面二者同时配置，但是注意，这样会将windows中的find.exe和sort.exe工具覆盖，如果不懂这些尽量不要选择<br><img src="https://img-blog.csdnimg.cn/20200930151232313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其余默认下一步即可完成安装。</li></ul><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>因为Hexo基于Node.js开发，所以不管我们是Windwos环境还是Linux环境都需要安装Node.js才能完成Hexo的搭建，安装过程也很简单。<br>安装过程中这个Add to PATH要记得勾选，不然自己配置环境变量很麻烦<br><img src="https://img-blog.csdnimg.cn/20200930151338956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="安装hexo并推送至github"><a href="#安装hexo并推送至github" class="headerlink" title="安装hexo并推送至github"></a>安装hexo并推送至github</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">##安装hexo-cli</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">##查看版本</span><br><span class="line">hexo -v</span><br><span class="line">##安装所需模块</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>安装模块若出现报错请执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf node_modules &amp;&amp; npm install --force</span><br></pre></td></tr></table></figure><p>构建并发布</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>若出现此类报错如图：<br><img src="https://img-blog.csdnimg.cn/20200930152314309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##执行这条命令后正常</span><br><span class="line">git config --<span class="built_in">global</span> core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="免密部署"><a href="#免密部署" class="headerlink" title="免密部署"></a>免密部署</h2><p>公钥的话跟linux系统生成一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C example@<span class="number">163.</span>com</span><br></pre></td></tr></table></figure><p>然后公钥添加至<br><img src="https://img-blog.csdnimg.cn/20200930153334819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>注意修改_config.yml文件中的repo地址，改为ssh方式</p><p>到这里迁移就完成了，<a href="https://alexcld.com/">作者博客</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo迁移至window+githubpush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插入背景音乐</title>
      <link href="posts/6658.html"/>
      <url>posts/6658.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1 id="hexo插入音乐"><a href="#hexo插入音乐" class="headerlink" title="hexo插入音乐"></a>hexo插入音乐</h1><p><a href="https://alexcld.com/">可以到我的博客参考一下样式</a></p><p>两种方式：</p><a id="more"></a><ul><li>单个音乐</li><li>歌单<h3 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h3>这种方式比较简单，直接到网易云搜索需要添加的背景音乐然后生成外链，将外链粘贴到sidebar.swig里边，可以切换粘贴位置以达到自己需要的效果。<br>这里随便找了首歌的外链粘了进去<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /blog/themes/next/layout/_macro/sidebar.swig</span><br><span class="line"></span><br><span class="line">&lt;iframe frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> width=<span class="number">330</span> height=<span class="number">86</span> src=<span class="string">&quot;//music.163.com/outchain/player?type=3&amp;id=2069329741&amp;auto=1&amp;height=66&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h3 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h3>以歌单的形式插入背景音乐，具体操作如下：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vim /blog/themes/next/layout/_macro/sidebar.swig</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="built_in">require</span> APlayer --&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="built_in">require</span> MetingJS--&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!--网易云--&gt;</span><br><span class="line">    &lt;meting-js</span><br><span class="line">      server=<span class="string">&quot;netease&quot;</span></span><br><span class="line">      id=<span class="string">&quot;3129764102&quot;</span></span><br><span class="line">          type=<span class="string">&quot;playlist&quot;</span></span><br><span class="line">          mini=<span class="string">&quot;false&quot;</span></span><br><span class="line">      fixed=<span class="string">&quot;false&quot;</span></span><br><span class="line">      list-folded=<span class="string">&quot;true&quot;</span></span><br><span class="line">      autoplay=<span class="string">&quot;true&quot;</span></span><br><span class="line">      volume=<span class="string">&quot;0.4&quot;</span></span><br><span class="line">      theme=<span class="string">&quot;#FADFA3&quot;</span></span><br><span class="line">      order=<span class="string">&quot;random&quot;</span></span><br><span class="line">          loop=<span class="string">&quot;all&quot;</span></span><br><span class="line">      preload=<span class="string">&quot;auto&quot;</span></span><br><span class="line">      mutex=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">    &lt;/meting-js&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/aside&gt;</span><br><span class="line">  &lt;div id=<span class="string">&quot;sidebar-dimmer&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&#123;% endmacro %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><a href="https://github.com/metowolf/MetingJS">可参考属性</a><br><img src="https://img-blog.csdnimg.cn/20200925165345366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><a href="https://alexcld.com/">效果</a><br><img src="https://img-blog.csdnimg.cn/20200925165548731.png#pic_center" alt="在这里插入图片描述"></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo插入背景音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插入图片及控制大小</title>
      <link href="posts/7854.html"/>
      <url>posts/7854.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先说下hexo插入图片的方式有哪些，hexo默认集成了markdown语法，这里我们就markdown里显示图片的方式引入html方法,三种方法有优有劣，关键看自己的习惯了</p><ul><li>第一种是直接引用markdown插入</li><li>第二种是使用html来引用插入<a id="more"></a></li><li>第三种是之前有讲到过插件引用</li></ul><h2 id="直接引用markdown插入"><a href="#直接引用markdown插入" class="headerlink" title="直接引用markdown插入"></a>直接引用markdown插入</h2><ul><li>首先是直接引用的方法需要在images目录里放入需要引入的图片<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![lena](https:<span class="comment">//alexcld.com/images/pengyuyan.jpg)</span></span><br></pre></td></tr></table></figure></li><li>我这里就直接引用之前的图片了，图片链接自己可以在网上找，</li><li>本地图片的话可以直接使用路径来引用</li><li>这种方法可以是可以，有点小缺点：图片就会靠在左侧，大小也不由自己决定</li></ul><h2 id="使用html方法引入"><a href="#使用html方法引入" class="headerlink" title="使用html方法引入"></a>使用html方法引入</h2><ul><li>第二种就是使用html来引用插入的图片<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;https://alexcld.com/images/pengyuyan.jpg&quot;</span> width=<span class="number">256</span> height=<span class="number">256</span> /&gt;</span><br></pre></td></tr></table></figure></li><li>固定图片大小：width=256,height=256设置的是显示图像的尺寸，src后面接的就是图像对象</li><li>还可以使用百分比的方式来给width,height传参<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;https://alexcld.com/images/pengyuyan.jpg&quot;</span> width=<span class="string">&quot;50%&quot;</span> height=<span class="string">&quot;50%&quot;</span> /&gt;</span><br></pre></td></tr></table></figure></li><li>其中width和height后面的50%就是根据窗口的大小以一定的比例显示图片。值得一说的是，这种按照百分比显示方法，是以width方向为准，并保持纵横比的，换句话说，把设置width的部分去掉，height的值改为任意百分比，显示的图像都是原图大小（个人觉得这根博客窗口有关，毕竟现实截面的宽度相对是固定的，而高度/长度却是变化着的）。因此用此方法的时候，可以把height设置缺省</li><li>如：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;https://alexcld.com/images/pengyuyan.jpg&quot;</span> height=<span class="string">&quot;5%&quot;</span> /&gt;</span><br></pre></td></tr></table></figure></li><li>如果想给图像加个标注，可以这么做：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;https://alexcld.com/images/pengyuyan.jpg&quot;</span> width=<span class="string">&quot;25%&quot;</span> height=<span class="string">&quot;25%&quot;</span> /&gt;</span><br><span class="line">Figure <span class="number">1.</span> xx</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure></li><li>如果想让图和标注间距离增大，可以这么做：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;https://alexcld.com/images/pengyuyan.jpg&quot;</span> width=<span class="string">&quot;25%&quot;</span> height=<span class="string">&quot;25%&quot;</span> /&gt;</span><br><span class="line">$ $</span><br><span class="line">Figure <span class="number">1.</span> xx</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><h2 id="第三种就是是用插件的方式来进行引用图片"><a href="#第三种就是是用插件的方式来进行引用图片" class="headerlink" title="第三种就是是用插件的方式来进行引用图片"></a>第三种就是是用插件的方式来进行引用图片</h2>具体的细节我这里就不再多讲了，可以看下之前的文章：<a href="https://alexcld.com/2020/08/14/%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/">插件的方式引入图片</a><br>效果图的话可以看这里：<a href="https://alexcld.com/2020/09/14/phototest/">效果图</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo插入图片及控制大小 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《若能与你共乘海浪之上》</title>
      <link href="posts/5563.html"/>
      <url>posts/5563.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>剧情大部分是快进看完的<br>何必为了一句承诺<br>女主精神失常 男主失去生命<br>若能与你共乘海浪之上</p><a id="more"></a><img src="https://china-img.soulapp.cn/image/2020-09-14/f10bb896-7c9e-4e7e-8559-9e3f99bfc757-1600046808195.png?x-oss-process=image/resize,m_lfit,w_750," width="70%" />]]></content>
      
      
      <categories>
          
          <category> 好剧推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好剧推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo插入图片</title>
      <link href="posts/1513.html"/>
      <url>posts/1513.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><p>版本：Hexo5.0.2（Hexo3以上即可）</p><p>解决方案如下：</p><ul><li><p>修改配置文件</p><a id="more"></a></li><li><p>在根目录下配置文件_config.yml 中有 post_asset_folder:false改为true。</p></li><li><p>这样在建立文件时，Hexo会自动建立一个与文章同名的文件夹，这样就可以把与该文章相关的所有资源（图片）都放到那个文件夹里方便后面引用</p></li><li><p>我这里放的图片是：sky2.jpg</p></li><li><p>安装插件：hexo-asset-image(插件经测试无问题)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:<span class="comment">//github.com/7ym0n/hexo-asset-image --save（使用cnpm速度相当会快点，当然npm也可以滴）</span></span><br></pre></td></tr></table></figure></li><li><p>使用这个插件来引入图片，而不是网上那些方法里说的用传统md语法相对路径的方法。</p></li><li><p>插入图片时用这种方式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img sky2.jpg This is an test image %&#125;</span><br></pre></td></tr></table></figure></li><li><p>其中sky2.jpg就是你要引用的图片，我这里就是sky2.jpg，后面的This is an test image是图片描述，可以自己修改。</p></li></ul><p>具体示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: A sunny day</span><br><span class="line">date: <span class="number">2020</span>-<span class="number">0</span>8-<span class="number">14</span> <span class="number">11</span>:<span class="number">24</span>:<span class="number">30</span></span><br><span class="line">tags:</span><br><span class="line">        - weather</span><br><span class="line">categories:</span><br><span class="line">        - daily</span><br><span class="line">---</span><br><span class="line">晴れた日より?菜が必要です。</span><br><span class="line">&#123;% asset_img sky2.jpg This is an test image %&#125;</span><br><span class="line">&#123;% asset_img sky3.jpg This is an test image %&#125;</span><br></pre></td></tr></table></figure><ul><li>这样就能成功显示了，测试下吧：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li></ul><p><a href="http://alexcld.com/" title="作者博客">Alex博客</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo插入图片 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
